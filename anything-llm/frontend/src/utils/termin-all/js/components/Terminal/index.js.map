{"version":3,"sources":["../../../../src/js/components/Terminal/index.js"],"names":["compLogic","comp","a","b","parseInt","putCursorAtEnd","el","document","activeElement","focus","setSelectionRange","len","value","length","setTimeout","Terminal","props","componentWillMount","loadPlugins","assembleCommands","setDescriptions","setShortcuts","createTab","componentDidMount","watchConsoleLogging","force","allowTabs","promptSymbol","tabs","state","id","push","handleChange","handlerKeyPress","args","registerInstance","setState","activeTab","removeTab","index","splice","getAppContent","show","minimise","getBar","getContent","getNote","color","style","showActions","hideTopBar","actionHandlers","height","animation","fontFamily","fontSize","setActiveTab","closedTitle","toggleState","closedMessage","getPluginData","pluginData","name","setPluginData","data","descriptions","defaultDesciptions","plugins","plugin","shortcuts","defaultShortcuts","setPromptPrefix","instance","promptPrefix","controller","setPromptSymbol","prompt","setFalse","setTrue","setValueWithHistory","position","inputRef","history","historyCounter","checkVersion","ver","test","Error","clean","toLowerCase","replace","split","realSplit","version","checkBools","map","val","indexOf","instances","pluginInstances","pluginMethods","old","find","i","PluginClass","config","api","printLine","bind","removeLine","runCommand","setCanScroll","setScrollPosition","focusInput","getPluginMethod","takeControl","pluginTakeControl","releaseControl","pluginReleaseControl","getData","displayName","setData","os","updateApi","getPublicMethods","_getName","_getVersion","e","console","error","realIndex","insts","filter","newPrompt","newPromptPrefix","oldPrefix","oldPrompt","commands","defaultCommands","autocompleteValue","keysToCheck","Object","keys","key","ratings","findBestMatch","reduce","full","item","target","rating","clearScreen","summary","checkShortcuts","cuts","instanceData","values","forEach","keyInputs","modKey","options","cut","slice","shortcut","action","preventDefault","stopPropagation","editLine","line","_","join","input","saveToHistory","shiftKey","dontShowCommand","res","newHistory","historyProps","afterChange","onKeyPress","tabbed","contents","styles","marginRight","width","display","marginBottom","defaultData","method","canScroll","pos","inp","std","print","readStdOut","lineNumber","inputText","inputArray","command","commandPassThrough","parsedArgs","parse","type","help","needsInstance","commandWasRun","runCommandOnActive","printToActive","showHelp","option","showMsg","msg","clear","echo","description","init","defaultValue","darwin","startState","maximise","barShowing","tabsShowing","openWindow","closeWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","theme","barColor","outputColor","backgroundColor","propTypes","defaultProps","childContextTypes"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-console, react/sort-comp */\r\nimport React, { Component } from 'react';\r\nimport stringSimilarity from 'string-similarity';\r\nimport whatkey from 'whatkey';\r\nimport isEqual from 'lodash.isequal';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { handleLogging } from '../../utils';\r\nimport {\r\n  TerminalPropTypes,\r\n  TerminalContextTypes,\r\n  TerminalDefaultProps,\r\n} from '../types';\r\n\r\nimport { os, pluginMap, uuidv4, getShortcuts, modCommands } from './terminal-utils';\r\nimport { Base, ContainerWrapper, Note } from './styled-elements';\r\n\r\nimport Bar from '../Bar';\r\nimport Content from '../Content/index';\r\nimport Tabs from '../Tabs/index';\r\n\r\nfunction compLogic(comp) {\r\n  switch (comp) {\r\n    case '>':\r\n      return (a, b) => parseInt(a, 10) > parseInt(b, 10);\r\n    case '<':\r\n      return (a, b) => parseInt(a, 10) < parseInt(b, 10);\r\n    case '>=':\r\n      return (a, b) => parseInt(a, 10) >= parseInt(b, 10);\r\n    case '<=':\r\n      return (a, b) => parseInt(a, 10) <= parseInt(b, 10);\r\n    case '!=':\r\n      return (a, b) => a !== b;\r\n    case '=':\r\n    default:\r\n      return (a, b) => a === b;\r\n  }\r\n}\r\n\r\nfunction putCursorAtEnd(el) {\r\n  // Only focus if input isn't already\r\n  if (document.activeElement !== el) {\r\n    el.focus();\r\n  }\r\n\r\n  // If this function exists... (IE 9+)\r\n  if (el.setSelectionRange) {\r\n    // Double the length because Opera is inconsistent about whether a carriage\r\n    // return is one character or two.\r\n    const len = el.value.length * 2;\r\n\r\n    // Timeout seems to be required for Blink\r\n    setTimeout(() => {\r\n      el.setSelectionRange(len, len);\r\n    }, 1);\r\n  } else {\r\n    // As a fallback, replace the contents with itself\r\n    // Doesn't work in Chrome, but Chrome supports setSelectionRange\r\n    el.value = el.value;\r\n  }\r\n}\r\n\r\nclass Terminal extends Component {\r\n  static displayName = 'Terminal';\r\n\r\n  static version = '4.3.0';\r\n\r\n  static propTypes = TerminalPropTypes;\r\n\r\n  static defaultProps = TerminalDefaultProps;\r\n\r\n  static childContextTypes = TerminalContextTypes;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.pluginData = {};\r\n\r\n    this.defaultCommands = {\r\n      // eslint-disable-line react/sort-comp\r\n      show: this.showMsg,\r\n      clear: {\r\n        method: this.clearScreen,\r\n        needsInstance: true,\r\n      },\r\n      help: {\r\n        method: this.showHelp,\r\n        needsInstance: true,\r\n      },\r\n      echo: input => input.slice(1).join(' '),\r\n      'edit-line': {\r\n        method: this.editLine,\r\n        needsInstance: true,\r\n        options: [\r\n          {\r\n            name: 'line',\r\n            description: 'the line you want to edit. -1 is the last line',\r\n            init: value => parseInt(value, 10),\r\n            defaultValue: -1,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.defaultDesciptions = {\r\n      show: (props.msg && props.msg.length > 0) ? 'show the msg' : false,\r\n      clear: 'clear the screen',\r\n      help: 'list all the commands',\r\n      echo: false,\r\n      'edit-line': false,\r\n    };\r\n\r\n    this.defaultShortcuts = {\r\n      'win, linux, darwin': {\r\n        'alt + t': this.createTab,\r\n      },\r\n      'win, linux': {\r\n        'ctrl + l': 'clear',\r\n      },\r\n      darwin: {\r\n        'cmd + k': 'clear',\r\n      },\r\n    };\r\n\r\n    this.state = {\r\n      tabbed: false,\r\n      commands: {},\r\n      descriptions: {},\r\n      show: props.startState !== 'closed',\r\n      minimise: props.startState === 'minimised',\r\n      maximise: props.startState === 'maximised',\r\n      shortcuts: {},\r\n      activeTab: '',\r\n      tabs: [],\r\n      instances: [],\r\n    };\r\n  }\r\n\r\n  getChildContext() {\r\n    return {\r\n      instances: this.state.instances,\r\n      show: this.state.show,\r\n      minimise: this.state.minimise,\r\n      maximise: this.state.maximise,\r\n      activeTab: this.state.activeTab,\r\n      barShowing: !this.props.hideTopBar,\r\n      tabsShowing: this.props.allowTabs,\r\n      openWindow: this.setTrue('show'),\r\n      closeWindow: this.setFalse('show'),\r\n      minimiseWindow: this.setTrue('minimise'),\r\n      unminimiseWindow: this.setFalse('minimise'),\r\n      maximiseWindow: this.setTrue('maximise'),\r\n      unmaximiseWindow: this.setFalse('maximise'),\r\n      toggleShow: this.toggleState('show'),\r\n      toggleMaximise: this.toggleState('maximise'),\r\n      toggleMinimize: this.toggleState('minimise'),\r\n    };\r\n  }\r\n\r\n  // Prepare the symbol\r\n  componentWillMount = () => {\r\n    this.loadPlugins();\r\n    this.assembleCommands();\r\n    this.setDescriptions();\r\n    this.setShortcuts();\r\n\r\n    this.createTab(true);\r\n  };\r\n\r\n  // Load everything!\r\n  componentDidMount = () => {\r\n    if (this.props.watchConsoleLogging) {\r\n      this.watchConsoleLogging();\r\n    }\r\n  };\r\n\r\n  // Tab creation\r\n  createTab = (force = false) => {\r\n    const { allowTabs, promptSymbol } = this.props;\r\n    if (force || allowTabs) {\r\n      const { tabs } = this.state;\r\n      const id = uuidv4();\r\n\r\n      tabs.push((\r\n        <Content\r\n          key={id}\r\n          id={id}\r\n          prompt={promptSymbol}\r\n          handleChange={this.handleChange}\r\n          handlerKeyPress={this.handlerKeyPress}\r\n          register={(...args) => this.registerInstance(id, ...args)}\r\n        />\r\n      ));\r\n\r\n      this.setState({ activeTab: id, tabs });\r\n    }\r\n  };\r\n\r\n  // Tab removal\r\n  removeTab = (index) => {\r\n    const { tabs } = this.state;\r\n    tabs.splice(index, 1);\r\n    this.setState({ tabs });\r\n  }\r\n\r\n  // Show the content on toggling\r\n  getAppContent = () => {\r\n    const { show, minimise } = this.state;\r\n    if (!show) {\r\n      return this.getNote();\r\n    }\r\n    if (minimise) {\r\n      return this.getBar();\r\n    }\r\n    return this.getContent();\r\n  };\r\n\r\n  // Shows the full window (normal window)\r\n  getContent = () => {\r\n    const {\r\n      color,\r\n      style,\r\n      showActions,\r\n      hideTopBar,\r\n      allowTabs,\r\n      actionHandlers,\r\n    } = this.props;\r\n    const { activeTab, tabs } = this.state;\r\n    const baseStyle = {\r\n      height: '100%',\r\n      color: color || 'green',\r\n      animation: 'fadeIn 0.18s ease-in',\r\n      fontFamily: \"'Inconsolata', monospace\",\r\n      fontSize: '0.9em',\r\n    };\r\n    // This should be a syled component but breaks if it is...\r\n    return (\r\n      <div style={{ ...baseStyle, ...style }}>\r\n        {!hideTopBar && (\r\n          <Bar showActions={showActions} {...actionHandlers} />\r\n        )}\r\n        {allowTabs && (\r\n          <Tabs\r\n            active={activeTab}\r\n            setActiveTab={this.setActiveTab}\r\n            createTab={this.createTab}\r\n            removeTab={this.removeTab}\r\n          />\r\n        )}\r\n        {tabs}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Show only bar (minimise)\r\n  getBar = () => {\r\n    const { style, showActions, actionHandlers } = this.props;\r\n\r\n    return (\r\n      <ContainerWrapper style={{ ...style }}>\r\n        <Bar\r\n          showActions={showActions}\r\n          {...actionHandlers}\r\n        />\r\n      </ContainerWrapper>\r\n    );\r\n  };\r\n\r\n  // Show msg (on window close)\r\n  getNote = () => (\r\n    <Note>\r\n      <h1>\r\n        {this.props.closedTitle}\r\n      </h1>\r\n      <img\r\n        src=\"https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67\"\r\n        width=\"200\"\r\n        height=\"200\"\r\n        alt=\"note\"\r\n        onKeyPress={this.toggleState('show')}\r\n        onClick={this.toggleState('show')}\r\n      />\r\n      {this.props.closedMessage}\r\n    </Note>\r\n  );\r\n\r\n  // Plugin data getter\r\n  getPluginData = name => this.pluginData[name];\r\n\r\n  // Plugin data setter\r\n  setPluginData = (name, data) => { this.pluginData[name] = data; };\r\n\r\n  // Set descriptions of the commands\r\n  setDescriptions = () => {\r\n    let descriptions = {\r\n      ...this.defaultDesciptions,\r\n      ...this.props.descriptions,\r\n    };\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      if (plugin.descriptions) {\r\n        descriptions = {\r\n          ...descriptions,\r\n          ...plugin.descriptions,\r\n        };\r\n      }\r\n    });\r\n    this.setState({ descriptions });\r\n  };\r\n\r\n  // Set command shortcuts\r\n  setShortcuts = () => {\r\n    let shortcuts = getShortcuts({}, this.defaultShortcuts);\r\n    shortcuts = getShortcuts(shortcuts, this.props.shortcuts);\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      if (plugin.shortcuts) {\r\n        shortcuts = getShortcuts(shortcuts, plugin.shortcuts);\r\n      }\r\n    });\r\n    this.setState({ shortcuts });\r\n  };\r\n\r\n  // Setter to change the prefix of the input prompt\r\n  setPromptPrefix = (instance, promptPrefix) => {\r\n    if (instance.state.controller === null) {\r\n      instance.setState({ promptPrefix });\r\n    }\r\n  };\r\n\r\n  // Setter to change the symbol of the input prompt\r\n  setPromptSymbol = (instance, prompt) => {\r\n    if (instance.state.controller === null) {\r\n      instance.setState({ prompt });\r\n    }\r\n  };\r\n\r\n  // Set the currently active tab\r\n  setActiveTab = (activeTab) => {\r\n    this.setState({ activeTab });\r\n  };\r\n\r\n  // Hide window\r\n  setFalse = name => () => this.setState({ [name]: false });\r\n\r\n  // Show window\r\n  setTrue = name => () => this.setState({ [name]: true });\r\n\r\n  /**\r\n   * set the input value with the possible history value\r\n   * @param {number} next position on the history\r\n   */\r\n  setValueWithHistory = (instance, position, inputRef) => {\r\n    const { history } = instance.state;\r\n    if (history[position]) {\r\n      instance.setState({ historyCounter: position });\r\n      inputRef.value = history[position];\r\n      putCursorAtEnd(inputRef);\r\n    }\r\n  };\r\n\r\n  // Method to check if version meets criteria\r\n  checkVersion = (comp, ver) => {\r\n    if (ver === '*') {\r\n      return true;\r\n    }\r\n    if (!(/^(\\d|\\.)+$/.test(ver))) {\r\n      throw new Error('Version can only have numbers and periods');\r\n    } else {\r\n      let clean = ver.toLowerCase().replace(/x/g, '0');\r\n      if (clean[clean.length - 1] === '.') {\r\n        clean += '0';\r\n      }\r\n      const split = clean.split('.');\r\n      while (split.length < 3) {\r\n        split.push('0');\r\n      }\r\n      const realSplit = Terminal.version.split('.');\r\n      const checkBools = split.map((val, index) => compLogic(comp)(realSplit[index], val));\r\n      return checkBools.indexOf(false) < 0;\r\n    }\r\n  };\r\n\r\n  // Used to keep track of all instances\r\n  registerInstance = (index, instance) => {\r\n    const { instances } = this.state;\r\n    const pluginInstances = {};\r\n    const pluginMethods = {};\r\n\r\n    const old = instances.find(i => i.index === index);\r\n\r\n    pluginMap(this.props.plugins, (PluginClass, config) => {\r\n      try {\r\n        const api = {\r\n          printLine: this.printLine.bind(this, instance),\r\n          removeLine: this.removeLine.bind(this, instance),\r\n          runCommand: this.runCommand.bind(this, instance),\r\n          setCanScroll: this.setCanScroll.bind(this, instance),\r\n          setScrollPosition: this.setScrollPosition.bind(this, instance),\r\n          focusInput: this.focusInput.bind(this, instance),\r\n          setPromptPrefix: this.setPromptPrefix.bind(this, instance),\r\n          setPromptSymbol: this.setPromptSymbol.bind(this, instance),\r\n          getPluginMethod: this.getPluginMethod.bind(this, instance),\r\n          takeControl: this.pluginTakeControl.bind(this, instance),\r\n          releaseControl: this.pluginReleaseControl.bind(this, instance),\r\n          getData: () => this.getPluginData(PluginClass.displayName),\r\n          setData: data => this.setPluginData(PluginClass.displayName, data),\r\n          checkVersion: this.checkVersion.bind(this),\r\n          version: Terminal.version,\r\n          os,\r\n        };\r\n\r\n        let plugin;\r\n        if (old) {\r\n          old.pluginInstances[PluginClass.displayName].updateApi(api);\r\n        } else {\r\n          plugin = new PluginClass(api, config);\r\n          pluginMethods[PluginClass.displayName] = {\r\n            ...plugin.getPublicMethods(),\r\n            _getName: () => PluginClass.displayName,\r\n            _getVersion: () => PluginClass.version,\r\n          };\r\n        }\r\n\r\n        pluginInstances[PluginClass.displayName] = plugin;\r\n      } catch (e) {\r\n        console.error(`Error instantiating plugin ${PluginClass.displayName}`, e); // eslint-disable-line no-console\r\n      }\r\n    });\r\n\r\n    const data = {\r\n      index,\r\n      instance,\r\n      pluginMethods: old ? old.pluginMethods : pluginMethods,\r\n      pluginInstances: old ? old.pluginInstances : pluginInstances,\r\n    };\r\n\r\n    if (old) {\r\n      const realIndex = instances.indexOf(old);\r\n      instances[realIndex] = data;\r\n    } else {\r\n      instances.push(data);\r\n    }\r\n\r\n    this.setState({ instances });\r\n\r\n    return () => {\r\n      const insts = this.state.instances;\r\n      this.setState({\r\n        instances: insts.filter(i => !isEqual(i.instance, instance)),\r\n      });\r\n    };\r\n  }\r\n\r\n  // allows a plugin to take full control over instance\r\n  pluginTakeControl = (instance, controller, newPrompt, newPromptPrefix) => {\r\n    const { promptPrefix, prompt } = instance.state;\r\n    instance.setState({\r\n      controller,\r\n      prompt: typeof newPrompt === 'undefined' ? prompt : newPrompt,\r\n      promptPrefix: typeof newPromptPrefix === 'undefined' ? promptPrefix : newPromptPrefix,\r\n      oldPrefix: promptPrefix,\r\n      oldPrompt: prompt,\r\n    });\r\n  };\r\n\r\n  // allows a plugin to release full control over instance\r\n  pluginReleaseControl = (instance) => {\r\n    const { oldPrefix, oldPrompt } = instance.state;\r\n    instance.setState({ controller: null, promptPrefix: oldPrefix, prompt: oldPrompt });\r\n  };\r\n\r\n  // Toggle a state boolean\r\n  toggleState = name => () => this.setState({ [name]: !this.state[name] });\r\n\r\n  // Prepare the built-in commands\r\n  assembleCommands = () => {\r\n    let commands = {\r\n      ...this.defaultCommands,\r\n      ...this.props.commands,\r\n    };\r\n\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      if (plugin.commands) {\r\n        commands = {\r\n          ...commands,\r\n          ...plugin.commands,\r\n        };\r\n      }\r\n    });\r\n\r\n    this.setState({ commands: modCommands(commands) });\r\n  };\r\n\r\n  /**\r\n   * autocomplete with the command the have the best match\r\n   * @param {object} input reference\r\n   */\r\n  autocompleteValue = (inputRef) => {\r\n    const { descriptions } = this.state;\r\n    const keysToCheck = Object.keys(descriptions).filter(key => descriptions[key] !== false);\r\n    let ratings = [];\r\n    if (inputRef.value.length > 1) {\r\n      ratings = stringSimilarity.findBestMatch( // eslint-disable-line\r\n        inputRef.value,\r\n        keysToCheck,\r\n      ).ratings;\r\n    } else {\r\n      ratings = keysToCheck.reduce((full, item) => {\r\n        if (item.indexOf(inputRef.value) === 0) {\r\n          full.push({ target: item, rating: 1 });\r\n        }\r\n        return full;\r\n      }, []);\r\n    }\r\n    return ratings.filter(item => item.rating > 0);\r\n  };\r\n\r\n  // Refresh or clear the screen\r\n  clearScreen = (args, printLine, runCommand, instance) => {\r\n    instance.setState({ summary: [] });\r\n  };\r\n\r\n  // Method to check for shortcut and invoking commands\r\n  checkShortcuts = (instance, key, e) => {\r\n    const { controller } = instance.state;\r\n    let cuts = {};\r\n    if (controller !== null) {\r\n      if (controller.shortcuts) {\r\n        cuts = getShortcuts(cuts, controller.shortcuts);\r\n      }\r\n    } else {\r\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n      cuts = this.state.shortcuts;\r\n      if (instanceData) {\r\n        Object.values(instanceData.pluginInstances).forEach((i) => {\r\n          cuts = getShortcuts(cuts, i.shortcuts);\r\n        });\r\n      }\r\n    }\r\n\r\n    const shortcuts = Object.keys(cuts);\r\n    if (shortcuts.length > 0) {\r\n      const { keyInputs } = instance.state;\r\n      let modKey = key;\r\n      if (key === 'meta') {\r\n        // eslint-disable-next-line no-nested-ternary\r\n        modKey = os === 'darwin' ? 'cmd' : os === 'win' ? 'win' : 'meta';\r\n      }\r\n      keyInputs.push(modKey);\r\n      const len = keyInputs.length;\r\n\r\n      const options = shortcuts\r\n        .map((cut, i) => [cut.replace(/\\s/g, '').split('+'), i])\r\n        .filter(cut => cut[0].length >= keyInputs.length)\r\n        .filter(cut => isEqual(cut[0].slice(0, len), keyInputs));\r\n\r\n      if (options.length > 0) {\r\n        if (options.length === 1 && options[0][0].length === len) {\r\n          const shortcut = shortcuts[options[0][1]];\r\n          const action = cuts[shortcut];\r\n          if (typeof action === 'string') {\r\n            this.runCommand(instance, cuts[shortcut]);\r\n          } else if (typeof action === 'function') {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            action();\r\n          }\r\n          instance.setState({ keyInputs: [] });\r\n        }\r\n      } else if (keyInputs.length > 0) {\r\n        instance.setState({ keyInputs: [] });\r\n      }\r\n    }\r\n  };\r\n\r\n  // edit-line command\r\n  editLine = (args, printLine, runCommand, instance) => {\r\n    const { summary } = instance.state;\r\n    let index = args.line;\r\n    if (index < 0) {\r\n      index = summary.length === 0 ? 0 : summary.length - index;\r\n    }\r\n    summary[index] = args._.join(' ');\r\n    instance.setState({ summary });\r\n  };\r\n\r\n  // Listen for user input\r\n  handleChange = (instance, e) => {\r\n    const {\r\n      input, promptPrefix, prompt, history, controller,\r\n    } = instance.state;\r\n    const saveToHistory = controller !== null ? (controller.history || false) : true;\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      if (typeof e.dontShowCommand === 'undefined') {\r\n        this.printLine.bind(this, instance)(\r\n          `${promptPrefix}${prompt} ${e.target.value}`,\r\n          false,\r\n        );\r\n      }\r\n\r\n      input.push(e.target.value);\r\n      const res = this.runCommand(instance, `${input.join('\\n')}`);\r\n\r\n      if (typeof res !== 'undefined') {\r\n        this.printLine.bind(this, instance)(res);\r\n      }\r\n\r\n      const newHistory = [...history, e.target.value];\r\n      const historyProps = saveToHistory ? {\r\n        history: newHistory,\r\n        historyCounter: newHistory.length,\r\n      } : {};\r\n      instance.setState({\r\n        input: [],\r\n        ...historyProps,\r\n      });\r\n      e.target.value = ''; // eslint-disable-line no-param-reassign\r\n    } else if (e.key === 'Enter' && e.shiftKey) {\r\n      this.printLine.bind(this, instance)(\r\n        `${promptPrefix}${prompt} ${e.target.value}`,\r\n        false,\r\n      );\r\n      const newHistory = [...history, e.target.value];\r\n      const historyProps = saveToHistory ? {\r\n        history: newHistory,\r\n        historyCounter: newHistory.length,\r\n      } : {};\r\n      instance.setState({\r\n        input: [...input, e.target.value],\r\n        ...historyProps,\r\n      });\r\n      e.target.value = ''; // eslint-disable-line no-param-reassign\r\n    }\r\n    if (typeof this.props.afterChange === 'function') {\r\n      this.props.afterChange(e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Base of key code set the value of the input\r\n   * with the history\r\n   * @param {event} event of input\r\n   */\r\n  handlerKeyPress = (instance, e, inputRef) => {\r\n    const { key } = whatkey(e);\r\n    const { historyCounter, keyInputs, controller } = instance.state;\r\n    if (keyInputs.length === 0 || keyInputs.length === 0) {\r\n      if (controller !== null) {\r\n        if (controller.onKeyPress) {\r\n          controller.onKeyPress(key);\r\n        }\r\n      } else {\r\n        switch (key) {\r\n          case 'up':\r\n            this.setValueWithHistory(instance, historyCounter - 1, inputRef);\r\n            if (this.state.tabbed) {\r\n              this.setState({ tabbed: false });\r\n            }\r\n            break;\r\n          case 'down':\r\n            this.setValueWithHistory(instance, historyCounter + 1, inputRef);\r\n            if (this.state.tabbed) {\r\n              this.setState({ tabbed: false });\r\n            }\r\n            break;\r\n          case 'tab':\r\n            e.preventDefault();\r\n            if (inputRef.value !== '' && this.state.tabbed === true) {\r\n              const contents = this.autocompleteValue(inputRef);\r\n              this.printLine(instance, `${instance.state.promptPrefix}${instance.state.prompt} ${inputRef.value}`, false);\r\n              this.printLine(\r\n                instance,\r\n                (\r\n                  <span>\r\n                    {contents.filter(item => typeof item !== 'undefined').map((item) => {\r\n                    const styles = {\r\n                      marginRight: 5,\r\n                      width: 'calc(33% - 5px)',\r\n                      display: 'inline-block',\r\n                    };\r\n                    if (contents.length > 3) {\r\n                      styles.marginBottom = 5;\r\n                    }\r\n                    return (\r\n                      <span\r\n                        style={styles}\r\n                        key={`${item.target}-${item.rating}`}\r\n                      >\r\n                        {item.target}\r\n                      </span>\r\n                    );\r\n                  })}\r\n                  </span>\r\n                ),\r\n                false,\r\n              );\r\n              this.setState({ tabbed: false });\r\n            } else {\r\n              this.setState({ tabbed: true });\r\n            }\r\n            break;\r\n          default:\r\n            if (this.state.tabbed) {\r\n              this.setState({ tabbed: false });\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    this.checkShortcuts(instance, key, e);\r\n  }\r\n\r\n  // Plugins\r\n  loadPlugins = () => {\r\n    const pluginData = {};\r\n    pluginMap(this.props.plugins, (plugin) => {\r\n      try {\r\n        pluginData[plugin.displayName] = plugin.defaultData;\r\n      } catch (e) {\r\n        console.error(`Error loading plugin ${plugin.displayName}`, e); // eslint-disable-line no-console\r\n      }\r\n    });\r\n    this.pluginData = pluginData;\r\n  };\r\n\r\n  // Plugin api method to get a public plugin method\r\n  getPluginMethod = (instance, name, method) => {\r\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n    if (instanceData) {\r\n      if (instanceData.pluginMethods[name]) {\r\n        if (instanceData.pluginMethods[name][method]) {\r\n          return instanceData.pluginMethods[name][method];\r\n        }\r\n        throw new Error(`No method with name ${method} has been registered for plugin ${name}`);\r\n      } else {\r\n        throw new Error(`No plugin with name ${name} has been registered`);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Set if the current tab can scroll\r\n  setCanScroll = (instance, force) => {\r\n    if (typeof force !== 'undefined') {\r\n      instance.setState({ canScroll: force });\r\n    }\r\n  }\r\n\r\n  // Set the scroll position of the contents\r\n  setScrollPosition = (instance, pos) => {\r\n    if (typeof pos === 'number') {\r\n      instance.setScrollPosition(pos);\r\n    }\r\n  }\r\n\r\n  // Set focus to the input\r\n  focusInput = (instance) => {\r\n    if (typeof pos === 'number') {\r\n      instance.focusInput();\r\n    }\r\n  }\r\n\r\n  // Print the summary (input -> output)\r\n  printLine = (instance, inp, std = true) => {\r\n    let print = true;\r\n    if (std) {\r\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n      if (instanceData) {\r\n        const plugins = instanceData.pluginInstances;\r\n        for (let i = 0; i < plugins.length; i += 1) {\r\n          try {\r\n            print = plugins[i].readStdOut(inp);\r\n          } catch (e) {\r\n            // Do nothing\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (print !== false) {\r\n      const { summary } = instance.state;\r\n      summary.push(inp);\r\n      instance.setState({ summary });\r\n    }\r\n  };\r\n\r\n  // Remove a line from the summary\r\n  removeLine = (instance, lineNumber = -1) => {\r\n    const { summary } = instance.state;\r\n    summary.splice(lineNumber, 1);\r\n    instance.setState({ summary });\r\n  }\r\n\r\n  // Execute the commands\r\n  runCommand = (instance, inputText, force = false) => {\r\n    const inputArray = inputText.split(' ');\r\n    const input = inputArray[0];\r\n    const args = inputArray; // Undefined for function call\r\n    const { controller } = instance.state;\r\n    let commands = {};\r\n    if (!force && controller !== null) {\r\n      if (controller.runCommand) {\r\n        return controller.runCommand(inputText);\r\n      } else if (controller.commands) {\r\n        commands = { ...modCommands(controller.commands) };\r\n      }\r\n    } else {\r\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n      commands = { ...this.state.commands };\r\n      if (instanceData) {\r\n        Object.values(instanceData.pluginInstances).forEach((i) => {\r\n          commands = {\r\n            ...commands,\r\n            ...modCommands(i.commands),\r\n          };\r\n        });\r\n      }\r\n    }\r\n\r\n    const command = commands[input];\r\n    let res;\r\n\r\n    if (input === '') {\r\n      // do nothing\r\n    } else if (command === undefined) {\r\n      if (typeof this.props.commandPassThrough === 'function') {\r\n        res = this.props.commandPassThrough(\r\n          inputArray,\r\n          this.printLine.bind(this, instance),\r\n          this.runCommand.bind(this, instance),\r\n        );\r\n      } else {\r\n        this.printLine.bind(this, instance)(`-bash:${input}: command not found`);\r\n      }\r\n    } else {\r\n      const parsedArgs = command.parse(args);\r\n      const type = typeof parsedArgs;\r\n      if (type !== 'object' || (type === 'object' && !parsedArgs.help)) {\r\n        res = command.method(\r\n          parsedArgs,\r\n          this.printLine.bind(this, instance),\r\n          this.runCommand.bind(this, instance),\r\n          command.needsInstance === true ? instance : undefined,\r\n        );\r\n      }\r\n    }\r\n    if (typeof this.props.commandWasRun === 'function') {\r\n      this.props.commandWasRun(\r\n        inputArray,\r\n        this.printLine.bind(this, instance),\r\n        this.runCommand.bind(this, instance),\r\n      );\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Run a command on the active instance\r\n  runCommandOnActive = (inputText, force = false) => {\r\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\r\n    if (data && data.instance !== null) {\r\n      this.runCommand(data.instance, inputText, force);\r\n    }\r\n  }\r\n\r\n  // Print to active instance\r\n  printToActive = (...args) => {\r\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\r\n    if (data && data.instance !== null && data.instance.state.controller === null) {\r\n      this.printLine(data.instance, ...args);\r\n    }\r\n  }\r\n\r\n  // Listen for console logging and pass the input to handler (handleLogging)\r\n  watchConsoleLogging = () => {\r\n    handleLogging('log', this.printToActive);\r\n    handleLogging('info', this.printToActive);\r\n  };\r\n\r\n  // List all the commands (state + user defined)\r\n  showHelp = (args, printLine, runCommand, instance) => {\r\n    let commands = { ...this.state.commands };\r\n    let descriptions = { ...this.state.descriptions };\r\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\r\n    if (instanceData) {\r\n      Object.values(instanceData.pluginInstances).forEach((i) => {\r\n        commands = {\r\n          ...commands,\r\n          ...i.commands,\r\n        };\r\n        descriptions = {\r\n          ...descriptions,\r\n          ...i.descriptions,\r\n        };\r\n      });\r\n    }\r\n    const options = Object.keys(commands);\r\n\r\n    for (const option of options) {\r\n      // eslint-disable-line no-restricted-syntax\r\n      if (descriptions[option] !== false) {\r\n        printLine(`${option} - ${descriptions[option]}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Show the msg (prop msg)\r\n  showMsg = (args, printLine) => {\r\n    if (this.props.msg && this.props.msg.length > 0) {\r\n      printLine(this.props.msg);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const theme = {\r\n      color: this.props.color,\r\n      prompt: this.props.prompt,\r\n      barColor: this.props.barColor,\r\n      outputColor: this.props.outputColor,\r\n      backgroundColor: this.props.backgroundColor,\r\n    };\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Base\r\n          className=\"terminal-base\"\r\n          fullscreen={this.state.maximise}\r\n        >\r\n          {this.getAppContent()}\r\n        </Base>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Terminal;\r\n"]}