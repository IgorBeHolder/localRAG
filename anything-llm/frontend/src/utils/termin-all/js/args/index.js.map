{"version":3,"sources":["../../../src/js/args/index.js"],"names":["Args","details","commands","options","examples","config","help","usageFilter","value","name","mainColor","subColor","printMainColor","i","printSubColor","parent","module","publicMethods","command","option","parse","example","showHelp","util","hasOwnProperty","call","prototype","method"],"mappings":"4xBAmBe,QAASA,KAAT,EAAgB,CAC7B,KAAKC,OAAL,CAAe,CACbC,SAAU,EADG,CAEbC,QAAS,EAFI,CAGbC,SAAU,EAHG,CADc,CAQ7B,KAAKC,MAAL,CAAc,CACZC,OADY,CAEZC,YAAa,IAFD,CAGZC,MAAO,IAHK,CAIZC,KAAM,IAJM,CAKZC,UAAW,QALC,CAMZC,SAAU,KANE,CARe,CAiB7B,KAAKC,cAAL,CAAsB,kBAAKC,EAAL,CAjBO,CAkB7B,KAAKC,aAAL,CAAqB,kBAAKD,EAAL,CAlBQ,CAoB7B,KAAKE,MAAL,CAAcC,OAAOD,MACtB,C,uEArBuBf,I,+UAVlBiB,cAAgB,CACpBC,yBADoB,CAEpBC,uBAFoB,CAGpBhB,yBAHoB,CAIpBiB,qBAJoB,CAKpBC,yBALoB,CAMpBjB,2BANoB,CAOpBkB,uBAPoB,C,CAkCtB,IAAK,GAAMC,KAAX,oBACO,KAAGC,cAAH,CAAkBC,IAAlB,iBAA8BF,IAA9B,CADP,GAKEvB,KAAK0B,SAAL,CAAeH,IAAf,EAAuB,gBAAMA,IAAN,CALzB,EASA,IAAK,GAAMI,OAAX,GAAqBV,cAArB,CACO,KAAGO,cAAH,CAAkBC,IAAlB,CAAuBR,aAAvB,CAAsCU,MAAtC,CADP,GAKE3B,KAAK0B,SAAL,CAAeC,MAAf,EAAyBV,cAAcU,MAAd,CAL3B,C","file":"index.js","sourcesContent":["import parse from './parse';\r\nimport example from './example';\r\nimport examples from './examples';\r\nimport options from './options';\r\nimport option from './option';\r\nimport command from './command';\r\nimport showHelp from './help';\r\nimport utils from './utils';\r\n\r\nconst publicMethods = {\r\n  command,\r\n  option,\r\n  options,\r\n  parse,\r\n  example,\r\n  examples,\r\n  showHelp,\r\n};\r\n\r\nexport default function Args() {\r\n  this.details = {\r\n    commands: [],\r\n    options: [],\r\n    examples: [],\r\n  };\r\n\r\n  // Configuration defaults\r\n  this.config = {\r\n    help: true,\r\n    usageFilter: null,\r\n    value: null,\r\n    name: null,\r\n    mainColor: 'yellow',\r\n    subColor: 'dim',\r\n  };\r\n\r\n  this.printMainColor = i => i;\r\n  this.printSubColor = i => i;\r\n\r\n  this.parent = module.parent;\r\n}\r\n\r\n// Assign internal helpers\r\nfor (const util in utils) {\r\n  if (!{}.hasOwnProperty.call(utils, util)) {\r\n    continue; // eslint-disable-line\r\n  }\r\n\r\n  Args.prototype[util] = utils[util];\r\n}\r\n\r\n// Assign public methods\r\nfor (const method in publicMethods) {\r\n  if (!{}.hasOwnProperty.call(publicMethods, method)) {\r\n    continue; // eslint-disable-line\r\n  }\r\n\r\n  Args.prototype[method] = publicMethods[method];\r\n}\r\n"]}