{"version":3,"sources":["../../src/js/utils.js"],"names":["handleLogging","method","addToOutput","console","args","oldLog","e","Error","res","slice","map","arg","i","Object","defineProperty","value","writable","isServer","window","document","getOs","os","family","indexOf","linuxPlatforms","darwinPlatforms"],"mappings":"umBAYgBA,a,CAAT,SAAuBC,MAAvB,CAA+BC,WAA/B,CAA4C,CAEjDC,QAAQF,MAAR,EAAkB,UAAa,+BAATG,IAAS,qCAATA,IAAS,uBAC7B,GAAI,cACF,mBAAQC,MAAR,qBAAmBJ,MAAnB,aAAiCG,IAAjC,EACD,CAAC,MAAOE,CAAP,CAAU,CACV,KAAM,IAAIC,MAAJ,CAAU,sDAAV,CACP,CACD,GAAMC,KAAM,UAAIJ,IAAJ,EAAUK,KAAV,CAAgB,CAAhB,CAAmB,EAAnB,EAAuBC,GAAvB,CAA2B,SAACC,GAAD,CAAMC,CAAN,CAAY,CACjD,0BAAeD,IAAf,qBAAeA,GAAf,GACE,IAAK,QAAL,CACE,MAAO,+DAAiB,KAAMA,GAAvB,CAA4B,cAAeC,CAA3C,EAAP,CACF,IAAK,UAAL,CACE,SAAUD,GAAV,CACF,QACE,MAAOA,IAAP,CANJ,CAQD,CATW,CAAZ,CAUAT,YAAYM,GAAZ,CACD,CAnBgD,CAoBjDK,OAAOC,cAAP,CAAsBX,QAAQF,MAAR,CAAtB,CAAuC,MAAvC,CAA+C,CAAEc,MAAOd,MAAT,CAAiBe,WAAjB,CAA/C,CACD,C,SAEeC,Q,CAAT,UAAoB,CACzB,MAAO,EAAoB,WAAlB,QAAOC,OAAP,EAAiCA,OAAOC,QAA1C,CACR,C,SAKeC,K,CAAT,UAAiB,IACdC,GADc,oBACdA,EADc,OAEJ,KAAd,MAAGC,MAAH,EAAuD,CAAjC,MAAGA,MAAH,CAAUC,OAAV,CAAkB,SAAlB,CAFJ,CAGb,KAHa,CAKJ,IAAd,MAAGD,MAAH,EAA0D,CAAC,CAArC,gBAAeC,OAAf,CAAuBF,GAAGC,MAA1B,CALJ,CAMb,OANa,CAQJ,IAAd,MAAGA,MAAH,EAA2D,CAAC,CAAtC,iBAAgBC,OAAhB,CAAwBF,GAAGC,MAA3B,CARJ,CASb,QATa,CAWf,SACR,C,8XAhDA,WAAwB,CACvBnB,eAAoBA,WACrB,CAFA,G,CAiCD,GAAMqB,gBAAiB,CAAC,QAAD,CAAW,QAAX,CAAqB,QAArB,CAA+B,SAA/B,CAA0C,MAA1C,CAAkD,SAAlD,CAAvB,CACMC,gBAAkB,CAAC,MAAD,CAAS,KAAT,C","file":"utils.js","sourcesContent":["/* eslint-disable no-console */\r\nimport React from 'react'; // eslint-disable-line\r\nimport ObjectInspector from 'react-object-inspector';\r\nimport platform from 'platform';\r\n\r\n// Capture the console.log calls (hijacking)\r\n(function setOldLogger() {\r\n  console['oldLog'] = console['log']; // eslint-disable-line dot-notation\r\n}());\r\n\r\n// Handle console logging\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport function handleLogging(method, addToOutput) {\r\n  // eslint-disable-next-line no-console\r\n  console[method] = (...args) => {\r\n    try {\r\n      console.oldLog(`[${method}]`, ...args);\r\n    } catch (e) {\r\n      throw new Error('Terminal was loaded more than once check script tags');\r\n    }\r\n    const res = [...args].slice(0, 15).map((arg, i) => {\r\n      switch (typeof arg) {\r\n        case 'object':\r\n          return <ObjectInspector data={arg} key={`object-${i}`} />;\r\n        case 'function':\r\n          return `${arg}`;\r\n        default:\r\n          return arg;\r\n      }\r\n    });\r\n    addToOutput(res);\r\n  };\r\n  Object.defineProperty(console[method], 'name', { value: method, writable: false }); // eslint-disable-line no-console\r\n}\r\n\r\nexport function isServer() {\r\n  return !(typeof window !== 'undefined' && window.document);\r\n}\r\n\r\nconst linuxPlatforms = ['Ubuntu', 'Debian', 'Fedora', 'Red Hat', 'SuSE', 'Android'];\r\nconst darwinPlatforms = ['OS X', 'iOS'];\r\n\r\nexport function getOs() {\r\n  const { os } = platform;\r\n  if (os.family !== null && os.family.indexOf('Windows') === 0) {\r\n    return 'win';\r\n  }\r\n  if (os.family !== null && linuxPlatforms.indexOf(os.family) > -1) {\r\n    return 'linux';\r\n  }\r\n  if (os.family !== null && darwinPlatforms.indexOf(os.family) > -1) {\r\n    return 'darwin';\r\n  }\r\n  return 'unknown';\r\n}\r\n"]}