
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model api_keys
 * 
 */
export type api_keys = $Result.DefaultSelection<Prisma.$api_keysPayload>
/**
 * Model workspace_documents
 * 
 */
export type workspace_documents = $Result.DefaultSelection<Prisma.$workspace_documentsPayload>
/**
 * Model invites
 * 
 */
export type invites = $Result.DefaultSelection<Prisma.$invitesPayload>
/**
 * Model system_settings
 * 
 */
export type system_settings = $Result.DefaultSelection<Prisma.$system_settingsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model document_vectors
 * 
 */
export type document_vectors = $Result.DefaultSelection<Prisma.$document_vectorsPayload>
/**
 * Model welcome_messages
 * 
 */
export type welcome_messages = $Result.DefaultSelection<Prisma.$welcome_messagesPayload>
/**
 * Model workspaces
 * 
 */
export type workspaces = $Result.DefaultSelection<Prisma.$workspacesPayload>
/**
 * Model workspace_chats
 * 
 */
export type workspace_chats = $Result.DefaultSelection<Prisma.$workspace_chatsPayload>
/**
 * Model workspace_users
 * 
 */
export type workspace_users = $Result.DefaultSelection<Prisma.$workspace_usersPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Api_keys
 * const api_keys = await prisma.api_keys.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Api_keys
   * const api_keys = await prisma.api_keys.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.api_keys`: Exposes CRUD operations for the **api_keys** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Api_keys
    * const api_keys = await prisma.api_keys.findMany()
    * ```
    */
  get api_keys(): Prisma.api_keysDelegate<ExtArgs>;

  /**
   * `prisma.workspace_documents`: Exposes CRUD operations for the **workspace_documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workspace_documents
    * const workspace_documents = await prisma.workspace_documents.findMany()
    * ```
    */
  get workspace_documents(): Prisma.workspace_documentsDelegate<ExtArgs>;

  /**
   * `prisma.invites`: Exposes CRUD operations for the **invites** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invites
    * const invites = await prisma.invites.findMany()
    * ```
    */
  get invites(): Prisma.invitesDelegate<ExtArgs>;

  /**
   * `prisma.system_settings`: Exposes CRUD operations for the **system_settings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more System_settings
    * const system_settings = await prisma.system_settings.findMany()
    * ```
    */
  get system_settings(): Prisma.system_settingsDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;

  /**
   * `prisma.document_vectors`: Exposes CRUD operations for the **document_vectors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_vectors
    * const document_vectors = await prisma.document_vectors.findMany()
    * ```
    */
  get document_vectors(): Prisma.document_vectorsDelegate<ExtArgs>;

  /**
   * `prisma.welcome_messages`: Exposes CRUD operations for the **welcome_messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Welcome_messages
    * const welcome_messages = await prisma.welcome_messages.findMany()
    * ```
    */
  get welcome_messages(): Prisma.welcome_messagesDelegate<ExtArgs>;

  /**
   * `prisma.workspaces`: Exposes CRUD operations for the **workspaces** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workspaces
    * const workspaces = await prisma.workspaces.findMany()
    * ```
    */
  get workspaces(): Prisma.workspacesDelegate<ExtArgs>;

  /**
   * `prisma.workspace_chats`: Exposes CRUD operations for the **workspace_chats** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workspace_chats
    * const workspace_chats = await prisma.workspace_chats.findMany()
    * ```
    */
  get workspace_chats(): Prisma.workspace_chatsDelegate<ExtArgs>;

  /**
   * `prisma.workspace_users`: Exposes CRUD operations for the **workspace_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Workspace_users
    * const workspace_users = await prisma.workspace_users.findMany()
    * ```
    */
  get workspace_users(): Prisma.workspace_usersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.4.2
   * Query Engine version: ac9d7041ed77bcc8a8dbd2ab6616b39013829574
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    api_keys: 'api_keys',
    workspace_documents: 'workspace_documents',
    invites: 'invites',
    system_settings: 'system_settings',
    users: 'users',
    document_vectors: 'document_vectors',
    welcome_messages: 'welcome_messages',
    workspaces: 'workspaces',
    workspace_chats: 'workspace_chats',
    workspace_users: 'workspace_users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'api_keys' | 'workspace_documents' | 'invites' | 'system_settings' | 'users' | 'document_vectors' | 'welcome_messages' | 'workspaces' | 'workspace_chats' | 'workspace_users'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      api_keys: {
        payload: Prisma.$api_keysPayload<ExtArgs>
        fields: Prisma.api_keysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.api_keysFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.api_keysFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>
          }
          findFirst: {
            args: Prisma.api_keysFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.api_keysFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>
          }
          findMany: {
            args: Prisma.api_keysFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>[]
          }
          create: {
            args: Prisma.api_keysCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>
          }
          delete: {
            args: Prisma.api_keysDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>
          }
          update: {
            args: Prisma.api_keysUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>
          }
          deleteMany: {
            args: Prisma.api_keysDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.api_keysUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.api_keysUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$api_keysPayload>
          }
          aggregate: {
            args: Prisma.Api_keysAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateApi_keys>
          }
          groupBy: {
            args: Prisma.api_keysGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Api_keysGroupByOutputType>[]
          }
          count: {
            args: Prisma.api_keysCountArgs<ExtArgs>,
            result: $Utils.Optional<Api_keysCountAggregateOutputType> | number
          }
        }
      }
      workspace_documents: {
        payload: Prisma.$workspace_documentsPayload<ExtArgs>
        fields: Prisma.workspace_documentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.workspace_documentsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.workspace_documentsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>
          }
          findFirst: {
            args: Prisma.workspace_documentsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.workspace_documentsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>
          }
          findMany: {
            args: Prisma.workspace_documentsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>[]
          }
          create: {
            args: Prisma.workspace_documentsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>
          }
          delete: {
            args: Prisma.workspace_documentsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>
          }
          update: {
            args: Prisma.workspace_documentsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>
          }
          deleteMany: {
            args: Prisma.workspace_documentsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.workspace_documentsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.workspace_documentsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_documentsPayload>
          }
          aggregate: {
            args: Prisma.Workspace_documentsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateWorkspace_documents>
          }
          groupBy: {
            args: Prisma.workspace_documentsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Workspace_documentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.workspace_documentsCountArgs<ExtArgs>,
            result: $Utils.Optional<Workspace_documentsCountAggregateOutputType> | number
          }
        }
      }
      invites: {
        payload: Prisma.$invitesPayload<ExtArgs>
        fields: Prisma.invitesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.invitesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.invitesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>
          }
          findFirst: {
            args: Prisma.invitesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.invitesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>
          }
          findMany: {
            args: Prisma.invitesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>[]
          }
          create: {
            args: Prisma.invitesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>
          }
          delete: {
            args: Prisma.invitesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>
          }
          update: {
            args: Prisma.invitesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>
          }
          deleteMany: {
            args: Prisma.invitesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.invitesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.invitesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$invitesPayload>
          }
          aggregate: {
            args: Prisma.InvitesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateInvites>
          }
          groupBy: {
            args: Prisma.invitesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<InvitesGroupByOutputType>[]
          }
          count: {
            args: Prisma.invitesCountArgs<ExtArgs>,
            result: $Utils.Optional<InvitesCountAggregateOutputType> | number
          }
        }
      }
      system_settings: {
        payload: Prisma.$system_settingsPayload<ExtArgs>
        fields: Prisma.system_settingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.system_settingsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.system_settingsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>
          }
          findFirst: {
            args: Prisma.system_settingsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.system_settingsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>
          }
          findMany: {
            args: Prisma.system_settingsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>[]
          }
          create: {
            args: Prisma.system_settingsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>
          }
          delete: {
            args: Prisma.system_settingsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>
          }
          update: {
            args: Prisma.system_settingsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>
          }
          deleteMany: {
            args: Prisma.system_settingsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.system_settingsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.system_settingsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$system_settingsPayload>
          }
          aggregate: {
            args: Prisma.System_settingsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSystem_settings>
          }
          groupBy: {
            args: Prisma.system_settingsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<System_settingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.system_settingsCountArgs<ExtArgs>,
            result: $Utils.Optional<System_settingsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      document_vectors: {
        payload: Prisma.$document_vectorsPayload<ExtArgs>
        fields: Prisma.document_vectorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.document_vectorsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.document_vectorsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>
          }
          findFirst: {
            args: Prisma.document_vectorsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.document_vectorsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>
          }
          findMany: {
            args: Prisma.document_vectorsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>[]
          }
          create: {
            args: Prisma.document_vectorsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>
          }
          delete: {
            args: Prisma.document_vectorsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>
          }
          update: {
            args: Prisma.document_vectorsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>
          }
          deleteMany: {
            args: Prisma.document_vectorsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.document_vectorsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.document_vectorsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$document_vectorsPayload>
          }
          aggregate: {
            args: Prisma.Document_vectorsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDocument_vectors>
          }
          groupBy: {
            args: Prisma.document_vectorsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Document_vectorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.document_vectorsCountArgs<ExtArgs>,
            result: $Utils.Optional<Document_vectorsCountAggregateOutputType> | number
          }
        }
      }
      welcome_messages: {
        payload: Prisma.$welcome_messagesPayload<ExtArgs>
        fields: Prisma.welcome_messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.welcome_messagesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.welcome_messagesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>
          }
          findFirst: {
            args: Prisma.welcome_messagesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.welcome_messagesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>
          }
          findMany: {
            args: Prisma.welcome_messagesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>[]
          }
          create: {
            args: Prisma.welcome_messagesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>
          }
          delete: {
            args: Prisma.welcome_messagesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>
          }
          update: {
            args: Prisma.welcome_messagesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>
          }
          deleteMany: {
            args: Prisma.welcome_messagesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.welcome_messagesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.welcome_messagesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$welcome_messagesPayload>
          }
          aggregate: {
            args: Prisma.Welcome_messagesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateWelcome_messages>
          }
          groupBy: {
            args: Prisma.welcome_messagesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Welcome_messagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.welcome_messagesCountArgs<ExtArgs>,
            result: $Utils.Optional<Welcome_messagesCountAggregateOutputType> | number
          }
        }
      }
      workspaces: {
        payload: Prisma.$workspacesPayload<ExtArgs>
        fields: Prisma.workspacesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.workspacesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.workspacesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>
          }
          findFirst: {
            args: Prisma.workspacesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.workspacesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>
          }
          findMany: {
            args: Prisma.workspacesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>[]
          }
          create: {
            args: Prisma.workspacesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>
          }
          delete: {
            args: Prisma.workspacesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>
          }
          update: {
            args: Prisma.workspacesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>
          }
          deleteMany: {
            args: Prisma.workspacesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.workspacesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.workspacesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspacesPayload>
          }
          aggregate: {
            args: Prisma.WorkspacesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateWorkspaces>
          }
          groupBy: {
            args: Prisma.workspacesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<WorkspacesGroupByOutputType>[]
          }
          count: {
            args: Prisma.workspacesCountArgs<ExtArgs>,
            result: $Utils.Optional<WorkspacesCountAggregateOutputType> | number
          }
        }
      }
      workspace_chats: {
        payload: Prisma.$workspace_chatsPayload<ExtArgs>
        fields: Prisma.workspace_chatsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.workspace_chatsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.workspace_chatsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>
          }
          findFirst: {
            args: Prisma.workspace_chatsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.workspace_chatsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>
          }
          findMany: {
            args: Prisma.workspace_chatsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>[]
          }
          create: {
            args: Prisma.workspace_chatsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>
          }
          delete: {
            args: Prisma.workspace_chatsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>
          }
          update: {
            args: Prisma.workspace_chatsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>
          }
          deleteMany: {
            args: Prisma.workspace_chatsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.workspace_chatsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.workspace_chatsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_chatsPayload>
          }
          aggregate: {
            args: Prisma.Workspace_chatsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateWorkspace_chats>
          }
          groupBy: {
            args: Prisma.workspace_chatsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Workspace_chatsGroupByOutputType>[]
          }
          count: {
            args: Prisma.workspace_chatsCountArgs<ExtArgs>,
            result: $Utils.Optional<Workspace_chatsCountAggregateOutputType> | number
          }
        }
      }
      workspace_users: {
        payload: Prisma.$workspace_usersPayload<ExtArgs>
        fields: Prisma.workspace_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.workspace_usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.workspace_usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>
          }
          findFirst: {
            args: Prisma.workspace_usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.workspace_usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>
          }
          findMany: {
            args: Prisma.workspace_usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>[]
          }
          create: {
            args: Prisma.workspace_usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>
          }
          delete: {
            args: Prisma.workspace_usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>
          }
          update: {
            args: Prisma.workspace_usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>
          }
          deleteMany: {
            args: Prisma.workspace_usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.workspace_usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.workspace_usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$workspace_usersPayload>
          }
          aggregate: {
            args: Prisma.Workspace_usersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateWorkspace_users>
          }
          groupBy: {
            args: Prisma.workspace_usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Workspace_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.workspace_usersCountArgs<ExtArgs>,
            result: $Utils.Optional<Workspace_usersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    workspace_chats: number
    workspace_users: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workspace_chats?: boolean | UsersCountOutputTypeCountWorkspace_chatsArgs
    workspace_users?: boolean | UsersCountOutputTypeCountWorkspace_usersArgs
  }

  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountWorkspace_chatsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_chatsWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountWorkspace_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_usersWhereInput
  }



  /**
   * Count Type WorkspacesCountOutputType
   */

  export type WorkspacesCountOutputType = {
    workspace_users: number
    documents: number
  }

  export type WorkspacesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workspace_users?: boolean | WorkspacesCountOutputTypeCountWorkspace_usersArgs
    documents?: boolean | WorkspacesCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes

  /**
   * WorkspacesCountOutputType without action
   */
  export type WorkspacesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkspacesCountOutputType
     */
    select?: WorkspacesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * WorkspacesCountOutputType without action
   */
  export type WorkspacesCountOutputTypeCountWorkspace_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_usersWhereInput
  }


  /**
   * WorkspacesCountOutputType without action
   */
  export type WorkspacesCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_documentsWhereInput
  }



  /**
   * Models
   */

  /**
   * Model api_keys
   */

  export type AggregateApi_keys = {
    _count: Api_keysCountAggregateOutputType | null
    _avg: Api_keysAvgAggregateOutputType | null
    _sum: Api_keysSumAggregateOutputType | null
    _min: Api_keysMinAggregateOutputType | null
    _max: Api_keysMaxAggregateOutputType | null
  }

  export type Api_keysAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
  }

  export type Api_keysSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
  }

  export type Api_keysMinAggregateOutputType = {
    id: number | null
    secret: string | null
    createdBy: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Api_keysMaxAggregateOutputType = {
    id: number | null
    secret: string | null
    createdBy: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Api_keysCountAggregateOutputType = {
    id: number
    secret: number
    createdBy: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type Api_keysAvgAggregateInputType = {
    id?: true
    createdBy?: true
  }

  export type Api_keysSumAggregateInputType = {
    id?: true
    createdBy?: true
  }

  export type Api_keysMinAggregateInputType = {
    id?: true
    secret?: true
    createdBy?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Api_keysMaxAggregateInputType = {
    id?: true
    secret?: true
    createdBy?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Api_keysCountAggregateInputType = {
    id?: true
    secret?: true
    createdBy?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type Api_keysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which api_keys to aggregate.
     */
    where?: api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_keys to fetch.
     */
    orderBy?: api_keysOrderByWithRelationInput | api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned api_keys
    **/
    _count?: true | Api_keysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Api_keysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Api_keysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Api_keysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Api_keysMaxAggregateInputType
  }

  export type GetApi_keysAggregateType<T extends Api_keysAggregateArgs> = {
        [P in keyof T & keyof AggregateApi_keys]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApi_keys[P]>
      : GetScalarType<T[P], AggregateApi_keys[P]>
  }




  export type api_keysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: api_keysWhereInput
    orderBy?: api_keysOrderByWithAggregationInput | api_keysOrderByWithAggregationInput[]
    by: Api_keysScalarFieldEnum[] | Api_keysScalarFieldEnum
    having?: api_keysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Api_keysCountAggregateInputType | true
    _avg?: Api_keysAvgAggregateInputType
    _sum?: Api_keysSumAggregateInputType
    _min?: Api_keysMinAggregateInputType
    _max?: Api_keysMaxAggregateInputType
  }

  export type Api_keysGroupByOutputType = {
    id: number
    secret: string | null
    createdBy: number | null
    createdAt: Date
    lastUpdatedAt: Date
    _count: Api_keysCountAggregateOutputType | null
    _avg: Api_keysAvgAggregateOutputType | null
    _sum: Api_keysSumAggregateOutputType | null
    _min: Api_keysMinAggregateOutputType | null
    _max: Api_keysMaxAggregateOutputType | null
  }

  type GetApi_keysGroupByPayload<T extends api_keysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Api_keysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Api_keysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Api_keysGroupByOutputType[P]>
            : GetScalarType<T[P], Api_keysGroupByOutputType[P]>
        }
      >
    >


  export type api_keysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    secret?: boolean
    createdBy?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }, ExtArgs["result"]["api_keys"]>

  export type api_keysSelectScalar = {
    id?: boolean
    secret?: boolean
    createdBy?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }


  export type $api_keysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "api_keys"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      secret: string | null
      createdBy: number | null
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["api_keys"]>
    composites: {}
  }


  type api_keysGetPayload<S extends boolean | null | undefined | api_keysDefaultArgs> = $Result.GetResult<Prisma.$api_keysPayload, S>

  type api_keysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<api_keysFindManyArgs, 'select' | 'include'> & {
      select?: Api_keysCountAggregateInputType | true
    }

  export interface api_keysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['api_keys'], meta: { name: 'api_keys' } }
    /**
     * Find zero or one Api_keys that matches the filter.
     * @param {api_keysFindUniqueArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends api_keysFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, api_keysFindUniqueArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Api_keys that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {api_keysFindUniqueOrThrowArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends api_keysFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, api_keysFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Api_keys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_keysFindFirstArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends api_keysFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, api_keysFindFirstArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Api_keys that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_keysFindFirstOrThrowArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends api_keysFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, api_keysFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Api_keys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_keysFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Api_keys
     * const api_keys = await prisma.api_keys.findMany()
     * 
     * // Get first 10 Api_keys
     * const api_keys = await prisma.api_keys.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const api_keysWithIdOnly = await prisma.api_keys.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends api_keysFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, api_keysFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Api_keys.
     * @param {api_keysCreateArgs} args - Arguments to create a Api_keys.
     * @example
     * // Create one Api_keys
     * const Api_keys = await prisma.api_keys.create({
     *   data: {
     *     // ... data to create a Api_keys
     *   }
     * })
     * 
    **/
    create<T extends api_keysCreateArgs<ExtArgs>>(
      args: SelectSubset<T, api_keysCreateArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Api_keys.
     * @param {api_keysDeleteArgs} args - Arguments to delete one Api_keys.
     * @example
     * // Delete one Api_keys
     * const Api_keys = await prisma.api_keys.delete({
     *   where: {
     *     // ... filter to delete one Api_keys
     *   }
     * })
     * 
    **/
    delete<T extends api_keysDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, api_keysDeleteArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Api_keys.
     * @param {api_keysUpdateArgs} args - Arguments to update one Api_keys.
     * @example
     * // Update one Api_keys
     * const api_keys = await prisma.api_keys.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends api_keysUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, api_keysUpdateArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Api_keys.
     * @param {api_keysDeleteManyArgs} args - Arguments to filter Api_keys to delete.
     * @example
     * // Delete a few Api_keys
     * const { count } = await prisma.api_keys.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends api_keysDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, api_keysDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_keysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Api_keys
     * const api_keys = await prisma.api_keys.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends api_keysUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, api_keysUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Api_keys.
     * @param {api_keysUpsertArgs} args - Arguments to update or create a Api_keys.
     * @example
     * // Update or create a Api_keys
     * const api_keys = await prisma.api_keys.upsert({
     *   create: {
     *     // ... data to create a Api_keys
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Api_keys we want to update
     *   }
     * })
    **/
    upsert<T extends api_keysUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, api_keysUpsertArgs<ExtArgs>>
    ): Prisma__api_keysClient<$Result.GetResult<Prisma.$api_keysPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_keysCountArgs} args - Arguments to filter Api_keys to count.
     * @example
     * // Count the number of Api_keys
     * const count = await prisma.api_keys.count({
     *   where: {
     *     // ... the filter for the Api_keys we want to count
     *   }
     * })
    **/
    count<T extends api_keysCountArgs>(
      args?: Subset<T, api_keysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Api_keysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Api_keysAggregateArgs>(args: Subset<T, Api_keysAggregateArgs>): Prisma.PrismaPromise<GetApi_keysAggregateType<T>>

    /**
     * Group by Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_keysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends api_keysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: api_keysGroupByArgs['orderBy'] }
        : { orderBy?: api_keysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, api_keysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApi_keysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the api_keys model
   */
  readonly fields: api_keysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for api_keys.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__api_keysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the api_keys model
   */ 
  interface api_keysFieldRefs {
    readonly id: FieldRef<"api_keys", 'Int'>
    readonly secret: FieldRef<"api_keys", 'String'>
    readonly createdBy: FieldRef<"api_keys", 'Int'>
    readonly createdAt: FieldRef<"api_keys", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"api_keys", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * api_keys findUnique
   */
  export type api_keysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * Filter, which api_keys to fetch.
     */
    where: api_keysWhereUniqueInput
  }


  /**
   * api_keys findUniqueOrThrow
   */
  export type api_keysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * Filter, which api_keys to fetch.
     */
    where: api_keysWhereUniqueInput
  }


  /**
   * api_keys findFirst
   */
  export type api_keysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * Filter, which api_keys to fetch.
     */
    where?: api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_keys to fetch.
     */
    orderBy?: api_keysOrderByWithRelationInput | api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for api_keys.
     */
    cursor?: api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of api_keys.
     */
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }


  /**
   * api_keys findFirstOrThrow
   */
  export type api_keysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * Filter, which api_keys to fetch.
     */
    where?: api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_keys to fetch.
     */
    orderBy?: api_keysOrderByWithRelationInput | api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for api_keys.
     */
    cursor?: api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of api_keys.
     */
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }


  /**
   * api_keys findMany
   */
  export type api_keysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * Filter, which api_keys to fetch.
     */
    where?: api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_keys to fetch.
     */
    orderBy?: api_keysOrderByWithRelationInput | api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing api_keys.
     */
    cursor?: api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_keys.
     */
    skip?: number
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }


  /**
   * api_keys create
   */
  export type api_keysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * The data needed to create a api_keys.
     */
    data?: XOR<api_keysCreateInput, api_keysUncheckedCreateInput>
  }


  /**
   * api_keys update
   */
  export type api_keysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * The data needed to update a api_keys.
     */
    data: XOR<api_keysUpdateInput, api_keysUncheckedUpdateInput>
    /**
     * Choose, which api_keys to update.
     */
    where: api_keysWhereUniqueInput
  }


  /**
   * api_keys updateMany
   */
  export type api_keysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update api_keys.
     */
    data: XOR<api_keysUpdateManyMutationInput, api_keysUncheckedUpdateManyInput>
    /**
     * Filter which api_keys to update
     */
    where?: api_keysWhereInput
  }


  /**
   * api_keys upsert
   */
  export type api_keysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * The filter to search for the api_keys to update in case it exists.
     */
    where: api_keysWhereUniqueInput
    /**
     * In case the api_keys found by the `where` argument doesn't exist, create a new api_keys with this data.
     */
    create: XOR<api_keysCreateInput, api_keysUncheckedCreateInput>
    /**
     * In case the api_keys was found with the provided `where` argument, update it with this data.
     */
    update: XOR<api_keysUpdateInput, api_keysUncheckedUpdateInput>
  }


  /**
   * api_keys delete
   */
  export type api_keysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
    /**
     * Filter which api_keys to delete.
     */
    where: api_keysWhereUniqueInput
  }


  /**
   * api_keys deleteMany
   */
  export type api_keysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which api_keys to delete
     */
    where?: api_keysWhereInput
  }


  /**
   * api_keys without action
   */
  export type api_keysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_keys
     */
    select?: api_keysSelect<ExtArgs> | null
  }



  /**
   * Model workspace_documents
   */

  export type AggregateWorkspace_documents = {
    _count: Workspace_documentsCountAggregateOutputType | null
    _avg: Workspace_documentsAvgAggregateOutputType | null
    _sum: Workspace_documentsSumAggregateOutputType | null
    _min: Workspace_documentsMinAggregateOutputType | null
    _max: Workspace_documentsMaxAggregateOutputType | null
  }

  export type Workspace_documentsAvgAggregateOutputType = {
    id: number | null
    workspaceId: number | null
  }

  export type Workspace_documentsSumAggregateOutputType = {
    id: number | null
    workspaceId: number | null
  }

  export type Workspace_documentsMinAggregateOutputType = {
    id: number | null
    docId: string | null
    filename: string | null
    docpath: string | null
    workspaceId: number | null
    metadata: string | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Workspace_documentsMaxAggregateOutputType = {
    id: number | null
    docId: string | null
    filename: string | null
    docpath: string | null
    workspaceId: number | null
    metadata: string | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Workspace_documentsCountAggregateOutputType = {
    id: number
    docId: number
    filename: number
    docpath: number
    workspaceId: number
    metadata: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type Workspace_documentsAvgAggregateInputType = {
    id?: true
    workspaceId?: true
  }

  export type Workspace_documentsSumAggregateInputType = {
    id?: true
    workspaceId?: true
  }

  export type Workspace_documentsMinAggregateInputType = {
    id?: true
    docId?: true
    filename?: true
    docpath?: true
    workspaceId?: true
    metadata?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Workspace_documentsMaxAggregateInputType = {
    id?: true
    docId?: true
    filename?: true
    docpath?: true
    workspaceId?: true
    metadata?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Workspace_documentsCountAggregateInputType = {
    id?: true
    docId?: true
    filename?: true
    docpath?: true
    workspaceId?: true
    metadata?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type Workspace_documentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspace_documents to aggregate.
     */
    where?: workspace_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_documents to fetch.
     */
    orderBy?: workspace_documentsOrderByWithRelationInput | workspace_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: workspace_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned workspace_documents
    **/
    _count?: true | Workspace_documentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Workspace_documentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Workspace_documentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Workspace_documentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Workspace_documentsMaxAggregateInputType
  }

  export type GetWorkspace_documentsAggregateType<T extends Workspace_documentsAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkspace_documents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkspace_documents[P]>
      : GetScalarType<T[P], AggregateWorkspace_documents[P]>
  }




  export type workspace_documentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_documentsWhereInput
    orderBy?: workspace_documentsOrderByWithAggregationInput | workspace_documentsOrderByWithAggregationInput[]
    by: Workspace_documentsScalarFieldEnum[] | Workspace_documentsScalarFieldEnum
    having?: workspace_documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Workspace_documentsCountAggregateInputType | true
    _avg?: Workspace_documentsAvgAggregateInputType
    _sum?: Workspace_documentsSumAggregateInputType
    _min?: Workspace_documentsMinAggregateInputType
    _max?: Workspace_documentsMaxAggregateInputType
  }

  export type Workspace_documentsGroupByOutputType = {
    id: number
    docId: string
    filename: string
    docpath: string
    workspaceId: number
    metadata: string | null
    createdAt: Date
    lastUpdatedAt: Date
    _count: Workspace_documentsCountAggregateOutputType | null
    _avg: Workspace_documentsAvgAggregateOutputType | null
    _sum: Workspace_documentsSumAggregateOutputType | null
    _min: Workspace_documentsMinAggregateOutputType | null
    _max: Workspace_documentsMaxAggregateOutputType | null
  }

  type GetWorkspace_documentsGroupByPayload<T extends workspace_documentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Workspace_documentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Workspace_documentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Workspace_documentsGroupByOutputType[P]>
            : GetScalarType<T[P], Workspace_documentsGroupByOutputType[P]>
        }
      >
    >


  export type workspace_documentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    docId?: boolean
    filename?: boolean
    docpath?: boolean
    workspaceId?: boolean
    metadata?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
    workspace?: boolean | workspacesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workspace_documents"]>

  export type workspace_documentsSelectScalar = {
    id?: boolean
    docId?: boolean
    filename?: boolean
    docpath?: boolean
    workspaceId?: boolean
    metadata?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }

  export type workspace_documentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workspace?: boolean | workspacesDefaultArgs<ExtArgs>
  }


  export type $workspace_documentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "workspace_documents"
    objects: {
      workspace: Prisma.$workspacesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      docId: string
      filename: string
      docpath: string
      workspaceId: number
      metadata: string | null
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["workspace_documents"]>
    composites: {}
  }


  type workspace_documentsGetPayload<S extends boolean | null | undefined | workspace_documentsDefaultArgs> = $Result.GetResult<Prisma.$workspace_documentsPayload, S>

  type workspace_documentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<workspace_documentsFindManyArgs, 'select' | 'include'> & {
      select?: Workspace_documentsCountAggregateInputType | true
    }

  export interface workspace_documentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['workspace_documents'], meta: { name: 'workspace_documents' } }
    /**
     * Find zero or one Workspace_documents that matches the filter.
     * @param {workspace_documentsFindUniqueArgs} args - Arguments to find a Workspace_documents
     * @example
     * // Get one Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends workspace_documentsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_documentsFindUniqueArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Workspace_documents that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {workspace_documentsFindUniqueOrThrowArgs} args - Arguments to find a Workspace_documents
     * @example
     * // Get one Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends workspace_documentsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_documentsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Workspace_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_documentsFindFirstArgs} args - Arguments to find a Workspace_documents
     * @example
     * // Get one Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends workspace_documentsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_documentsFindFirstArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Workspace_documents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_documentsFindFirstOrThrowArgs} args - Arguments to find a Workspace_documents
     * @example
     * // Get one Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends workspace_documentsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_documentsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Workspace_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_documentsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.findMany()
     * 
     * // Get first 10 Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workspace_documentsWithIdOnly = await prisma.workspace_documents.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends workspace_documentsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_documentsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Workspace_documents.
     * @param {workspace_documentsCreateArgs} args - Arguments to create a Workspace_documents.
     * @example
     * // Create one Workspace_documents
     * const Workspace_documents = await prisma.workspace_documents.create({
     *   data: {
     *     // ... data to create a Workspace_documents
     *   }
     * })
     * 
    **/
    create<T extends workspace_documentsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_documentsCreateArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Workspace_documents.
     * @param {workspace_documentsDeleteArgs} args - Arguments to delete one Workspace_documents.
     * @example
     * // Delete one Workspace_documents
     * const Workspace_documents = await prisma.workspace_documents.delete({
     *   where: {
     *     // ... filter to delete one Workspace_documents
     *   }
     * })
     * 
    **/
    delete<T extends workspace_documentsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_documentsDeleteArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Workspace_documents.
     * @param {workspace_documentsUpdateArgs} args - Arguments to update one Workspace_documents.
     * @example
     * // Update one Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends workspace_documentsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_documentsUpdateArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Workspace_documents.
     * @param {workspace_documentsDeleteManyArgs} args - Arguments to filter Workspace_documents to delete.
     * @example
     * // Delete a few Workspace_documents
     * const { count } = await prisma.workspace_documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends workspace_documentsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_documentsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workspace_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends workspace_documentsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_documentsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Workspace_documents.
     * @param {workspace_documentsUpsertArgs} args - Arguments to update or create a Workspace_documents.
     * @example
     * // Update or create a Workspace_documents
     * const workspace_documents = await prisma.workspace_documents.upsert({
     *   create: {
     *     // ... data to create a Workspace_documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workspace_documents we want to update
     *   }
     * })
    **/
    upsert<T extends workspace_documentsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_documentsUpsertArgs<ExtArgs>>
    ): Prisma__workspace_documentsClient<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Workspace_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_documentsCountArgs} args - Arguments to filter Workspace_documents to count.
     * @example
     * // Count the number of Workspace_documents
     * const count = await prisma.workspace_documents.count({
     *   where: {
     *     // ... the filter for the Workspace_documents we want to count
     *   }
     * })
    **/
    count<T extends workspace_documentsCountArgs>(
      args?: Subset<T, workspace_documentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Workspace_documentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workspace_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Workspace_documentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Workspace_documentsAggregateArgs>(args: Subset<T, Workspace_documentsAggregateArgs>): Prisma.PrismaPromise<GetWorkspace_documentsAggregateType<T>>

    /**
     * Group by Workspace_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends workspace_documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: workspace_documentsGroupByArgs['orderBy'] }
        : { orderBy?: workspace_documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, workspace_documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkspace_documentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the workspace_documents model
   */
  readonly fields: workspace_documentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for workspace_documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__workspace_documentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    workspace<T extends workspacesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, workspacesDefaultArgs<ExtArgs>>): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the workspace_documents model
   */ 
  interface workspace_documentsFieldRefs {
    readonly id: FieldRef<"workspace_documents", 'Int'>
    readonly docId: FieldRef<"workspace_documents", 'String'>
    readonly filename: FieldRef<"workspace_documents", 'String'>
    readonly docpath: FieldRef<"workspace_documents", 'String'>
    readonly workspaceId: FieldRef<"workspace_documents", 'Int'>
    readonly metadata: FieldRef<"workspace_documents", 'String'>
    readonly createdAt: FieldRef<"workspace_documents", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"workspace_documents", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * workspace_documents findUnique
   */
  export type workspace_documentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_documents to fetch.
     */
    where: workspace_documentsWhereUniqueInput
  }


  /**
   * workspace_documents findUniqueOrThrow
   */
  export type workspace_documentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_documents to fetch.
     */
    where: workspace_documentsWhereUniqueInput
  }


  /**
   * workspace_documents findFirst
   */
  export type workspace_documentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_documents to fetch.
     */
    where?: workspace_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_documents to fetch.
     */
    orderBy?: workspace_documentsOrderByWithRelationInput | workspace_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspace_documents.
     */
    cursor?: workspace_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspace_documents.
     */
    distinct?: Workspace_documentsScalarFieldEnum | Workspace_documentsScalarFieldEnum[]
  }


  /**
   * workspace_documents findFirstOrThrow
   */
  export type workspace_documentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_documents to fetch.
     */
    where?: workspace_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_documents to fetch.
     */
    orderBy?: workspace_documentsOrderByWithRelationInput | workspace_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspace_documents.
     */
    cursor?: workspace_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspace_documents.
     */
    distinct?: Workspace_documentsScalarFieldEnum | Workspace_documentsScalarFieldEnum[]
  }


  /**
   * workspace_documents findMany
   */
  export type workspace_documentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_documents to fetch.
     */
    where?: workspace_documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_documents to fetch.
     */
    orderBy?: workspace_documentsOrderByWithRelationInput | workspace_documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing workspace_documents.
     */
    cursor?: workspace_documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_documents.
     */
    skip?: number
    distinct?: Workspace_documentsScalarFieldEnum | Workspace_documentsScalarFieldEnum[]
  }


  /**
   * workspace_documents create
   */
  export type workspace_documentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * The data needed to create a workspace_documents.
     */
    data: XOR<workspace_documentsCreateInput, workspace_documentsUncheckedCreateInput>
  }


  /**
   * workspace_documents update
   */
  export type workspace_documentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * The data needed to update a workspace_documents.
     */
    data: XOR<workspace_documentsUpdateInput, workspace_documentsUncheckedUpdateInput>
    /**
     * Choose, which workspace_documents to update.
     */
    where: workspace_documentsWhereUniqueInput
  }


  /**
   * workspace_documents updateMany
   */
  export type workspace_documentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update workspace_documents.
     */
    data: XOR<workspace_documentsUpdateManyMutationInput, workspace_documentsUncheckedUpdateManyInput>
    /**
     * Filter which workspace_documents to update
     */
    where?: workspace_documentsWhereInput
  }


  /**
   * workspace_documents upsert
   */
  export type workspace_documentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * The filter to search for the workspace_documents to update in case it exists.
     */
    where: workspace_documentsWhereUniqueInput
    /**
     * In case the workspace_documents found by the `where` argument doesn't exist, create a new workspace_documents with this data.
     */
    create: XOR<workspace_documentsCreateInput, workspace_documentsUncheckedCreateInput>
    /**
     * In case the workspace_documents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<workspace_documentsUpdateInput, workspace_documentsUncheckedUpdateInput>
  }


  /**
   * workspace_documents delete
   */
  export type workspace_documentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    /**
     * Filter which workspace_documents to delete.
     */
    where: workspace_documentsWhereUniqueInput
  }


  /**
   * workspace_documents deleteMany
   */
  export type workspace_documentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspace_documents to delete
     */
    where?: workspace_documentsWhereInput
  }


  /**
   * workspace_documents without action
   */
  export type workspace_documentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
  }



  /**
   * Model invites
   */

  export type AggregateInvites = {
    _count: InvitesCountAggregateOutputType | null
    _avg: InvitesAvgAggregateOutputType | null
    _sum: InvitesSumAggregateOutputType | null
    _min: InvitesMinAggregateOutputType | null
    _max: InvitesMaxAggregateOutputType | null
  }

  export type InvitesAvgAggregateOutputType = {
    id: number | null
    claimedBy: number | null
    createdBy: number | null
  }

  export type InvitesSumAggregateOutputType = {
    id: number | null
    claimedBy: number | null
    createdBy: number | null
  }

  export type InvitesMinAggregateOutputType = {
    id: number | null
    code: string | null
    status: string | null
    claimedBy: number | null
    createdAt: Date | null
    createdBy: number | null
    lastUpdatedAt: Date | null
  }

  export type InvitesMaxAggregateOutputType = {
    id: number | null
    code: string | null
    status: string | null
    claimedBy: number | null
    createdAt: Date | null
    createdBy: number | null
    lastUpdatedAt: Date | null
  }

  export type InvitesCountAggregateOutputType = {
    id: number
    code: number
    status: number
    claimedBy: number
    createdAt: number
    createdBy: number
    lastUpdatedAt: number
    _all: number
  }


  export type InvitesAvgAggregateInputType = {
    id?: true
    claimedBy?: true
    createdBy?: true
  }

  export type InvitesSumAggregateInputType = {
    id?: true
    claimedBy?: true
    createdBy?: true
  }

  export type InvitesMinAggregateInputType = {
    id?: true
    code?: true
    status?: true
    claimedBy?: true
    createdAt?: true
    createdBy?: true
    lastUpdatedAt?: true
  }

  export type InvitesMaxAggregateInputType = {
    id?: true
    code?: true
    status?: true
    claimedBy?: true
    createdAt?: true
    createdBy?: true
    lastUpdatedAt?: true
  }

  export type InvitesCountAggregateInputType = {
    id?: true
    code?: true
    status?: true
    claimedBy?: true
    createdAt?: true
    createdBy?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type InvitesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invites to aggregate.
     */
    where?: invitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invites to fetch.
     */
    orderBy?: invitesOrderByWithRelationInput | invitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: invitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned invites
    **/
    _count?: true | InvitesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvitesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvitesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvitesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvitesMaxAggregateInputType
  }

  export type GetInvitesAggregateType<T extends InvitesAggregateArgs> = {
        [P in keyof T & keyof AggregateInvites]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvites[P]>
      : GetScalarType<T[P], AggregateInvites[P]>
  }




  export type invitesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: invitesWhereInput
    orderBy?: invitesOrderByWithAggregationInput | invitesOrderByWithAggregationInput[]
    by: InvitesScalarFieldEnum[] | InvitesScalarFieldEnum
    having?: invitesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvitesCountAggregateInputType | true
    _avg?: InvitesAvgAggregateInputType
    _sum?: InvitesSumAggregateInputType
    _min?: InvitesMinAggregateInputType
    _max?: InvitesMaxAggregateInputType
  }

  export type InvitesGroupByOutputType = {
    id: number
    code: string
    status: string
    claimedBy: number | null
    createdAt: Date
    createdBy: number
    lastUpdatedAt: Date
    _count: InvitesCountAggregateOutputType | null
    _avg: InvitesAvgAggregateOutputType | null
    _sum: InvitesSumAggregateOutputType | null
    _min: InvitesMinAggregateOutputType | null
    _max: InvitesMaxAggregateOutputType | null
  }

  type GetInvitesGroupByPayload<T extends invitesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvitesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvitesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvitesGroupByOutputType[P]>
            : GetScalarType<T[P], InvitesGroupByOutputType[P]>
        }
      >
    >


  export type invitesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    status?: boolean
    claimedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    lastUpdatedAt?: boolean
  }, ExtArgs["result"]["invites"]>

  export type invitesSelectScalar = {
    id?: boolean
    code?: boolean
    status?: boolean
    claimedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    lastUpdatedAt?: boolean
  }


  export type $invitesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "invites"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      code: string
      status: string
      claimedBy: number | null
      createdAt: Date
      createdBy: number
      lastUpdatedAt: Date
    }, ExtArgs["result"]["invites"]>
    composites: {}
  }


  type invitesGetPayload<S extends boolean | null | undefined | invitesDefaultArgs> = $Result.GetResult<Prisma.$invitesPayload, S>

  type invitesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<invitesFindManyArgs, 'select' | 'include'> & {
      select?: InvitesCountAggregateInputType | true
    }

  export interface invitesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['invites'], meta: { name: 'invites' } }
    /**
     * Find zero or one Invites that matches the filter.
     * @param {invitesFindUniqueArgs} args - Arguments to find a Invites
     * @example
     * // Get one Invites
     * const invites = await prisma.invites.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends invitesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, invitesFindUniqueArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Invites that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {invitesFindUniqueOrThrowArgs} args - Arguments to find a Invites
     * @example
     * // Get one Invites
     * const invites = await prisma.invites.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends invitesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, invitesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Invites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invitesFindFirstArgs} args - Arguments to find a Invites
     * @example
     * // Get one Invites
     * const invites = await prisma.invites.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends invitesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, invitesFindFirstArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Invites that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invitesFindFirstOrThrowArgs} args - Arguments to find a Invites
     * @example
     * // Get one Invites
     * const invites = await prisma.invites.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends invitesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, invitesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Invites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invitesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invites
     * const invites = await prisma.invites.findMany()
     * 
     * // Get first 10 Invites
     * const invites = await prisma.invites.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invitesWithIdOnly = await prisma.invites.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends invitesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, invitesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Invites.
     * @param {invitesCreateArgs} args - Arguments to create a Invites.
     * @example
     * // Create one Invites
     * const Invites = await prisma.invites.create({
     *   data: {
     *     // ... data to create a Invites
     *   }
     * })
     * 
    **/
    create<T extends invitesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, invitesCreateArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Invites.
     * @param {invitesDeleteArgs} args - Arguments to delete one Invites.
     * @example
     * // Delete one Invites
     * const Invites = await prisma.invites.delete({
     *   where: {
     *     // ... filter to delete one Invites
     *   }
     * })
     * 
    **/
    delete<T extends invitesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, invitesDeleteArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Invites.
     * @param {invitesUpdateArgs} args - Arguments to update one Invites.
     * @example
     * // Update one Invites
     * const invites = await prisma.invites.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends invitesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, invitesUpdateArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Invites.
     * @param {invitesDeleteManyArgs} args - Arguments to filter Invites to delete.
     * @example
     * // Delete a few Invites
     * const { count } = await prisma.invites.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends invitesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, invitesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invitesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invites
     * const invites = await prisma.invites.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends invitesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, invitesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Invites.
     * @param {invitesUpsertArgs} args - Arguments to update or create a Invites.
     * @example
     * // Update or create a Invites
     * const invites = await prisma.invites.upsert({
     *   create: {
     *     // ... data to create a Invites
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invites we want to update
     *   }
     * })
    **/
    upsert<T extends invitesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, invitesUpsertArgs<ExtArgs>>
    ): Prisma__invitesClient<$Result.GetResult<Prisma.$invitesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Invites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invitesCountArgs} args - Arguments to filter Invites to count.
     * @example
     * // Count the number of Invites
     * const count = await prisma.invites.count({
     *   where: {
     *     // ... the filter for the Invites we want to count
     *   }
     * })
    **/
    count<T extends invitesCountArgs>(
      args?: Subset<T, invitesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvitesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvitesAggregateArgs>(args: Subset<T, InvitesAggregateArgs>): Prisma.PrismaPromise<GetInvitesAggregateType<T>>

    /**
     * Group by Invites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invitesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends invitesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: invitesGroupByArgs['orderBy'] }
        : { orderBy?: invitesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, invitesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvitesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the invites model
   */
  readonly fields: invitesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for invites.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__invitesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the invites model
   */ 
  interface invitesFieldRefs {
    readonly id: FieldRef<"invites", 'Int'>
    readonly code: FieldRef<"invites", 'String'>
    readonly status: FieldRef<"invites", 'String'>
    readonly claimedBy: FieldRef<"invites", 'Int'>
    readonly createdAt: FieldRef<"invites", 'DateTime'>
    readonly createdBy: FieldRef<"invites", 'Int'>
    readonly lastUpdatedAt: FieldRef<"invites", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * invites findUnique
   */
  export type invitesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * Filter, which invites to fetch.
     */
    where: invitesWhereUniqueInput
  }


  /**
   * invites findUniqueOrThrow
   */
  export type invitesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * Filter, which invites to fetch.
     */
    where: invitesWhereUniqueInput
  }


  /**
   * invites findFirst
   */
  export type invitesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * Filter, which invites to fetch.
     */
    where?: invitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invites to fetch.
     */
    orderBy?: invitesOrderByWithRelationInput | invitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invites.
     */
    cursor?: invitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invites.
     */
    distinct?: InvitesScalarFieldEnum | InvitesScalarFieldEnum[]
  }


  /**
   * invites findFirstOrThrow
   */
  export type invitesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * Filter, which invites to fetch.
     */
    where?: invitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invites to fetch.
     */
    orderBy?: invitesOrderByWithRelationInput | invitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invites.
     */
    cursor?: invitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invites.
     */
    distinct?: InvitesScalarFieldEnum | InvitesScalarFieldEnum[]
  }


  /**
   * invites findMany
   */
  export type invitesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * Filter, which invites to fetch.
     */
    where?: invitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invites to fetch.
     */
    orderBy?: invitesOrderByWithRelationInput | invitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing invites.
     */
    cursor?: invitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invites.
     */
    skip?: number
    distinct?: InvitesScalarFieldEnum | InvitesScalarFieldEnum[]
  }


  /**
   * invites create
   */
  export type invitesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * The data needed to create a invites.
     */
    data: XOR<invitesCreateInput, invitesUncheckedCreateInput>
  }


  /**
   * invites update
   */
  export type invitesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * The data needed to update a invites.
     */
    data: XOR<invitesUpdateInput, invitesUncheckedUpdateInput>
    /**
     * Choose, which invites to update.
     */
    where: invitesWhereUniqueInput
  }


  /**
   * invites updateMany
   */
  export type invitesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update invites.
     */
    data: XOR<invitesUpdateManyMutationInput, invitesUncheckedUpdateManyInput>
    /**
     * Filter which invites to update
     */
    where?: invitesWhereInput
  }


  /**
   * invites upsert
   */
  export type invitesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * The filter to search for the invites to update in case it exists.
     */
    where: invitesWhereUniqueInput
    /**
     * In case the invites found by the `where` argument doesn't exist, create a new invites with this data.
     */
    create: XOR<invitesCreateInput, invitesUncheckedCreateInput>
    /**
     * In case the invites was found with the provided `where` argument, update it with this data.
     */
    update: XOR<invitesUpdateInput, invitesUncheckedUpdateInput>
  }


  /**
   * invites delete
   */
  export type invitesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
    /**
     * Filter which invites to delete.
     */
    where: invitesWhereUniqueInput
  }


  /**
   * invites deleteMany
   */
  export type invitesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invites to delete
     */
    where?: invitesWhereInput
  }


  /**
   * invites without action
   */
  export type invitesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invites
     */
    select?: invitesSelect<ExtArgs> | null
  }



  /**
   * Model system_settings
   */

  export type AggregateSystem_settings = {
    _count: System_settingsCountAggregateOutputType | null
    _avg: System_settingsAvgAggregateOutputType | null
    _sum: System_settingsSumAggregateOutputType | null
    _min: System_settingsMinAggregateOutputType | null
    _max: System_settingsMaxAggregateOutputType | null
  }

  export type System_settingsAvgAggregateOutputType = {
    id: number | null
  }

  export type System_settingsSumAggregateOutputType = {
    id: number | null
  }

  export type System_settingsMinAggregateOutputType = {
    id: number | null
    label: string | null
    value: string | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type System_settingsMaxAggregateOutputType = {
    id: number | null
    label: string | null
    value: string | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type System_settingsCountAggregateOutputType = {
    id: number
    label: number
    value: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type System_settingsAvgAggregateInputType = {
    id?: true
  }

  export type System_settingsSumAggregateInputType = {
    id?: true
  }

  export type System_settingsMinAggregateInputType = {
    id?: true
    label?: true
    value?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type System_settingsMaxAggregateInputType = {
    id?: true
    label?: true
    value?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type System_settingsCountAggregateInputType = {
    id?: true
    label?: true
    value?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type System_settingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which system_settings to aggregate.
     */
    where?: system_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of system_settings to fetch.
     */
    orderBy?: system_settingsOrderByWithRelationInput | system_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: system_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` system_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` system_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned system_settings
    **/
    _count?: true | System_settingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: System_settingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: System_settingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: System_settingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: System_settingsMaxAggregateInputType
  }

  export type GetSystem_settingsAggregateType<T extends System_settingsAggregateArgs> = {
        [P in keyof T & keyof AggregateSystem_settings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystem_settings[P]>
      : GetScalarType<T[P], AggregateSystem_settings[P]>
  }




  export type system_settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: system_settingsWhereInput
    orderBy?: system_settingsOrderByWithAggregationInput | system_settingsOrderByWithAggregationInput[]
    by: System_settingsScalarFieldEnum[] | System_settingsScalarFieldEnum
    having?: system_settingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: System_settingsCountAggregateInputType | true
    _avg?: System_settingsAvgAggregateInputType
    _sum?: System_settingsSumAggregateInputType
    _min?: System_settingsMinAggregateInputType
    _max?: System_settingsMaxAggregateInputType
  }

  export type System_settingsGroupByOutputType = {
    id: number
    label: string
    value: string | null
    createdAt: Date
    lastUpdatedAt: Date
    _count: System_settingsCountAggregateOutputType | null
    _avg: System_settingsAvgAggregateOutputType | null
    _sum: System_settingsSumAggregateOutputType | null
    _min: System_settingsMinAggregateOutputType | null
    _max: System_settingsMaxAggregateOutputType | null
  }

  type GetSystem_settingsGroupByPayload<T extends system_settingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<System_settingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof System_settingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], System_settingsGroupByOutputType[P]>
            : GetScalarType<T[P], System_settingsGroupByOutputType[P]>
        }
      >
    >


  export type system_settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    label?: boolean
    value?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }, ExtArgs["result"]["system_settings"]>

  export type system_settingsSelectScalar = {
    id?: boolean
    label?: boolean
    value?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }


  export type $system_settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "system_settings"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      label: string
      value: string | null
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["system_settings"]>
    composites: {}
  }


  type system_settingsGetPayload<S extends boolean | null | undefined | system_settingsDefaultArgs> = $Result.GetResult<Prisma.$system_settingsPayload, S>

  type system_settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<system_settingsFindManyArgs, 'select' | 'include'> & {
      select?: System_settingsCountAggregateInputType | true
    }

  export interface system_settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['system_settings'], meta: { name: 'system_settings' } }
    /**
     * Find zero or one System_settings that matches the filter.
     * @param {system_settingsFindUniqueArgs} args - Arguments to find a System_settings
     * @example
     * // Get one System_settings
     * const system_settings = await prisma.system_settings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends system_settingsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, system_settingsFindUniqueArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one System_settings that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {system_settingsFindUniqueOrThrowArgs} args - Arguments to find a System_settings
     * @example
     * // Get one System_settings
     * const system_settings = await prisma.system_settings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends system_settingsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, system_settingsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first System_settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {system_settingsFindFirstArgs} args - Arguments to find a System_settings
     * @example
     * // Get one System_settings
     * const system_settings = await prisma.system_settings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends system_settingsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, system_settingsFindFirstArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first System_settings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {system_settingsFindFirstOrThrowArgs} args - Arguments to find a System_settings
     * @example
     * // Get one System_settings
     * const system_settings = await prisma.system_settings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends system_settingsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, system_settingsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more System_settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {system_settingsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all System_settings
     * const system_settings = await prisma.system_settings.findMany()
     * 
     * // Get first 10 System_settings
     * const system_settings = await prisma.system_settings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const system_settingsWithIdOnly = await prisma.system_settings.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends system_settingsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, system_settingsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a System_settings.
     * @param {system_settingsCreateArgs} args - Arguments to create a System_settings.
     * @example
     * // Create one System_settings
     * const System_settings = await prisma.system_settings.create({
     *   data: {
     *     // ... data to create a System_settings
     *   }
     * })
     * 
    **/
    create<T extends system_settingsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, system_settingsCreateArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a System_settings.
     * @param {system_settingsDeleteArgs} args - Arguments to delete one System_settings.
     * @example
     * // Delete one System_settings
     * const System_settings = await prisma.system_settings.delete({
     *   where: {
     *     // ... filter to delete one System_settings
     *   }
     * })
     * 
    **/
    delete<T extends system_settingsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, system_settingsDeleteArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one System_settings.
     * @param {system_settingsUpdateArgs} args - Arguments to update one System_settings.
     * @example
     * // Update one System_settings
     * const system_settings = await prisma.system_settings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends system_settingsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, system_settingsUpdateArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more System_settings.
     * @param {system_settingsDeleteManyArgs} args - Arguments to filter System_settings to delete.
     * @example
     * // Delete a few System_settings
     * const { count } = await prisma.system_settings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends system_settingsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, system_settingsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more System_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {system_settingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many System_settings
     * const system_settings = await prisma.system_settings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends system_settingsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, system_settingsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one System_settings.
     * @param {system_settingsUpsertArgs} args - Arguments to update or create a System_settings.
     * @example
     * // Update or create a System_settings
     * const system_settings = await prisma.system_settings.upsert({
     *   create: {
     *     // ... data to create a System_settings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the System_settings we want to update
     *   }
     * })
    **/
    upsert<T extends system_settingsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, system_settingsUpsertArgs<ExtArgs>>
    ): Prisma__system_settingsClient<$Result.GetResult<Prisma.$system_settingsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of System_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {system_settingsCountArgs} args - Arguments to filter System_settings to count.
     * @example
     * // Count the number of System_settings
     * const count = await prisma.system_settings.count({
     *   where: {
     *     // ... the filter for the System_settings we want to count
     *   }
     * })
    **/
    count<T extends system_settingsCountArgs>(
      args?: Subset<T, system_settingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], System_settingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a System_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {System_settingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends System_settingsAggregateArgs>(args: Subset<T, System_settingsAggregateArgs>): Prisma.PrismaPromise<GetSystem_settingsAggregateType<T>>

    /**
     * Group by System_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {system_settingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends system_settingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: system_settingsGroupByArgs['orderBy'] }
        : { orderBy?: system_settingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, system_settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystem_settingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the system_settings model
   */
  readonly fields: system_settingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for system_settings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__system_settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the system_settings model
   */ 
  interface system_settingsFieldRefs {
    readonly id: FieldRef<"system_settings", 'Int'>
    readonly label: FieldRef<"system_settings", 'String'>
    readonly value: FieldRef<"system_settings", 'String'>
    readonly createdAt: FieldRef<"system_settings", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"system_settings", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * system_settings findUnique
   */
  export type system_settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * Filter, which system_settings to fetch.
     */
    where: system_settingsWhereUniqueInput
  }


  /**
   * system_settings findUniqueOrThrow
   */
  export type system_settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * Filter, which system_settings to fetch.
     */
    where: system_settingsWhereUniqueInput
  }


  /**
   * system_settings findFirst
   */
  export type system_settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * Filter, which system_settings to fetch.
     */
    where?: system_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of system_settings to fetch.
     */
    orderBy?: system_settingsOrderByWithRelationInput | system_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for system_settings.
     */
    cursor?: system_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` system_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` system_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of system_settings.
     */
    distinct?: System_settingsScalarFieldEnum | System_settingsScalarFieldEnum[]
  }


  /**
   * system_settings findFirstOrThrow
   */
  export type system_settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * Filter, which system_settings to fetch.
     */
    where?: system_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of system_settings to fetch.
     */
    orderBy?: system_settingsOrderByWithRelationInput | system_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for system_settings.
     */
    cursor?: system_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` system_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` system_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of system_settings.
     */
    distinct?: System_settingsScalarFieldEnum | System_settingsScalarFieldEnum[]
  }


  /**
   * system_settings findMany
   */
  export type system_settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * Filter, which system_settings to fetch.
     */
    where?: system_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of system_settings to fetch.
     */
    orderBy?: system_settingsOrderByWithRelationInput | system_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing system_settings.
     */
    cursor?: system_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` system_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` system_settings.
     */
    skip?: number
    distinct?: System_settingsScalarFieldEnum | System_settingsScalarFieldEnum[]
  }


  /**
   * system_settings create
   */
  export type system_settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * The data needed to create a system_settings.
     */
    data: XOR<system_settingsCreateInput, system_settingsUncheckedCreateInput>
  }


  /**
   * system_settings update
   */
  export type system_settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * The data needed to update a system_settings.
     */
    data: XOR<system_settingsUpdateInput, system_settingsUncheckedUpdateInput>
    /**
     * Choose, which system_settings to update.
     */
    where: system_settingsWhereUniqueInput
  }


  /**
   * system_settings updateMany
   */
  export type system_settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update system_settings.
     */
    data: XOR<system_settingsUpdateManyMutationInput, system_settingsUncheckedUpdateManyInput>
    /**
     * Filter which system_settings to update
     */
    where?: system_settingsWhereInput
  }


  /**
   * system_settings upsert
   */
  export type system_settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * The filter to search for the system_settings to update in case it exists.
     */
    where: system_settingsWhereUniqueInput
    /**
     * In case the system_settings found by the `where` argument doesn't exist, create a new system_settings with this data.
     */
    create: XOR<system_settingsCreateInput, system_settingsUncheckedCreateInput>
    /**
     * In case the system_settings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<system_settingsUpdateInput, system_settingsUncheckedUpdateInput>
  }


  /**
   * system_settings delete
   */
  export type system_settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
    /**
     * Filter which system_settings to delete.
     */
    where: system_settingsWhereUniqueInput
  }


  /**
   * system_settings deleteMany
   */
  export type system_settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which system_settings to delete
     */
    where?: system_settingsWhereInput
  }


  /**
   * system_settings without action
   */
  export type system_settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the system_settings
     */
    select?: system_settingsSelect<ExtArgs> | null
  }



  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    suspended: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    suspended: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    role: string | null
    suspended: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    role: string | null
    suspended: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    password: number
    role: number
    suspended: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    suspended?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    suspended?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    role?: true
    suspended?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    role?: true
    suspended?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    role?: true
    suspended?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    username: string | null
    password: string
    role: string
    suspended: number
    createdAt: Date
    lastUpdatedAt: Date
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    suspended?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
    workspace_chats?: boolean | users$workspace_chatsArgs<ExtArgs>
    workspace_users?: boolean | users$workspace_usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    suspended?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }

  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workspace_chats?: boolean | users$workspace_chatsArgs<ExtArgs>
    workspace_users?: boolean | users$workspace_usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      workspace_chats: Prisma.$workspace_chatsPayload<ExtArgs>[]
      workspace_users: Prisma.$workspace_usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string | null
      password: string
      role: string
      suspended: number
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    workspace_chats<T extends users$workspace_chatsArgs<ExtArgs> = {}>(args?: Subset<T, users$workspace_chatsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'findMany'> | Null>;

    workspace_users<T extends users$workspace_usersArgs<ExtArgs> = {}>(args?: Subset<T, users$workspace_usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly username: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly suspended: FieldRef<"users", 'Int'>
    readonly createdAt: FieldRef<"users", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users.workspace_chats
   */
  export type users$workspace_chatsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    where?: workspace_chatsWhereInput
    orderBy?: workspace_chatsOrderByWithRelationInput | workspace_chatsOrderByWithRelationInput[]
    cursor?: workspace_chatsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Workspace_chatsScalarFieldEnum | Workspace_chatsScalarFieldEnum[]
  }


  /**
   * users.workspace_users
   */
  export type users$workspace_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    where?: workspace_usersWhereInput
    orderBy?: workspace_usersOrderByWithRelationInput | workspace_usersOrderByWithRelationInput[]
    cursor?: workspace_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Workspace_usersScalarFieldEnum | Workspace_usersScalarFieldEnum[]
  }


  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
  }



  /**
   * Model document_vectors
   */

  export type AggregateDocument_vectors = {
    _count: Document_vectorsCountAggregateOutputType | null
    _avg: Document_vectorsAvgAggregateOutputType | null
    _sum: Document_vectorsSumAggregateOutputType | null
    _min: Document_vectorsMinAggregateOutputType | null
    _max: Document_vectorsMaxAggregateOutputType | null
  }

  export type Document_vectorsAvgAggregateOutputType = {
    id: number | null
  }

  export type Document_vectorsSumAggregateOutputType = {
    id: number | null
  }

  export type Document_vectorsMinAggregateOutputType = {
    id: number | null
    docId: string | null
    vectorId: string | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Document_vectorsMaxAggregateOutputType = {
    id: number | null
    docId: string | null
    vectorId: string | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Document_vectorsCountAggregateOutputType = {
    id: number
    docId: number
    vectorId: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type Document_vectorsAvgAggregateInputType = {
    id?: true
  }

  export type Document_vectorsSumAggregateInputType = {
    id?: true
  }

  export type Document_vectorsMinAggregateInputType = {
    id?: true
    docId?: true
    vectorId?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Document_vectorsMaxAggregateInputType = {
    id?: true
    docId?: true
    vectorId?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Document_vectorsCountAggregateInputType = {
    id?: true
    docId?: true
    vectorId?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type Document_vectorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_vectors to aggregate.
     */
    where?: document_vectorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_vectors to fetch.
     */
    orderBy?: document_vectorsOrderByWithRelationInput | document_vectorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: document_vectorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_vectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_vectors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_vectors
    **/
    _count?: true | Document_vectorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Document_vectorsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Document_vectorsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_vectorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_vectorsMaxAggregateInputType
  }

  export type GetDocument_vectorsAggregateType<T extends Document_vectorsAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_vectors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_vectors[P]>
      : GetScalarType<T[P], AggregateDocument_vectors[P]>
  }




  export type document_vectorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_vectorsWhereInput
    orderBy?: document_vectorsOrderByWithAggregationInput | document_vectorsOrderByWithAggregationInput[]
    by: Document_vectorsScalarFieldEnum[] | Document_vectorsScalarFieldEnum
    having?: document_vectorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_vectorsCountAggregateInputType | true
    _avg?: Document_vectorsAvgAggregateInputType
    _sum?: Document_vectorsSumAggregateInputType
    _min?: Document_vectorsMinAggregateInputType
    _max?: Document_vectorsMaxAggregateInputType
  }

  export type Document_vectorsGroupByOutputType = {
    id: number
    docId: string
    vectorId: string
    createdAt: Date
    lastUpdatedAt: Date
    _count: Document_vectorsCountAggregateOutputType | null
    _avg: Document_vectorsAvgAggregateOutputType | null
    _sum: Document_vectorsSumAggregateOutputType | null
    _min: Document_vectorsMinAggregateOutputType | null
    _max: Document_vectorsMaxAggregateOutputType | null
  }

  type GetDocument_vectorsGroupByPayload<T extends document_vectorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Document_vectorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_vectorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_vectorsGroupByOutputType[P]>
            : GetScalarType<T[P], Document_vectorsGroupByOutputType[P]>
        }
      >
    >


  export type document_vectorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    docId?: boolean
    vectorId?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }, ExtArgs["result"]["document_vectors"]>

  export type document_vectorsSelectScalar = {
    id?: boolean
    docId?: boolean
    vectorId?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }


  export type $document_vectorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "document_vectors"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      docId: string
      vectorId: string
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["document_vectors"]>
    composites: {}
  }


  type document_vectorsGetPayload<S extends boolean | null | undefined | document_vectorsDefaultArgs> = $Result.GetResult<Prisma.$document_vectorsPayload, S>

  type document_vectorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<document_vectorsFindManyArgs, 'select' | 'include'> & {
      select?: Document_vectorsCountAggregateInputType | true
    }

  export interface document_vectorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['document_vectors'], meta: { name: 'document_vectors' } }
    /**
     * Find zero or one Document_vectors that matches the filter.
     * @param {document_vectorsFindUniqueArgs} args - Arguments to find a Document_vectors
     * @example
     * // Get one Document_vectors
     * const document_vectors = await prisma.document_vectors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends document_vectorsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, document_vectorsFindUniqueArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Document_vectors that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {document_vectorsFindUniqueOrThrowArgs} args - Arguments to find a Document_vectors
     * @example
     * // Get one Document_vectors
     * const document_vectors = await prisma.document_vectors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends document_vectorsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, document_vectorsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Document_vectors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_vectorsFindFirstArgs} args - Arguments to find a Document_vectors
     * @example
     * // Get one Document_vectors
     * const document_vectors = await prisma.document_vectors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends document_vectorsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, document_vectorsFindFirstArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Document_vectors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_vectorsFindFirstOrThrowArgs} args - Arguments to find a Document_vectors
     * @example
     * // Get one Document_vectors
     * const document_vectors = await prisma.document_vectors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends document_vectorsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, document_vectorsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Document_vectors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_vectorsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_vectors
     * const document_vectors = await prisma.document_vectors.findMany()
     * 
     * // Get first 10 Document_vectors
     * const document_vectors = await prisma.document_vectors.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const document_vectorsWithIdOnly = await prisma.document_vectors.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends document_vectorsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_vectorsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Document_vectors.
     * @param {document_vectorsCreateArgs} args - Arguments to create a Document_vectors.
     * @example
     * // Create one Document_vectors
     * const Document_vectors = await prisma.document_vectors.create({
     *   data: {
     *     // ... data to create a Document_vectors
     *   }
     * })
     * 
    **/
    create<T extends document_vectorsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, document_vectorsCreateArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Document_vectors.
     * @param {document_vectorsDeleteArgs} args - Arguments to delete one Document_vectors.
     * @example
     * // Delete one Document_vectors
     * const Document_vectors = await prisma.document_vectors.delete({
     *   where: {
     *     // ... filter to delete one Document_vectors
     *   }
     * })
     * 
    **/
    delete<T extends document_vectorsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, document_vectorsDeleteArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Document_vectors.
     * @param {document_vectorsUpdateArgs} args - Arguments to update one Document_vectors.
     * @example
     * // Update one Document_vectors
     * const document_vectors = await prisma.document_vectors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends document_vectorsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, document_vectorsUpdateArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Document_vectors.
     * @param {document_vectorsDeleteManyArgs} args - Arguments to filter Document_vectors to delete.
     * @example
     * // Delete a few Document_vectors
     * const { count } = await prisma.document_vectors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends document_vectorsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, document_vectorsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_vectors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_vectorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_vectors
     * const document_vectors = await prisma.document_vectors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends document_vectorsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, document_vectorsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Document_vectors.
     * @param {document_vectorsUpsertArgs} args - Arguments to update or create a Document_vectors.
     * @example
     * // Update or create a Document_vectors
     * const document_vectors = await prisma.document_vectors.upsert({
     *   create: {
     *     // ... data to create a Document_vectors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_vectors we want to update
     *   }
     * })
    **/
    upsert<T extends document_vectorsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, document_vectorsUpsertArgs<ExtArgs>>
    ): Prisma__document_vectorsClient<$Result.GetResult<Prisma.$document_vectorsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Document_vectors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_vectorsCountArgs} args - Arguments to filter Document_vectors to count.
     * @example
     * // Count the number of Document_vectors
     * const count = await prisma.document_vectors.count({
     *   where: {
     *     // ... the filter for the Document_vectors we want to count
     *   }
     * })
    **/
    count<T extends document_vectorsCountArgs>(
      args?: Subset<T, document_vectorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_vectorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_vectors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_vectorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_vectorsAggregateArgs>(args: Subset<T, Document_vectorsAggregateArgs>): Prisma.PrismaPromise<GetDocument_vectorsAggregateType<T>>

    /**
     * Group by Document_vectors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_vectorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends document_vectorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: document_vectorsGroupByArgs['orderBy'] }
        : { orderBy?: document_vectorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, document_vectorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_vectorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the document_vectors model
   */
  readonly fields: document_vectorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for document_vectors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__document_vectorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the document_vectors model
   */ 
  interface document_vectorsFieldRefs {
    readonly id: FieldRef<"document_vectors", 'Int'>
    readonly docId: FieldRef<"document_vectors", 'String'>
    readonly vectorId: FieldRef<"document_vectors", 'String'>
    readonly createdAt: FieldRef<"document_vectors", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"document_vectors", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * document_vectors findUnique
   */
  export type document_vectorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * Filter, which document_vectors to fetch.
     */
    where: document_vectorsWhereUniqueInput
  }


  /**
   * document_vectors findUniqueOrThrow
   */
  export type document_vectorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * Filter, which document_vectors to fetch.
     */
    where: document_vectorsWhereUniqueInput
  }


  /**
   * document_vectors findFirst
   */
  export type document_vectorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * Filter, which document_vectors to fetch.
     */
    where?: document_vectorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_vectors to fetch.
     */
    orderBy?: document_vectorsOrderByWithRelationInput | document_vectorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_vectors.
     */
    cursor?: document_vectorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_vectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_vectors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_vectors.
     */
    distinct?: Document_vectorsScalarFieldEnum | Document_vectorsScalarFieldEnum[]
  }


  /**
   * document_vectors findFirstOrThrow
   */
  export type document_vectorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * Filter, which document_vectors to fetch.
     */
    where?: document_vectorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_vectors to fetch.
     */
    orderBy?: document_vectorsOrderByWithRelationInput | document_vectorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_vectors.
     */
    cursor?: document_vectorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_vectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_vectors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_vectors.
     */
    distinct?: Document_vectorsScalarFieldEnum | Document_vectorsScalarFieldEnum[]
  }


  /**
   * document_vectors findMany
   */
  export type document_vectorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * Filter, which document_vectors to fetch.
     */
    where?: document_vectorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_vectors to fetch.
     */
    orderBy?: document_vectorsOrderByWithRelationInput | document_vectorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_vectors.
     */
    cursor?: document_vectorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_vectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_vectors.
     */
    skip?: number
    distinct?: Document_vectorsScalarFieldEnum | Document_vectorsScalarFieldEnum[]
  }


  /**
   * document_vectors create
   */
  export type document_vectorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * The data needed to create a document_vectors.
     */
    data: XOR<document_vectorsCreateInput, document_vectorsUncheckedCreateInput>
  }


  /**
   * document_vectors update
   */
  export type document_vectorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * The data needed to update a document_vectors.
     */
    data: XOR<document_vectorsUpdateInput, document_vectorsUncheckedUpdateInput>
    /**
     * Choose, which document_vectors to update.
     */
    where: document_vectorsWhereUniqueInput
  }


  /**
   * document_vectors updateMany
   */
  export type document_vectorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update document_vectors.
     */
    data: XOR<document_vectorsUpdateManyMutationInput, document_vectorsUncheckedUpdateManyInput>
    /**
     * Filter which document_vectors to update
     */
    where?: document_vectorsWhereInput
  }


  /**
   * document_vectors upsert
   */
  export type document_vectorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * The filter to search for the document_vectors to update in case it exists.
     */
    where: document_vectorsWhereUniqueInput
    /**
     * In case the document_vectors found by the `where` argument doesn't exist, create a new document_vectors with this data.
     */
    create: XOR<document_vectorsCreateInput, document_vectorsUncheckedCreateInput>
    /**
     * In case the document_vectors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<document_vectorsUpdateInput, document_vectorsUncheckedUpdateInput>
  }


  /**
   * document_vectors delete
   */
  export type document_vectorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
    /**
     * Filter which document_vectors to delete.
     */
    where: document_vectorsWhereUniqueInput
  }


  /**
   * document_vectors deleteMany
   */
  export type document_vectorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_vectors to delete
     */
    where?: document_vectorsWhereInput
  }


  /**
   * document_vectors without action
   */
  export type document_vectorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_vectors
     */
    select?: document_vectorsSelect<ExtArgs> | null
  }



  /**
   * Model welcome_messages
   */

  export type AggregateWelcome_messages = {
    _count: Welcome_messagesCountAggregateOutputType | null
    _avg: Welcome_messagesAvgAggregateOutputType | null
    _sum: Welcome_messagesSumAggregateOutputType | null
    _min: Welcome_messagesMinAggregateOutputType | null
    _max: Welcome_messagesMaxAggregateOutputType | null
  }

  export type Welcome_messagesAvgAggregateOutputType = {
    id: number | null
    orderIndex: number | null
  }

  export type Welcome_messagesSumAggregateOutputType = {
    id: number | null
    orderIndex: number | null
  }

  export type Welcome_messagesMinAggregateOutputType = {
    id: number | null
    user: string | null
    response: string | null
    orderIndex: number | null
    createdAt: Date | null
  }

  export type Welcome_messagesMaxAggregateOutputType = {
    id: number | null
    user: string | null
    response: string | null
    orderIndex: number | null
    createdAt: Date | null
  }

  export type Welcome_messagesCountAggregateOutputType = {
    id: number
    user: number
    response: number
    orderIndex: number
    createdAt: number
    _all: number
  }


  export type Welcome_messagesAvgAggregateInputType = {
    id?: true
    orderIndex?: true
  }

  export type Welcome_messagesSumAggregateInputType = {
    id?: true
    orderIndex?: true
  }

  export type Welcome_messagesMinAggregateInputType = {
    id?: true
    user?: true
    response?: true
    orderIndex?: true
    createdAt?: true
  }

  export type Welcome_messagesMaxAggregateInputType = {
    id?: true
    user?: true
    response?: true
    orderIndex?: true
    createdAt?: true
  }

  export type Welcome_messagesCountAggregateInputType = {
    id?: true
    user?: true
    response?: true
    orderIndex?: true
    createdAt?: true
    _all?: true
  }

  export type Welcome_messagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which welcome_messages to aggregate.
     */
    where?: welcome_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of welcome_messages to fetch.
     */
    orderBy?: welcome_messagesOrderByWithRelationInput | welcome_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: welcome_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` welcome_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` welcome_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned welcome_messages
    **/
    _count?: true | Welcome_messagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Welcome_messagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Welcome_messagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Welcome_messagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Welcome_messagesMaxAggregateInputType
  }

  export type GetWelcome_messagesAggregateType<T extends Welcome_messagesAggregateArgs> = {
        [P in keyof T & keyof AggregateWelcome_messages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWelcome_messages[P]>
      : GetScalarType<T[P], AggregateWelcome_messages[P]>
  }




  export type welcome_messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: welcome_messagesWhereInput
    orderBy?: welcome_messagesOrderByWithAggregationInput | welcome_messagesOrderByWithAggregationInput[]
    by: Welcome_messagesScalarFieldEnum[] | Welcome_messagesScalarFieldEnum
    having?: welcome_messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Welcome_messagesCountAggregateInputType | true
    _avg?: Welcome_messagesAvgAggregateInputType
    _sum?: Welcome_messagesSumAggregateInputType
    _min?: Welcome_messagesMinAggregateInputType
    _max?: Welcome_messagesMaxAggregateInputType
  }

  export type Welcome_messagesGroupByOutputType = {
    id: number
    user: string
    response: string
    orderIndex: number | null
    createdAt: Date
    _count: Welcome_messagesCountAggregateOutputType | null
    _avg: Welcome_messagesAvgAggregateOutputType | null
    _sum: Welcome_messagesSumAggregateOutputType | null
    _min: Welcome_messagesMinAggregateOutputType | null
    _max: Welcome_messagesMaxAggregateOutputType | null
  }

  type GetWelcome_messagesGroupByPayload<T extends welcome_messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Welcome_messagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Welcome_messagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Welcome_messagesGroupByOutputType[P]>
            : GetScalarType<T[P], Welcome_messagesGroupByOutputType[P]>
        }
      >
    >


  export type welcome_messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user?: boolean
    response?: boolean
    orderIndex?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["welcome_messages"]>

  export type welcome_messagesSelectScalar = {
    id?: boolean
    user?: boolean
    response?: boolean
    orderIndex?: boolean
    createdAt?: boolean
  }


  export type $welcome_messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "welcome_messages"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user: string
      response: string
      orderIndex: number | null
      createdAt: Date
    }, ExtArgs["result"]["welcome_messages"]>
    composites: {}
  }


  type welcome_messagesGetPayload<S extends boolean | null | undefined | welcome_messagesDefaultArgs> = $Result.GetResult<Prisma.$welcome_messagesPayload, S>

  type welcome_messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<welcome_messagesFindManyArgs, 'select' | 'include'> & {
      select?: Welcome_messagesCountAggregateInputType | true
    }

  export interface welcome_messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['welcome_messages'], meta: { name: 'welcome_messages' } }
    /**
     * Find zero or one Welcome_messages that matches the filter.
     * @param {welcome_messagesFindUniqueArgs} args - Arguments to find a Welcome_messages
     * @example
     * // Get one Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends welcome_messagesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, welcome_messagesFindUniqueArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Welcome_messages that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {welcome_messagesFindUniqueOrThrowArgs} args - Arguments to find a Welcome_messages
     * @example
     * // Get one Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends welcome_messagesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, welcome_messagesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Welcome_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {welcome_messagesFindFirstArgs} args - Arguments to find a Welcome_messages
     * @example
     * // Get one Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends welcome_messagesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, welcome_messagesFindFirstArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Welcome_messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {welcome_messagesFindFirstOrThrowArgs} args - Arguments to find a Welcome_messages
     * @example
     * // Get one Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends welcome_messagesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, welcome_messagesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Welcome_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {welcome_messagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.findMany()
     * 
     * // Get first 10 Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const welcome_messagesWithIdOnly = await prisma.welcome_messages.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends welcome_messagesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, welcome_messagesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Welcome_messages.
     * @param {welcome_messagesCreateArgs} args - Arguments to create a Welcome_messages.
     * @example
     * // Create one Welcome_messages
     * const Welcome_messages = await prisma.welcome_messages.create({
     *   data: {
     *     // ... data to create a Welcome_messages
     *   }
     * })
     * 
    **/
    create<T extends welcome_messagesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, welcome_messagesCreateArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Welcome_messages.
     * @param {welcome_messagesDeleteArgs} args - Arguments to delete one Welcome_messages.
     * @example
     * // Delete one Welcome_messages
     * const Welcome_messages = await prisma.welcome_messages.delete({
     *   where: {
     *     // ... filter to delete one Welcome_messages
     *   }
     * })
     * 
    **/
    delete<T extends welcome_messagesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, welcome_messagesDeleteArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Welcome_messages.
     * @param {welcome_messagesUpdateArgs} args - Arguments to update one Welcome_messages.
     * @example
     * // Update one Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends welcome_messagesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, welcome_messagesUpdateArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Welcome_messages.
     * @param {welcome_messagesDeleteManyArgs} args - Arguments to filter Welcome_messages to delete.
     * @example
     * // Delete a few Welcome_messages
     * const { count } = await prisma.welcome_messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends welcome_messagesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, welcome_messagesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Welcome_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {welcome_messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends welcome_messagesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, welcome_messagesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Welcome_messages.
     * @param {welcome_messagesUpsertArgs} args - Arguments to update or create a Welcome_messages.
     * @example
     * // Update or create a Welcome_messages
     * const welcome_messages = await prisma.welcome_messages.upsert({
     *   create: {
     *     // ... data to create a Welcome_messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Welcome_messages we want to update
     *   }
     * })
    **/
    upsert<T extends welcome_messagesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, welcome_messagesUpsertArgs<ExtArgs>>
    ): Prisma__welcome_messagesClient<$Result.GetResult<Prisma.$welcome_messagesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Welcome_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {welcome_messagesCountArgs} args - Arguments to filter Welcome_messages to count.
     * @example
     * // Count the number of Welcome_messages
     * const count = await prisma.welcome_messages.count({
     *   where: {
     *     // ... the filter for the Welcome_messages we want to count
     *   }
     * })
    **/
    count<T extends welcome_messagesCountArgs>(
      args?: Subset<T, welcome_messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Welcome_messagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Welcome_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Welcome_messagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Welcome_messagesAggregateArgs>(args: Subset<T, Welcome_messagesAggregateArgs>): Prisma.PrismaPromise<GetWelcome_messagesAggregateType<T>>

    /**
     * Group by Welcome_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {welcome_messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends welcome_messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: welcome_messagesGroupByArgs['orderBy'] }
        : { orderBy?: welcome_messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, welcome_messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWelcome_messagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the welcome_messages model
   */
  readonly fields: welcome_messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for welcome_messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__welcome_messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the welcome_messages model
   */ 
  interface welcome_messagesFieldRefs {
    readonly id: FieldRef<"welcome_messages", 'Int'>
    readonly user: FieldRef<"welcome_messages", 'String'>
    readonly response: FieldRef<"welcome_messages", 'String'>
    readonly orderIndex: FieldRef<"welcome_messages", 'Int'>
    readonly createdAt: FieldRef<"welcome_messages", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * welcome_messages findUnique
   */
  export type welcome_messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * Filter, which welcome_messages to fetch.
     */
    where: welcome_messagesWhereUniqueInput
  }


  /**
   * welcome_messages findUniqueOrThrow
   */
  export type welcome_messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * Filter, which welcome_messages to fetch.
     */
    where: welcome_messagesWhereUniqueInput
  }


  /**
   * welcome_messages findFirst
   */
  export type welcome_messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * Filter, which welcome_messages to fetch.
     */
    where?: welcome_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of welcome_messages to fetch.
     */
    orderBy?: welcome_messagesOrderByWithRelationInput | welcome_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for welcome_messages.
     */
    cursor?: welcome_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` welcome_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` welcome_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of welcome_messages.
     */
    distinct?: Welcome_messagesScalarFieldEnum | Welcome_messagesScalarFieldEnum[]
  }


  /**
   * welcome_messages findFirstOrThrow
   */
  export type welcome_messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * Filter, which welcome_messages to fetch.
     */
    where?: welcome_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of welcome_messages to fetch.
     */
    orderBy?: welcome_messagesOrderByWithRelationInput | welcome_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for welcome_messages.
     */
    cursor?: welcome_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` welcome_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` welcome_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of welcome_messages.
     */
    distinct?: Welcome_messagesScalarFieldEnum | Welcome_messagesScalarFieldEnum[]
  }


  /**
   * welcome_messages findMany
   */
  export type welcome_messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * Filter, which welcome_messages to fetch.
     */
    where?: welcome_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of welcome_messages to fetch.
     */
    orderBy?: welcome_messagesOrderByWithRelationInput | welcome_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing welcome_messages.
     */
    cursor?: welcome_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` welcome_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` welcome_messages.
     */
    skip?: number
    distinct?: Welcome_messagesScalarFieldEnum | Welcome_messagesScalarFieldEnum[]
  }


  /**
   * welcome_messages create
   */
  export type welcome_messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * The data needed to create a welcome_messages.
     */
    data: XOR<welcome_messagesCreateInput, welcome_messagesUncheckedCreateInput>
  }


  /**
   * welcome_messages update
   */
  export type welcome_messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * The data needed to update a welcome_messages.
     */
    data: XOR<welcome_messagesUpdateInput, welcome_messagesUncheckedUpdateInput>
    /**
     * Choose, which welcome_messages to update.
     */
    where: welcome_messagesWhereUniqueInput
  }


  /**
   * welcome_messages updateMany
   */
  export type welcome_messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update welcome_messages.
     */
    data: XOR<welcome_messagesUpdateManyMutationInput, welcome_messagesUncheckedUpdateManyInput>
    /**
     * Filter which welcome_messages to update
     */
    where?: welcome_messagesWhereInput
  }


  /**
   * welcome_messages upsert
   */
  export type welcome_messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * The filter to search for the welcome_messages to update in case it exists.
     */
    where: welcome_messagesWhereUniqueInput
    /**
     * In case the welcome_messages found by the `where` argument doesn't exist, create a new welcome_messages with this data.
     */
    create: XOR<welcome_messagesCreateInput, welcome_messagesUncheckedCreateInput>
    /**
     * In case the welcome_messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<welcome_messagesUpdateInput, welcome_messagesUncheckedUpdateInput>
  }


  /**
   * welcome_messages delete
   */
  export type welcome_messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
    /**
     * Filter which welcome_messages to delete.
     */
    where: welcome_messagesWhereUniqueInput
  }


  /**
   * welcome_messages deleteMany
   */
  export type welcome_messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which welcome_messages to delete
     */
    where?: welcome_messagesWhereInput
  }


  /**
   * welcome_messages without action
   */
  export type welcome_messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the welcome_messages
     */
    select?: welcome_messagesSelect<ExtArgs> | null
  }



  /**
   * Model workspaces
   */

  export type AggregateWorkspaces = {
    _count: WorkspacesCountAggregateOutputType | null
    _avg: WorkspacesAvgAggregateOutputType | null
    _sum: WorkspacesSumAggregateOutputType | null
    _min: WorkspacesMinAggregateOutputType | null
    _max: WorkspacesMaxAggregateOutputType | null
  }

  export type WorkspacesAvgAggregateOutputType = {
    id: number | null
    openAiTemp: number | null
    openAiHistory: number | null
  }

  export type WorkspacesSumAggregateOutputType = {
    id: number | null
    openAiTemp: number | null
    openAiHistory: number | null
  }

  export type WorkspacesMinAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    vectorTag: string | null
    createdAt: Date | null
    openAiTemp: number | null
    openAiHistory: number | null
    lastUpdatedAt: Date | null
    openAiPrompt: string | null
  }

  export type WorkspacesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    vectorTag: string | null
    createdAt: Date | null
    openAiTemp: number | null
    openAiHistory: number | null
    lastUpdatedAt: Date | null
    openAiPrompt: string | null
  }

  export type WorkspacesCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    vectorTag: number
    createdAt: number
    openAiTemp: number
    openAiHistory: number
    lastUpdatedAt: number
    openAiPrompt: number
    _all: number
  }


  export type WorkspacesAvgAggregateInputType = {
    id?: true
    openAiTemp?: true
    openAiHistory?: true
  }

  export type WorkspacesSumAggregateInputType = {
    id?: true
    openAiTemp?: true
    openAiHistory?: true
  }

  export type WorkspacesMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    vectorTag?: true
    createdAt?: true
    openAiTemp?: true
    openAiHistory?: true
    lastUpdatedAt?: true
    openAiPrompt?: true
  }

  export type WorkspacesMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    vectorTag?: true
    createdAt?: true
    openAiTemp?: true
    openAiHistory?: true
    lastUpdatedAt?: true
    openAiPrompt?: true
  }

  export type WorkspacesCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    vectorTag?: true
    createdAt?: true
    openAiTemp?: true
    openAiHistory?: true
    lastUpdatedAt?: true
    openAiPrompt?: true
    _all?: true
  }

  export type WorkspacesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspaces to aggregate.
     */
    where?: workspacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspaces to fetch.
     */
    orderBy?: workspacesOrderByWithRelationInput | workspacesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: workspacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspaces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspaces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned workspaces
    **/
    _count?: true | WorkspacesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkspacesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkspacesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkspacesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkspacesMaxAggregateInputType
  }

  export type GetWorkspacesAggregateType<T extends WorkspacesAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkspaces]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkspaces[P]>
      : GetScalarType<T[P], AggregateWorkspaces[P]>
  }




  export type workspacesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspacesWhereInput
    orderBy?: workspacesOrderByWithAggregationInput | workspacesOrderByWithAggregationInput[]
    by: WorkspacesScalarFieldEnum[] | WorkspacesScalarFieldEnum
    having?: workspacesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkspacesCountAggregateInputType | true
    _avg?: WorkspacesAvgAggregateInputType
    _sum?: WorkspacesSumAggregateInputType
    _min?: WorkspacesMinAggregateInputType
    _max?: WorkspacesMaxAggregateInputType
  }

  export type WorkspacesGroupByOutputType = {
    id: number
    name: string
    slug: string
    vectorTag: string | null
    createdAt: Date
    openAiTemp: number | null
    openAiHistory: number
    lastUpdatedAt: Date
    openAiPrompt: string | null
    _count: WorkspacesCountAggregateOutputType | null
    _avg: WorkspacesAvgAggregateOutputType | null
    _sum: WorkspacesSumAggregateOutputType | null
    _min: WorkspacesMinAggregateOutputType | null
    _max: WorkspacesMaxAggregateOutputType | null
  }

  type GetWorkspacesGroupByPayload<T extends workspacesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WorkspacesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WorkspacesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WorkspacesGroupByOutputType[P]>
            : GetScalarType<T[P], WorkspacesGroupByOutputType[P]>
        }
      >
    >


  export type workspacesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    vectorTag?: boolean
    createdAt?: boolean
    openAiTemp?: boolean
    openAiHistory?: boolean
    lastUpdatedAt?: boolean
    openAiPrompt?: boolean
    workspace_users?: boolean | workspaces$workspace_usersArgs<ExtArgs>
    documents?: boolean | workspaces$documentsArgs<ExtArgs>
    _count?: boolean | WorkspacesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workspaces"]>

  export type workspacesSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    vectorTag?: boolean
    createdAt?: boolean
    openAiTemp?: boolean
    openAiHistory?: boolean
    lastUpdatedAt?: boolean
    openAiPrompt?: boolean
  }

  export type workspacesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workspace_users?: boolean | workspaces$workspace_usersArgs<ExtArgs>
    documents?: boolean | workspaces$documentsArgs<ExtArgs>
    _count?: boolean | WorkspacesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $workspacesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "workspaces"
    objects: {
      workspace_users: Prisma.$workspace_usersPayload<ExtArgs>[]
      documents: Prisma.$workspace_documentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      slug: string
      vectorTag: string | null
      createdAt: Date
      openAiTemp: number | null
      openAiHistory: number
      lastUpdatedAt: Date
      openAiPrompt: string | null
    }, ExtArgs["result"]["workspaces"]>
    composites: {}
  }


  type workspacesGetPayload<S extends boolean | null | undefined | workspacesDefaultArgs> = $Result.GetResult<Prisma.$workspacesPayload, S>

  type workspacesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<workspacesFindManyArgs, 'select' | 'include'> & {
      select?: WorkspacesCountAggregateInputType | true
    }

  export interface workspacesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['workspaces'], meta: { name: 'workspaces' } }
    /**
     * Find zero or one Workspaces that matches the filter.
     * @param {workspacesFindUniqueArgs} args - Arguments to find a Workspaces
     * @example
     * // Get one Workspaces
     * const workspaces = await prisma.workspaces.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends workspacesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, workspacesFindUniqueArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Workspaces that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {workspacesFindUniqueOrThrowArgs} args - Arguments to find a Workspaces
     * @example
     * // Get one Workspaces
     * const workspaces = await prisma.workspaces.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends workspacesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspacesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Workspaces that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspacesFindFirstArgs} args - Arguments to find a Workspaces
     * @example
     * // Get one Workspaces
     * const workspaces = await prisma.workspaces.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends workspacesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, workspacesFindFirstArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Workspaces that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspacesFindFirstOrThrowArgs} args - Arguments to find a Workspaces
     * @example
     * // Get one Workspaces
     * const workspaces = await prisma.workspaces.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends workspacesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspacesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Workspaces that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspacesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workspaces
     * const workspaces = await prisma.workspaces.findMany()
     * 
     * // Get first 10 Workspaces
     * const workspaces = await prisma.workspaces.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workspacesWithIdOnly = await prisma.workspaces.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends workspacesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspacesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Workspaces.
     * @param {workspacesCreateArgs} args - Arguments to create a Workspaces.
     * @example
     * // Create one Workspaces
     * const Workspaces = await prisma.workspaces.create({
     *   data: {
     *     // ... data to create a Workspaces
     *   }
     * })
     * 
    **/
    create<T extends workspacesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, workspacesCreateArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Workspaces.
     * @param {workspacesDeleteArgs} args - Arguments to delete one Workspaces.
     * @example
     * // Delete one Workspaces
     * const Workspaces = await prisma.workspaces.delete({
     *   where: {
     *     // ... filter to delete one Workspaces
     *   }
     * })
     * 
    **/
    delete<T extends workspacesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, workspacesDeleteArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Workspaces.
     * @param {workspacesUpdateArgs} args - Arguments to update one Workspaces.
     * @example
     * // Update one Workspaces
     * const workspaces = await prisma.workspaces.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends workspacesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, workspacesUpdateArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Workspaces.
     * @param {workspacesDeleteManyArgs} args - Arguments to filter Workspaces to delete.
     * @example
     * // Delete a few Workspaces
     * const { count } = await prisma.workspaces.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends workspacesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspacesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workspaces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspacesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workspaces
     * const workspaces = await prisma.workspaces.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends workspacesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, workspacesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Workspaces.
     * @param {workspacesUpsertArgs} args - Arguments to update or create a Workspaces.
     * @example
     * // Update or create a Workspaces
     * const workspaces = await prisma.workspaces.upsert({
     *   create: {
     *     // ... data to create a Workspaces
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workspaces we want to update
     *   }
     * })
    **/
    upsert<T extends workspacesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, workspacesUpsertArgs<ExtArgs>>
    ): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Workspaces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspacesCountArgs} args - Arguments to filter Workspaces to count.
     * @example
     * // Count the number of Workspaces
     * const count = await prisma.workspaces.count({
     *   where: {
     *     // ... the filter for the Workspaces we want to count
     *   }
     * })
    **/
    count<T extends workspacesCountArgs>(
      args?: Subset<T, workspacesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkspacesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workspaces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkspacesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkspacesAggregateArgs>(args: Subset<T, WorkspacesAggregateArgs>): Prisma.PrismaPromise<GetWorkspacesAggregateType<T>>

    /**
     * Group by Workspaces.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspacesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends workspacesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: workspacesGroupByArgs['orderBy'] }
        : { orderBy?: workspacesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, workspacesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkspacesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the workspaces model
   */
  readonly fields: workspacesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for workspaces.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__workspacesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    workspace_users<T extends workspaces$workspace_usersArgs<ExtArgs> = {}>(args?: Subset<T, workspaces$workspace_usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findMany'> | Null>;

    documents<T extends workspaces$documentsArgs<ExtArgs> = {}>(args?: Subset<T, workspaces$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_documentsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the workspaces model
   */ 
  interface workspacesFieldRefs {
    readonly id: FieldRef<"workspaces", 'Int'>
    readonly name: FieldRef<"workspaces", 'String'>
    readonly slug: FieldRef<"workspaces", 'String'>
    readonly vectorTag: FieldRef<"workspaces", 'String'>
    readonly createdAt: FieldRef<"workspaces", 'DateTime'>
    readonly openAiTemp: FieldRef<"workspaces", 'Float'>
    readonly openAiHistory: FieldRef<"workspaces", 'Int'>
    readonly lastUpdatedAt: FieldRef<"workspaces", 'DateTime'>
    readonly openAiPrompt: FieldRef<"workspaces", 'String'>
  }
    

  // Custom InputTypes

  /**
   * workspaces findUnique
   */
  export type workspacesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * Filter, which workspaces to fetch.
     */
    where: workspacesWhereUniqueInput
  }


  /**
   * workspaces findUniqueOrThrow
   */
  export type workspacesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * Filter, which workspaces to fetch.
     */
    where: workspacesWhereUniqueInput
  }


  /**
   * workspaces findFirst
   */
  export type workspacesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * Filter, which workspaces to fetch.
     */
    where?: workspacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspaces to fetch.
     */
    orderBy?: workspacesOrderByWithRelationInput | workspacesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspaces.
     */
    cursor?: workspacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspaces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspaces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspaces.
     */
    distinct?: WorkspacesScalarFieldEnum | WorkspacesScalarFieldEnum[]
  }


  /**
   * workspaces findFirstOrThrow
   */
  export type workspacesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * Filter, which workspaces to fetch.
     */
    where?: workspacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspaces to fetch.
     */
    orderBy?: workspacesOrderByWithRelationInput | workspacesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspaces.
     */
    cursor?: workspacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspaces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspaces.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspaces.
     */
    distinct?: WorkspacesScalarFieldEnum | WorkspacesScalarFieldEnum[]
  }


  /**
   * workspaces findMany
   */
  export type workspacesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * Filter, which workspaces to fetch.
     */
    where?: workspacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspaces to fetch.
     */
    orderBy?: workspacesOrderByWithRelationInput | workspacesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing workspaces.
     */
    cursor?: workspacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspaces from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspaces.
     */
    skip?: number
    distinct?: WorkspacesScalarFieldEnum | WorkspacesScalarFieldEnum[]
  }


  /**
   * workspaces create
   */
  export type workspacesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * The data needed to create a workspaces.
     */
    data: XOR<workspacesCreateInput, workspacesUncheckedCreateInput>
  }


  /**
   * workspaces update
   */
  export type workspacesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * The data needed to update a workspaces.
     */
    data: XOR<workspacesUpdateInput, workspacesUncheckedUpdateInput>
    /**
     * Choose, which workspaces to update.
     */
    where: workspacesWhereUniqueInput
  }


  /**
   * workspaces updateMany
   */
  export type workspacesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update workspaces.
     */
    data: XOR<workspacesUpdateManyMutationInput, workspacesUncheckedUpdateManyInput>
    /**
     * Filter which workspaces to update
     */
    where?: workspacesWhereInput
  }


  /**
   * workspaces upsert
   */
  export type workspacesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * The filter to search for the workspaces to update in case it exists.
     */
    where: workspacesWhereUniqueInput
    /**
     * In case the workspaces found by the `where` argument doesn't exist, create a new workspaces with this data.
     */
    create: XOR<workspacesCreateInput, workspacesUncheckedCreateInput>
    /**
     * In case the workspaces was found with the provided `where` argument, update it with this data.
     */
    update: XOR<workspacesUpdateInput, workspacesUncheckedUpdateInput>
  }


  /**
   * workspaces delete
   */
  export type workspacesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
    /**
     * Filter which workspaces to delete.
     */
    where: workspacesWhereUniqueInput
  }


  /**
   * workspaces deleteMany
   */
  export type workspacesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspaces to delete
     */
    where?: workspacesWhereInput
  }


  /**
   * workspaces.workspace_users
   */
  export type workspaces$workspace_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    where?: workspace_usersWhereInput
    orderBy?: workspace_usersOrderByWithRelationInput | workspace_usersOrderByWithRelationInput[]
    cursor?: workspace_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Workspace_usersScalarFieldEnum | Workspace_usersScalarFieldEnum[]
  }


  /**
   * workspaces.documents
   */
  export type workspaces$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_documents
     */
    select?: workspace_documentsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_documentsInclude<ExtArgs> | null
    where?: workspace_documentsWhereInput
    orderBy?: workspace_documentsOrderByWithRelationInput | workspace_documentsOrderByWithRelationInput[]
    cursor?: workspace_documentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Workspace_documentsScalarFieldEnum | Workspace_documentsScalarFieldEnum[]
  }


  /**
   * workspaces without action
   */
  export type workspacesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspaces
     */
    select?: workspacesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspacesInclude<ExtArgs> | null
  }



  /**
   * Model workspace_chats
   */

  export type AggregateWorkspace_chats = {
    _count: Workspace_chatsCountAggregateOutputType | null
    _avg: Workspace_chatsAvgAggregateOutputType | null
    _sum: Workspace_chatsSumAggregateOutputType | null
    _min: Workspace_chatsMinAggregateOutputType | null
    _max: Workspace_chatsMaxAggregateOutputType | null
  }

  export type Workspace_chatsAvgAggregateOutputType = {
    id: number | null
    workspaceId: number | null
    user_id: number | null
  }

  export type Workspace_chatsSumAggregateOutputType = {
    id: number | null
    workspaceId: number | null
    user_id: number | null
  }

  export type Workspace_chatsMinAggregateOutputType = {
    id: number | null
    workspaceId: number | null
    prompt: string | null
    response: string | null
    include: boolean | null
    user_id: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Workspace_chatsMaxAggregateOutputType = {
    id: number | null
    workspaceId: number | null
    prompt: string | null
    response: string | null
    include: boolean | null
    user_id: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Workspace_chatsCountAggregateOutputType = {
    id: number
    workspaceId: number
    prompt: number
    response: number
    include: number
    user_id: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type Workspace_chatsAvgAggregateInputType = {
    id?: true
    workspaceId?: true
    user_id?: true
  }

  export type Workspace_chatsSumAggregateInputType = {
    id?: true
    workspaceId?: true
    user_id?: true
  }

  export type Workspace_chatsMinAggregateInputType = {
    id?: true
    workspaceId?: true
    prompt?: true
    response?: true
    include?: true
    user_id?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Workspace_chatsMaxAggregateInputType = {
    id?: true
    workspaceId?: true
    prompt?: true
    response?: true
    include?: true
    user_id?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Workspace_chatsCountAggregateInputType = {
    id?: true
    workspaceId?: true
    prompt?: true
    response?: true
    include?: true
    user_id?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type Workspace_chatsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspace_chats to aggregate.
     */
    where?: workspace_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_chats to fetch.
     */
    orderBy?: workspace_chatsOrderByWithRelationInput | workspace_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: workspace_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned workspace_chats
    **/
    _count?: true | Workspace_chatsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Workspace_chatsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Workspace_chatsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Workspace_chatsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Workspace_chatsMaxAggregateInputType
  }

  export type GetWorkspace_chatsAggregateType<T extends Workspace_chatsAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkspace_chats]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkspace_chats[P]>
      : GetScalarType<T[P], AggregateWorkspace_chats[P]>
  }




  export type workspace_chatsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_chatsWhereInput
    orderBy?: workspace_chatsOrderByWithAggregationInput | workspace_chatsOrderByWithAggregationInput[]
    by: Workspace_chatsScalarFieldEnum[] | Workspace_chatsScalarFieldEnum
    having?: workspace_chatsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Workspace_chatsCountAggregateInputType | true
    _avg?: Workspace_chatsAvgAggregateInputType
    _sum?: Workspace_chatsSumAggregateInputType
    _min?: Workspace_chatsMinAggregateInputType
    _max?: Workspace_chatsMaxAggregateInputType
  }

  export type Workspace_chatsGroupByOutputType = {
    id: number
    workspaceId: number
    prompt: string
    response: string
    include: boolean
    user_id: number | null
    createdAt: Date
    lastUpdatedAt: Date
    _count: Workspace_chatsCountAggregateOutputType | null
    _avg: Workspace_chatsAvgAggregateOutputType | null
    _sum: Workspace_chatsSumAggregateOutputType | null
    _min: Workspace_chatsMinAggregateOutputType | null
    _max: Workspace_chatsMaxAggregateOutputType | null
  }

  type GetWorkspace_chatsGroupByPayload<T extends workspace_chatsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Workspace_chatsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Workspace_chatsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Workspace_chatsGroupByOutputType[P]>
            : GetScalarType<T[P], Workspace_chatsGroupByOutputType[P]>
        }
      >
    >


  export type workspace_chatsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    workspaceId?: boolean
    prompt?: boolean
    response?: boolean
    include?: boolean
    user_id?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
    users?: boolean | workspace_chats$usersArgs<ExtArgs>
  }, ExtArgs["result"]["workspace_chats"]>

  export type workspace_chatsSelectScalar = {
    id?: boolean
    workspaceId?: boolean
    prompt?: boolean
    response?: boolean
    include?: boolean
    user_id?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }

  export type workspace_chatsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | workspace_chats$usersArgs<ExtArgs>
  }


  export type $workspace_chatsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "workspace_chats"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      workspaceId: number
      prompt: string
      response: string
      include: boolean
      user_id: number | null
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["workspace_chats"]>
    composites: {}
  }


  type workspace_chatsGetPayload<S extends boolean | null | undefined | workspace_chatsDefaultArgs> = $Result.GetResult<Prisma.$workspace_chatsPayload, S>

  type workspace_chatsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<workspace_chatsFindManyArgs, 'select' | 'include'> & {
      select?: Workspace_chatsCountAggregateInputType | true
    }

  export interface workspace_chatsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['workspace_chats'], meta: { name: 'workspace_chats' } }
    /**
     * Find zero or one Workspace_chats that matches the filter.
     * @param {workspace_chatsFindUniqueArgs} args - Arguments to find a Workspace_chats
     * @example
     * // Get one Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends workspace_chatsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_chatsFindUniqueArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Workspace_chats that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {workspace_chatsFindUniqueOrThrowArgs} args - Arguments to find a Workspace_chats
     * @example
     * // Get one Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends workspace_chatsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_chatsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Workspace_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_chatsFindFirstArgs} args - Arguments to find a Workspace_chats
     * @example
     * // Get one Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends workspace_chatsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_chatsFindFirstArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Workspace_chats that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_chatsFindFirstOrThrowArgs} args - Arguments to find a Workspace_chats
     * @example
     * // Get one Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends workspace_chatsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_chatsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Workspace_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_chatsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.findMany()
     * 
     * // Get first 10 Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workspace_chatsWithIdOnly = await prisma.workspace_chats.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends workspace_chatsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_chatsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Workspace_chats.
     * @param {workspace_chatsCreateArgs} args - Arguments to create a Workspace_chats.
     * @example
     * // Create one Workspace_chats
     * const Workspace_chats = await prisma.workspace_chats.create({
     *   data: {
     *     // ... data to create a Workspace_chats
     *   }
     * })
     * 
    **/
    create<T extends workspace_chatsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_chatsCreateArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Workspace_chats.
     * @param {workspace_chatsDeleteArgs} args - Arguments to delete one Workspace_chats.
     * @example
     * // Delete one Workspace_chats
     * const Workspace_chats = await prisma.workspace_chats.delete({
     *   where: {
     *     // ... filter to delete one Workspace_chats
     *   }
     * })
     * 
    **/
    delete<T extends workspace_chatsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_chatsDeleteArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Workspace_chats.
     * @param {workspace_chatsUpdateArgs} args - Arguments to update one Workspace_chats.
     * @example
     * // Update one Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends workspace_chatsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_chatsUpdateArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Workspace_chats.
     * @param {workspace_chatsDeleteManyArgs} args - Arguments to filter Workspace_chats to delete.
     * @example
     * // Delete a few Workspace_chats
     * const { count } = await prisma.workspace_chats.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends workspace_chatsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_chatsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workspace_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_chatsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends workspace_chatsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_chatsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Workspace_chats.
     * @param {workspace_chatsUpsertArgs} args - Arguments to update or create a Workspace_chats.
     * @example
     * // Update or create a Workspace_chats
     * const workspace_chats = await prisma.workspace_chats.upsert({
     *   create: {
     *     // ... data to create a Workspace_chats
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workspace_chats we want to update
     *   }
     * })
    **/
    upsert<T extends workspace_chatsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_chatsUpsertArgs<ExtArgs>>
    ): Prisma__workspace_chatsClient<$Result.GetResult<Prisma.$workspace_chatsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Workspace_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_chatsCountArgs} args - Arguments to filter Workspace_chats to count.
     * @example
     * // Count the number of Workspace_chats
     * const count = await prisma.workspace_chats.count({
     *   where: {
     *     // ... the filter for the Workspace_chats we want to count
     *   }
     * })
    **/
    count<T extends workspace_chatsCountArgs>(
      args?: Subset<T, workspace_chatsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Workspace_chatsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workspace_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Workspace_chatsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Workspace_chatsAggregateArgs>(args: Subset<T, Workspace_chatsAggregateArgs>): Prisma.PrismaPromise<GetWorkspace_chatsAggregateType<T>>

    /**
     * Group by Workspace_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_chatsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends workspace_chatsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: workspace_chatsGroupByArgs['orderBy'] }
        : { orderBy?: workspace_chatsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, workspace_chatsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkspace_chatsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the workspace_chats model
   */
  readonly fields: workspace_chatsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for workspace_chats.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__workspace_chatsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends workspace_chats$usersArgs<ExtArgs> = {}>(args?: Subset<T, workspace_chats$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the workspace_chats model
   */ 
  interface workspace_chatsFieldRefs {
    readonly id: FieldRef<"workspace_chats", 'Int'>
    readonly workspaceId: FieldRef<"workspace_chats", 'Int'>
    readonly prompt: FieldRef<"workspace_chats", 'String'>
    readonly response: FieldRef<"workspace_chats", 'String'>
    readonly include: FieldRef<"workspace_chats", 'Boolean'>
    readonly user_id: FieldRef<"workspace_chats", 'Int'>
    readonly createdAt: FieldRef<"workspace_chats", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"workspace_chats", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * workspace_chats findUnique
   */
  export type workspace_chatsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_chats to fetch.
     */
    where: workspace_chatsWhereUniqueInput
  }


  /**
   * workspace_chats findUniqueOrThrow
   */
  export type workspace_chatsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_chats to fetch.
     */
    where: workspace_chatsWhereUniqueInput
  }


  /**
   * workspace_chats findFirst
   */
  export type workspace_chatsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_chats to fetch.
     */
    where?: workspace_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_chats to fetch.
     */
    orderBy?: workspace_chatsOrderByWithRelationInput | workspace_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspace_chats.
     */
    cursor?: workspace_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspace_chats.
     */
    distinct?: Workspace_chatsScalarFieldEnum | Workspace_chatsScalarFieldEnum[]
  }


  /**
   * workspace_chats findFirstOrThrow
   */
  export type workspace_chatsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_chats to fetch.
     */
    where?: workspace_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_chats to fetch.
     */
    orderBy?: workspace_chatsOrderByWithRelationInput | workspace_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspace_chats.
     */
    cursor?: workspace_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspace_chats.
     */
    distinct?: Workspace_chatsScalarFieldEnum | Workspace_chatsScalarFieldEnum[]
  }


  /**
   * workspace_chats findMany
   */
  export type workspace_chatsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * Filter, which workspace_chats to fetch.
     */
    where?: workspace_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_chats to fetch.
     */
    orderBy?: workspace_chatsOrderByWithRelationInput | workspace_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing workspace_chats.
     */
    cursor?: workspace_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_chats.
     */
    skip?: number
    distinct?: Workspace_chatsScalarFieldEnum | Workspace_chatsScalarFieldEnum[]
  }


  /**
   * workspace_chats create
   */
  export type workspace_chatsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * The data needed to create a workspace_chats.
     */
    data: XOR<workspace_chatsCreateInput, workspace_chatsUncheckedCreateInput>
  }


  /**
   * workspace_chats update
   */
  export type workspace_chatsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * The data needed to update a workspace_chats.
     */
    data: XOR<workspace_chatsUpdateInput, workspace_chatsUncheckedUpdateInput>
    /**
     * Choose, which workspace_chats to update.
     */
    where: workspace_chatsWhereUniqueInput
  }


  /**
   * workspace_chats updateMany
   */
  export type workspace_chatsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update workspace_chats.
     */
    data: XOR<workspace_chatsUpdateManyMutationInput, workspace_chatsUncheckedUpdateManyInput>
    /**
     * Filter which workspace_chats to update
     */
    where?: workspace_chatsWhereInput
  }


  /**
   * workspace_chats upsert
   */
  export type workspace_chatsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * The filter to search for the workspace_chats to update in case it exists.
     */
    where: workspace_chatsWhereUniqueInput
    /**
     * In case the workspace_chats found by the `where` argument doesn't exist, create a new workspace_chats with this data.
     */
    create: XOR<workspace_chatsCreateInput, workspace_chatsUncheckedCreateInput>
    /**
     * In case the workspace_chats was found with the provided `where` argument, update it with this data.
     */
    update: XOR<workspace_chatsUpdateInput, workspace_chatsUncheckedUpdateInput>
  }


  /**
   * workspace_chats delete
   */
  export type workspace_chatsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
    /**
     * Filter which workspace_chats to delete.
     */
    where: workspace_chatsWhereUniqueInput
  }


  /**
   * workspace_chats deleteMany
   */
  export type workspace_chatsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspace_chats to delete
     */
    where?: workspace_chatsWhereInput
  }


  /**
   * workspace_chats.users
   */
  export type workspace_chats$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }


  /**
   * workspace_chats without action
   */
  export type workspace_chatsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_chats
     */
    select?: workspace_chatsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_chatsInclude<ExtArgs> | null
  }



  /**
   * Model workspace_users
   */

  export type AggregateWorkspace_users = {
    _count: Workspace_usersCountAggregateOutputType | null
    _avg: Workspace_usersAvgAggregateOutputType | null
    _sum: Workspace_usersSumAggregateOutputType | null
    _min: Workspace_usersMinAggregateOutputType | null
    _max: Workspace_usersMaxAggregateOutputType | null
  }

  export type Workspace_usersAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    workspace_id: number | null
  }

  export type Workspace_usersSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    workspace_id: number | null
  }

  export type Workspace_usersMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    workspace_id: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Workspace_usersMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    workspace_id: number | null
    createdAt: Date | null
    lastUpdatedAt: Date | null
  }

  export type Workspace_usersCountAggregateOutputType = {
    id: number
    user_id: number
    workspace_id: number
    createdAt: number
    lastUpdatedAt: number
    _all: number
  }


  export type Workspace_usersAvgAggregateInputType = {
    id?: true
    user_id?: true
    workspace_id?: true
  }

  export type Workspace_usersSumAggregateInputType = {
    id?: true
    user_id?: true
    workspace_id?: true
  }

  export type Workspace_usersMinAggregateInputType = {
    id?: true
    user_id?: true
    workspace_id?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Workspace_usersMaxAggregateInputType = {
    id?: true
    user_id?: true
    workspace_id?: true
    createdAt?: true
    lastUpdatedAt?: true
  }

  export type Workspace_usersCountAggregateInputType = {
    id?: true
    user_id?: true
    workspace_id?: true
    createdAt?: true
    lastUpdatedAt?: true
    _all?: true
  }

  export type Workspace_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspace_users to aggregate.
     */
    where?: workspace_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_users to fetch.
     */
    orderBy?: workspace_usersOrderByWithRelationInput | workspace_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: workspace_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned workspace_users
    **/
    _count?: true | Workspace_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Workspace_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Workspace_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Workspace_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Workspace_usersMaxAggregateInputType
  }

  export type GetWorkspace_usersAggregateType<T extends Workspace_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkspace_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkspace_users[P]>
      : GetScalarType<T[P], AggregateWorkspace_users[P]>
  }




  export type workspace_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: workspace_usersWhereInput
    orderBy?: workspace_usersOrderByWithAggregationInput | workspace_usersOrderByWithAggregationInput[]
    by: Workspace_usersScalarFieldEnum[] | Workspace_usersScalarFieldEnum
    having?: workspace_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Workspace_usersCountAggregateInputType | true
    _avg?: Workspace_usersAvgAggregateInputType
    _sum?: Workspace_usersSumAggregateInputType
    _min?: Workspace_usersMinAggregateInputType
    _max?: Workspace_usersMaxAggregateInputType
  }

  export type Workspace_usersGroupByOutputType = {
    id: number
    user_id: number
    workspace_id: number
    createdAt: Date
    lastUpdatedAt: Date
    _count: Workspace_usersCountAggregateOutputType | null
    _avg: Workspace_usersAvgAggregateOutputType | null
    _sum: Workspace_usersSumAggregateOutputType | null
    _min: Workspace_usersMinAggregateOutputType | null
    _max: Workspace_usersMaxAggregateOutputType | null
  }

  type GetWorkspace_usersGroupByPayload<T extends workspace_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Workspace_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Workspace_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Workspace_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Workspace_usersGroupByOutputType[P]>
        }
      >
    >


  export type workspace_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    workspace_id?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
    workspaces?: boolean | workspacesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workspace_users"]>

  export type workspace_usersSelectScalar = {
    id?: boolean
    user_id?: boolean
    workspace_id?: boolean
    createdAt?: boolean
    lastUpdatedAt?: boolean
  }

  export type workspace_usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    workspaces?: boolean | workspacesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }


  export type $workspace_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "workspace_users"
    objects: {
      workspaces: Prisma.$workspacesPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      workspace_id: number
      createdAt: Date
      lastUpdatedAt: Date
    }, ExtArgs["result"]["workspace_users"]>
    composites: {}
  }


  type workspace_usersGetPayload<S extends boolean | null | undefined | workspace_usersDefaultArgs> = $Result.GetResult<Prisma.$workspace_usersPayload, S>

  type workspace_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<workspace_usersFindManyArgs, 'select' | 'include'> & {
      select?: Workspace_usersCountAggregateInputType | true
    }

  export interface workspace_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['workspace_users'], meta: { name: 'workspace_users' } }
    /**
     * Find zero or one Workspace_users that matches the filter.
     * @param {workspace_usersFindUniqueArgs} args - Arguments to find a Workspace_users
     * @example
     * // Get one Workspace_users
     * const workspace_users = await prisma.workspace_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends workspace_usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_usersFindUniqueArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Workspace_users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {workspace_usersFindUniqueOrThrowArgs} args - Arguments to find a Workspace_users
     * @example
     * // Get one Workspace_users
     * const workspace_users = await prisma.workspace_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends workspace_usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Workspace_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_usersFindFirstArgs} args - Arguments to find a Workspace_users
     * @example
     * // Get one Workspace_users
     * const workspace_users = await prisma.workspace_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends workspace_usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_usersFindFirstArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Workspace_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_usersFindFirstOrThrowArgs} args - Arguments to find a Workspace_users
     * @example
     * // Get one Workspace_users
     * const workspace_users = await prisma.workspace_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends workspace_usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Workspace_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Workspace_users
     * const workspace_users = await prisma.workspace_users.findMany()
     * 
     * // Get first 10 Workspace_users
     * const workspace_users = await prisma.workspace_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workspace_usersWithIdOnly = await prisma.workspace_users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends workspace_usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Workspace_users.
     * @param {workspace_usersCreateArgs} args - Arguments to create a Workspace_users.
     * @example
     * // Create one Workspace_users
     * const Workspace_users = await prisma.workspace_users.create({
     *   data: {
     *     // ... data to create a Workspace_users
     *   }
     * })
     * 
    **/
    create<T extends workspace_usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_usersCreateArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Delete a Workspace_users.
     * @param {workspace_usersDeleteArgs} args - Arguments to delete one Workspace_users.
     * @example
     * // Delete one Workspace_users
     * const Workspace_users = await prisma.workspace_users.delete({
     *   where: {
     *     // ... filter to delete one Workspace_users
     *   }
     * })
     * 
    **/
    delete<T extends workspace_usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_usersDeleteArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Workspace_users.
     * @param {workspace_usersUpdateArgs} args - Arguments to update one Workspace_users.
     * @example
     * // Update one Workspace_users
     * const workspace_users = await prisma.workspace_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends workspace_usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_usersUpdateArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Workspace_users.
     * @param {workspace_usersDeleteManyArgs} args - Arguments to filter Workspace_users to delete.
     * @example
     * // Delete a few Workspace_users
     * const { count } = await prisma.workspace_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends workspace_usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, workspace_usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Workspace_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Workspace_users
     * const workspace_users = await prisma.workspace_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends workspace_usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Workspace_users.
     * @param {workspace_usersUpsertArgs} args - Arguments to update or create a Workspace_users.
     * @example
     * // Update or create a Workspace_users
     * const workspace_users = await prisma.workspace_users.upsert({
     *   create: {
     *     // ... data to create a Workspace_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Workspace_users we want to update
     *   }
     * })
    **/
    upsert<T extends workspace_usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, workspace_usersUpsertArgs<ExtArgs>>
    ): Prisma__workspace_usersClient<$Result.GetResult<Prisma.$workspace_usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Workspace_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_usersCountArgs} args - Arguments to filter Workspace_users to count.
     * @example
     * // Count the number of Workspace_users
     * const count = await prisma.workspace_users.count({
     *   where: {
     *     // ... the filter for the Workspace_users we want to count
     *   }
     * })
    **/
    count<T extends workspace_usersCountArgs>(
      args?: Subset<T, workspace_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Workspace_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Workspace_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Workspace_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Workspace_usersAggregateArgs>(args: Subset<T, Workspace_usersAggregateArgs>): Prisma.PrismaPromise<GetWorkspace_usersAggregateType<T>>

    /**
     * Group by Workspace_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {workspace_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends workspace_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: workspace_usersGroupByArgs['orderBy'] }
        : { orderBy?: workspace_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, workspace_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkspace_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the workspace_users model
   */
  readonly fields: workspace_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for workspace_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__workspace_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    workspaces<T extends workspacesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, workspacesDefaultArgs<ExtArgs>>): Prisma__workspacesClient<$Result.GetResult<Prisma.$workspacesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the workspace_users model
   */ 
  interface workspace_usersFieldRefs {
    readonly id: FieldRef<"workspace_users", 'Int'>
    readonly user_id: FieldRef<"workspace_users", 'Int'>
    readonly workspace_id: FieldRef<"workspace_users", 'Int'>
    readonly createdAt: FieldRef<"workspace_users", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"workspace_users", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * workspace_users findUnique
   */
  export type workspace_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * Filter, which workspace_users to fetch.
     */
    where: workspace_usersWhereUniqueInput
  }


  /**
   * workspace_users findUniqueOrThrow
   */
  export type workspace_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * Filter, which workspace_users to fetch.
     */
    where: workspace_usersWhereUniqueInput
  }


  /**
   * workspace_users findFirst
   */
  export type workspace_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * Filter, which workspace_users to fetch.
     */
    where?: workspace_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_users to fetch.
     */
    orderBy?: workspace_usersOrderByWithRelationInput | workspace_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspace_users.
     */
    cursor?: workspace_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspace_users.
     */
    distinct?: Workspace_usersScalarFieldEnum | Workspace_usersScalarFieldEnum[]
  }


  /**
   * workspace_users findFirstOrThrow
   */
  export type workspace_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * Filter, which workspace_users to fetch.
     */
    where?: workspace_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_users to fetch.
     */
    orderBy?: workspace_usersOrderByWithRelationInput | workspace_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for workspace_users.
     */
    cursor?: workspace_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of workspace_users.
     */
    distinct?: Workspace_usersScalarFieldEnum | Workspace_usersScalarFieldEnum[]
  }


  /**
   * workspace_users findMany
   */
  export type workspace_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * Filter, which workspace_users to fetch.
     */
    where?: workspace_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of workspace_users to fetch.
     */
    orderBy?: workspace_usersOrderByWithRelationInput | workspace_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing workspace_users.
     */
    cursor?: workspace_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` workspace_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` workspace_users.
     */
    skip?: number
    distinct?: Workspace_usersScalarFieldEnum | Workspace_usersScalarFieldEnum[]
  }


  /**
   * workspace_users create
   */
  export type workspace_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * The data needed to create a workspace_users.
     */
    data: XOR<workspace_usersCreateInput, workspace_usersUncheckedCreateInput>
  }


  /**
   * workspace_users update
   */
  export type workspace_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * The data needed to update a workspace_users.
     */
    data: XOR<workspace_usersUpdateInput, workspace_usersUncheckedUpdateInput>
    /**
     * Choose, which workspace_users to update.
     */
    where: workspace_usersWhereUniqueInput
  }


  /**
   * workspace_users updateMany
   */
  export type workspace_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update workspace_users.
     */
    data: XOR<workspace_usersUpdateManyMutationInput, workspace_usersUncheckedUpdateManyInput>
    /**
     * Filter which workspace_users to update
     */
    where?: workspace_usersWhereInput
  }


  /**
   * workspace_users upsert
   */
  export type workspace_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * The filter to search for the workspace_users to update in case it exists.
     */
    where: workspace_usersWhereUniqueInput
    /**
     * In case the workspace_users found by the `where` argument doesn't exist, create a new workspace_users with this data.
     */
    create: XOR<workspace_usersCreateInput, workspace_usersUncheckedCreateInput>
    /**
     * In case the workspace_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<workspace_usersUpdateInput, workspace_usersUncheckedUpdateInput>
  }


  /**
   * workspace_users delete
   */
  export type workspace_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
    /**
     * Filter which workspace_users to delete.
     */
    where: workspace_usersWhereUniqueInput
  }


  /**
   * workspace_users deleteMany
   */
  export type workspace_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which workspace_users to delete
     */
    where?: workspace_usersWhereInput
  }


  /**
   * workspace_users without action
   */
  export type workspace_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the workspace_users
     */
    select?: workspace_usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: workspace_usersInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Api_keysScalarFieldEnum: {
    id: 'id',
    secret: 'secret',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type Api_keysScalarFieldEnum = (typeof Api_keysScalarFieldEnum)[keyof typeof Api_keysScalarFieldEnum]


  export const Workspace_documentsScalarFieldEnum: {
    id: 'id',
    docId: 'docId',
    filename: 'filename',
    docpath: 'docpath',
    workspaceId: 'workspaceId',
    metadata: 'metadata',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type Workspace_documentsScalarFieldEnum = (typeof Workspace_documentsScalarFieldEnum)[keyof typeof Workspace_documentsScalarFieldEnum]


  export const InvitesScalarFieldEnum: {
    id: 'id',
    code: 'code',
    status: 'status',
    claimedBy: 'claimedBy',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type InvitesScalarFieldEnum = (typeof InvitesScalarFieldEnum)[keyof typeof InvitesScalarFieldEnum]


  export const System_settingsScalarFieldEnum: {
    id: 'id',
    label: 'label',
    value: 'value',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type System_settingsScalarFieldEnum = (typeof System_settingsScalarFieldEnum)[keyof typeof System_settingsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    role: 'role',
    suspended: 'suspended',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Document_vectorsScalarFieldEnum: {
    id: 'id',
    docId: 'docId',
    vectorId: 'vectorId',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type Document_vectorsScalarFieldEnum = (typeof Document_vectorsScalarFieldEnum)[keyof typeof Document_vectorsScalarFieldEnum]


  export const Welcome_messagesScalarFieldEnum: {
    id: 'id',
    user: 'user',
    response: 'response',
    orderIndex: 'orderIndex',
    createdAt: 'createdAt'
  };

  export type Welcome_messagesScalarFieldEnum = (typeof Welcome_messagesScalarFieldEnum)[keyof typeof Welcome_messagesScalarFieldEnum]


  export const WorkspacesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    vectorTag: 'vectorTag',
    createdAt: 'createdAt',
    openAiTemp: 'openAiTemp',
    openAiHistory: 'openAiHistory',
    lastUpdatedAt: 'lastUpdatedAt',
    openAiPrompt: 'openAiPrompt'
  };

  export type WorkspacesScalarFieldEnum = (typeof WorkspacesScalarFieldEnum)[keyof typeof WorkspacesScalarFieldEnum]


  export const Workspace_chatsScalarFieldEnum: {
    id: 'id',
    workspaceId: 'workspaceId',
    prompt: 'prompt',
    response: 'response',
    include: 'include',
    user_id: 'user_id',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type Workspace_chatsScalarFieldEnum = (typeof Workspace_chatsScalarFieldEnum)[keyof typeof Workspace_chatsScalarFieldEnum]


  export const Workspace_usersScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    workspace_id: 'workspace_id',
    createdAt: 'createdAt',
    lastUpdatedAt: 'lastUpdatedAt'
  };

  export type Workspace_usersScalarFieldEnum = (typeof Workspace_usersScalarFieldEnum)[keyof typeof Workspace_usersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type api_keysWhereInput = {
    AND?: api_keysWhereInput | api_keysWhereInput[]
    OR?: api_keysWhereInput[]
    NOT?: api_keysWhereInput | api_keysWhereInput[]
    id?: IntFilter<"api_keys"> | number
    secret?: StringNullableFilter<"api_keys"> | string | null
    createdBy?: IntNullableFilter<"api_keys"> | number | null
    createdAt?: DateTimeFilter<"api_keys"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"api_keys"> | Date | string
  }

  export type api_keysOrderByWithRelationInput = {
    id?: SortOrder
    secret?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type api_keysWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    secret?: string
    AND?: api_keysWhereInput | api_keysWhereInput[]
    OR?: api_keysWhereInput[]
    NOT?: api_keysWhereInput | api_keysWhereInput[]
    createdBy?: IntNullableFilter<"api_keys"> | number | null
    createdAt?: DateTimeFilter<"api_keys"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"api_keys"> | Date | string
  }, "id" | "secret">

  export type api_keysOrderByWithAggregationInput = {
    id?: SortOrder
    secret?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: api_keysCountOrderByAggregateInput
    _avg?: api_keysAvgOrderByAggregateInput
    _max?: api_keysMaxOrderByAggregateInput
    _min?: api_keysMinOrderByAggregateInput
    _sum?: api_keysSumOrderByAggregateInput
  }

  export type api_keysScalarWhereWithAggregatesInput = {
    AND?: api_keysScalarWhereWithAggregatesInput | api_keysScalarWhereWithAggregatesInput[]
    OR?: api_keysScalarWhereWithAggregatesInput[]
    NOT?: api_keysScalarWhereWithAggregatesInput | api_keysScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"api_keys"> | number
    secret?: StringNullableWithAggregatesFilter<"api_keys"> | string | null
    createdBy?: IntNullableWithAggregatesFilter<"api_keys"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"api_keys"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"api_keys"> | Date | string
  }

  export type workspace_documentsWhereInput = {
    AND?: workspace_documentsWhereInput | workspace_documentsWhereInput[]
    OR?: workspace_documentsWhereInput[]
    NOT?: workspace_documentsWhereInput | workspace_documentsWhereInput[]
    id?: IntFilter<"workspace_documents"> | number
    docId?: StringFilter<"workspace_documents"> | string
    filename?: StringFilter<"workspace_documents"> | string
    docpath?: StringFilter<"workspace_documents"> | string
    workspaceId?: IntFilter<"workspace_documents"> | number
    metadata?: StringNullableFilter<"workspace_documents"> | string | null
    createdAt?: DateTimeFilter<"workspace_documents"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_documents"> | Date | string
    workspace?: XOR<WorkspacesRelationFilter, workspacesWhereInput>
  }

  export type workspace_documentsOrderByWithRelationInput = {
    id?: SortOrder
    docId?: SortOrder
    filename?: SortOrder
    docpath?: SortOrder
    workspaceId?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    workspace?: workspacesOrderByWithRelationInput
  }

  export type workspace_documentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    docId?: string
    AND?: workspace_documentsWhereInput | workspace_documentsWhereInput[]
    OR?: workspace_documentsWhereInput[]
    NOT?: workspace_documentsWhereInput | workspace_documentsWhereInput[]
    filename?: StringFilter<"workspace_documents"> | string
    docpath?: StringFilter<"workspace_documents"> | string
    workspaceId?: IntFilter<"workspace_documents"> | number
    metadata?: StringNullableFilter<"workspace_documents"> | string | null
    createdAt?: DateTimeFilter<"workspace_documents"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_documents"> | Date | string
    workspace?: XOR<WorkspacesRelationFilter, workspacesWhereInput>
  }, "id" | "docId">

  export type workspace_documentsOrderByWithAggregationInput = {
    id?: SortOrder
    docId?: SortOrder
    filename?: SortOrder
    docpath?: SortOrder
    workspaceId?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: workspace_documentsCountOrderByAggregateInput
    _avg?: workspace_documentsAvgOrderByAggregateInput
    _max?: workspace_documentsMaxOrderByAggregateInput
    _min?: workspace_documentsMinOrderByAggregateInput
    _sum?: workspace_documentsSumOrderByAggregateInput
  }

  export type workspace_documentsScalarWhereWithAggregatesInput = {
    AND?: workspace_documentsScalarWhereWithAggregatesInput | workspace_documentsScalarWhereWithAggregatesInput[]
    OR?: workspace_documentsScalarWhereWithAggregatesInput[]
    NOT?: workspace_documentsScalarWhereWithAggregatesInput | workspace_documentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"workspace_documents"> | number
    docId?: StringWithAggregatesFilter<"workspace_documents"> | string
    filename?: StringWithAggregatesFilter<"workspace_documents"> | string
    docpath?: StringWithAggregatesFilter<"workspace_documents"> | string
    workspaceId?: IntWithAggregatesFilter<"workspace_documents"> | number
    metadata?: StringNullableWithAggregatesFilter<"workspace_documents"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"workspace_documents"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"workspace_documents"> | Date | string
  }

  export type invitesWhereInput = {
    AND?: invitesWhereInput | invitesWhereInput[]
    OR?: invitesWhereInput[]
    NOT?: invitesWhereInput | invitesWhereInput[]
    id?: IntFilter<"invites"> | number
    code?: StringFilter<"invites"> | string
    status?: StringFilter<"invites"> | string
    claimedBy?: IntNullableFilter<"invites"> | number | null
    createdAt?: DateTimeFilter<"invites"> | Date | string
    createdBy?: IntFilter<"invites"> | number
    lastUpdatedAt?: DateTimeFilter<"invites"> | Date | string
  }

  export type invitesOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    status?: SortOrder
    claimedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type invitesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    code?: string
    AND?: invitesWhereInput | invitesWhereInput[]
    OR?: invitesWhereInput[]
    NOT?: invitesWhereInput | invitesWhereInput[]
    status?: StringFilter<"invites"> | string
    claimedBy?: IntNullableFilter<"invites"> | number | null
    createdAt?: DateTimeFilter<"invites"> | Date | string
    createdBy?: IntFilter<"invites"> | number
    lastUpdatedAt?: DateTimeFilter<"invites"> | Date | string
  }, "id" | "code">

  export type invitesOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    status?: SortOrder
    claimedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: invitesCountOrderByAggregateInput
    _avg?: invitesAvgOrderByAggregateInput
    _max?: invitesMaxOrderByAggregateInput
    _min?: invitesMinOrderByAggregateInput
    _sum?: invitesSumOrderByAggregateInput
  }

  export type invitesScalarWhereWithAggregatesInput = {
    AND?: invitesScalarWhereWithAggregatesInput | invitesScalarWhereWithAggregatesInput[]
    OR?: invitesScalarWhereWithAggregatesInput[]
    NOT?: invitesScalarWhereWithAggregatesInput | invitesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"invites"> | number
    code?: StringWithAggregatesFilter<"invites"> | string
    status?: StringWithAggregatesFilter<"invites"> | string
    claimedBy?: IntNullableWithAggregatesFilter<"invites"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"invites"> | Date | string
    createdBy?: IntWithAggregatesFilter<"invites"> | number
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"invites"> | Date | string
  }

  export type system_settingsWhereInput = {
    AND?: system_settingsWhereInput | system_settingsWhereInput[]
    OR?: system_settingsWhereInput[]
    NOT?: system_settingsWhereInput | system_settingsWhereInput[]
    id?: IntFilter<"system_settings"> | number
    label?: StringFilter<"system_settings"> | string
    value?: StringNullableFilter<"system_settings"> | string | null
    createdAt?: DateTimeFilter<"system_settings"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"system_settings"> | Date | string
  }

  export type system_settingsOrderByWithRelationInput = {
    id?: SortOrder
    label?: SortOrder
    value?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type system_settingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    label?: string
    AND?: system_settingsWhereInput | system_settingsWhereInput[]
    OR?: system_settingsWhereInput[]
    NOT?: system_settingsWhereInput | system_settingsWhereInput[]
    value?: StringNullableFilter<"system_settings"> | string | null
    createdAt?: DateTimeFilter<"system_settings"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"system_settings"> | Date | string
  }, "id" | "label">

  export type system_settingsOrderByWithAggregationInput = {
    id?: SortOrder
    label?: SortOrder
    value?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: system_settingsCountOrderByAggregateInput
    _avg?: system_settingsAvgOrderByAggregateInput
    _max?: system_settingsMaxOrderByAggregateInput
    _min?: system_settingsMinOrderByAggregateInput
    _sum?: system_settingsSumOrderByAggregateInput
  }

  export type system_settingsScalarWhereWithAggregatesInput = {
    AND?: system_settingsScalarWhereWithAggregatesInput | system_settingsScalarWhereWithAggregatesInput[]
    OR?: system_settingsScalarWhereWithAggregatesInput[]
    NOT?: system_settingsScalarWhereWithAggregatesInput | system_settingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"system_settings"> | number
    label?: StringWithAggregatesFilter<"system_settings"> | string
    value?: StringNullableWithAggregatesFilter<"system_settings"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"system_settings"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"system_settings"> | Date | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    username?: StringNullableFilter<"users"> | string | null
    password?: StringFilter<"users"> | string
    role?: StringFilter<"users"> | string
    suspended?: IntFilter<"users"> | number
    createdAt?: DateTimeFilter<"users"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"users"> | Date | string
    workspace_chats?: Workspace_chatsListRelationFilter
    workspace_users?: Workspace_usersListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrder
    role?: SortOrder
    suspended?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    workspace_chats?: workspace_chatsOrderByRelationAggregateInput
    workspace_users?: workspace_usersOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    password?: StringFilter<"users"> | string
    role?: StringFilter<"users"> | string
    suspended?: IntFilter<"users"> | number
    createdAt?: DateTimeFilter<"users"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"users"> | Date | string
    workspace_chats?: Workspace_chatsListRelationFilter
    workspace_users?: Workspace_usersListRelationFilter
  }, "id" | "username">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrder
    role?: SortOrder
    suspended?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    username?: StringNullableWithAggregatesFilter<"users"> | string | null
    password?: StringWithAggregatesFilter<"users"> | string
    role?: StringWithAggregatesFilter<"users"> | string
    suspended?: IntWithAggregatesFilter<"users"> | number
    createdAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
  }

  export type document_vectorsWhereInput = {
    AND?: document_vectorsWhereInput | document_vectorsWhereInput[]
    OR?: document_vectorsWhereInput[]
    NOT?: document_vectorsWhereInput | document_vectorsWhereInput[]
    id?: IntFilter<"document_vectors"> | number
    docId?: StringFilter<"document_vectors"> | string
    vectorId?: StringFilter<"document_vectors"> | string
    createdAt?: DateTimeFilter<"document_vectors"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"document_vectors"> | Date | string
  }

  export type document_vectorsOrderByWithRelationInput = {
    id?: SortOrder
    docId?: SortOrder
    vectorId?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type document_vectorsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: document_vectorsWhereInput | document_vectorsWhereInput[]
    OR?: document_vectorsWhereInput[]
    NOT?: document_vectorsWhereInput | document_vectorsWhereInput[]
    docId?: StringFilter<"document_vectors"> | string
    vectorId?: StringFilter<"document_vectors"> | string
    createdAt?: DateTimeFilter<"document_vectors"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"document_vectors"> | Date | string
  }, "id">

  export type document_vectorsOrderByWithAggregationInput = {
    id?: SortOrder
    docId?: SortOrder
    vectorId?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: document_vectorsCountOrderByAggregateInput
    _avg?: document_vectorsAvgOrderByAggregateInput
    _max?: document_vectorsMaxOrderByAggregateInput
    _min?: document_vectorsMinOrderByAggregateInput
    _sum?: document_vectorsSumOrderByAggregateInput
  }

  export type document_vectorsScalarWhereWithAggregatesInput = {
    AND?: document_vectorsScalarWhereWithAggregatesInput | document_vectorsScalarWhereWithAggregatesInput[]
    OR?: document_vectorsScalarWhereWithAggregatesInput[]
    NOT?: document_vectorsScalarWhereWithAggregatesInput | document_vectorsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"document_vectors"> | number
    docId?: StringWithAggregatesFilter<"document_vectors"> | string
    vectorId?: StringWithAggregatesFilter<"document_vectors"> | string
    createdAt?: DateTimeWithAggregatesFilter<"document_vectors"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"document_vectors"> | Date | string
  }

  export type welcome_messagesWhereInput = {
    AND?: welcome_messagesWhereInput | welcome_messagesWhereInput[]
    OR?: welcome_messagesWhereInput[]
    NOT?: welcome_messagesWhereInput | welcome_messagesWhereInput[]
    id?: IntFilter<"welcome_messages"> | number
    user?: StringFilter<"welcome_messages"> | string
    response?: StringFilter<"welcome_messages"> | string
    orderIndex?: IntNullableFilter<"welcome_messages"> | number | null
    createdAt?: DateTimeFilter<"welcome_messages"> | Date | string
  }

  export type welcome_messagesOrderByWithRelationInput = {
    id?: SortOrder
    user?: SortOrder
    response?: SortOrder
    orderIndex?: SortOrderInput | SortOrder
    createdAt?: SortOrder
  }

  export type welcome_messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: welcome_messagesWhereInput | welcome_messagesWhereInput[]
    OR?: welcome_messagesWhereInput[]
    NOT?: welcome_messagesWhereInput | welcome_messagesWhereInput[]
    user?: StringFilter<"welcome_messages"> | string
    response?: StringFilter<"welcome_messages"> | string
    orderIndex?: IntNullableFilter<"welcome_messages"> | number | null
    createdAt?: DateTimeFilter<"welcome_messages"> | Date | string
  }, "id">

  export type welcome_messagesOrderByWithAggregationInput = {
    id?: SortOrder
    user?: SortOrder
    response?: SortOrder
    orderIndex?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: welcome_messagesCountOrderByAggregateInput
    _avg?: welcome_messagesAvgOrderByAggregateInput
    _max?: welcome_messagesMaxOrderByAggregateInput
    _min?: welcome_messagesMinOrderByAggregateInput
    _sum?: welcome_messagesSumOrderByAggregateInput
  }

  export type welcome_messagesScalarWhereWithAggregatesInput = {
    AND?: welcome_messagesScalarWhereWithAggregatesInput | welcome_messagesScalarWhereWithAggregatesInput[]
    OR?: welcome_messagesScalarWhereWithAggregatesInput[]
    NOT?: welcome_messagesScalarWhereWithAggregatesInput | welcome_messagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"welcome_messages"> | number
    user?: StringWithAggregatesFilter<"welcome_messages"> | string
    response?: StringWithAggregatesFilter<"welcome_messages"> | string
    orderIndex?: IntNullableWithAggregatesFilter<"welcome_messages"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"welcome_messages"> | Date | string
  }

  export type workspacesWhereInput = {
    AND?: workspacesWhereInput | workspacesWhereInput[]
    OR?: workspacesWhereInput[]
    NOT?: workspacesWhereInput | workspacesWhereInput[]
    id?: IntFilter<"workspaces"> | number
    name?: StringFilter<"workspaces"> | string
    slug?: StringFilter<"workspaces"> | string
    vectorTag?: StringNullableFilter<"workspaces"> | string | null
    createdAt?: DateTimeFilter<"workspaces"> | Date | string
    openAiTemp?: FloatNullableFilter<"workspaces"> | number | null
    openAiHistory?: IntFilter<"workspaces"> | number
    lastUpdatedAt?: DateTimeFilter<"workspaces"> | Date | string
    openAiPrompt?: StringNullableFilter<"workspaces"> | string | null
    workspace_users?: Workspace_usersListRelationFilter
    documents?: Workspace_documentsListRelationFilter
  }

  export type workspacesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    vectorTag?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    openAiTemp?: SortOrderInput | SortOrder
    openAiHistory?: SortOrder
    lastUpdatedAt?: SortOrder
    openAiPrompt?: SortOrderInput | SortOrder
    workspace_users?: workspace_usersOrderByRelationAggregateInput
    documents?: workspace_documentsOrderByRelationAggregateInput
  }

  export type workspacesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    AND?: workspacesWhereInput | workspacesWhereInput[]
    OR?: workspacesWhereInput[]
    NOT?: workspacesWhereInput | workspacesWhereInput[]
    name?: StringFilter<"workspaces"> | string
    vectorTag?: StringNullableFilter<"workspaces"> | string | null
    createdAt?: DateTimeFilter<"workspaces"> | Date | string
    openAiTemp?: FloatNullableFilter<"workspaces"> | number | null
    openAiHistory?: IntFilter<"workspaces"> | number
    lastUpdatedAt?: DateTimeFilter<"workspaces"> | Date | string
    openAiPrompt?: StringNullableFilter<"workspaces"> | string | null
    workspace_users?: Workspace_usersListRelationFilter
    documents?: Workspace_documentsListRelationFilter
  }, "id" | "slug">

  export type workspacesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    vectorTag?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    openAiTemp?: SortOrderInput | SortOrder
    openAiHistory?: SortOrder
    lastUpdatedAt?: SortOrder
    openAiPrompt?: SortOrderInput | SortOrder
    _count?: workspacesCountOrderByAggregateInput
    _avg?: workspacesAvgOrderByAggregateInput
    _max?: workspacesMaxOrderByAggregateInput
    _min?: workspacesMinOrderByAggregateInput
    _sum?: workspacesSumOrderByAggregateInput
  }

  export type workspacesScalarWhereWithAggregatesInput = {
    AND?: workspacesScalarWhereWithAggregatesInput | workspacesScalarWhereWithAggregatesInput[]
    OR?: workspacesScalarWhereWithAggregatesInput[]
    NOT?: workspacesScalarWhereWithAggregatesInput | workspacesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"workspaces"> | number
    name?: StringWithAggregatesFilter<"workspaces"> | string
    slug?: StringWithAggregatesFilter<"workspaces"> | string
    vectorTag?: StringNullableWithAggregatesFilter<"workspaces"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"workspaces"> | Date | string
    openAiTemp?: FloatNullableWithAggregatesFilter<"workspaces"> | number | null
    openAiHistory?: IntWithAggregatesFilter<"workspaces"> | number
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"workspaces"> | Date | string
    openAiPrompt?: StringNullableWithAggregatesFilter<"workspaces"> | string | null
  }

  export type workspace_chatsWhereInput = {
    AND?: workspace_chatsWhereInput | workspace_chatsWhereInput[]
    OR?: workspace_chatsWhereInput[]
    NOT?: workspace_chatsWhereInput | workspace_chatsWhereInput[]
    id?: IntFilter<"workspace_chats"> | number
    workspaceId?: IntFilter<"workspace_chats"> | number
    prompt?: StringFilter<"workspace_chats"> | string
    response?: StringFilter<"workspace_chats"> | string
    include?: BoolFilter<"workspace_chats"> | boolean
    user_id?: IntNullableFilter<"workspace_chats"> | number | null
    createdAt?: DateTimeFilter<"workspace_chats"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_chats"> | Date | string
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
  }

  export type workspace_chatsOrderByWithRelationInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    include?: SortOrder
    user_id?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type workspace_chatsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: workspace_chatsWhereInput | workspace_chatsWhereInput[]
    OR?: workspace_chatsWhereInput[]
    NOT?: workspace_chatsWhereInput | workspace_chatsWhereInput[]
    workspaceId?: IntFilter<"workspace_chats"> | number
    prompt?: StringFilter<"workspace_chats"> | string
    response?: StringFilter<"workspace_chats"> | string
    include?: BoolFilter<"workspace_chats"> | boolean
    user_id?: IntNullableFilter<"workspace_chats"> | number | null
    createdAt?: DateTimeFilter<"workspace_chats"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_chats"> | Date | string
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
  }, "id">

  export type workspace_chatsOrderByWithAggregationInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    include?: SortOrder
    user_id?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: workspace_chatsCountOrderByAggregateInput
    _avg?: workspace_chatsAvgOrderByAggregateInput
    _max?: workspace_chatsMaxOrderByAggregateInput
    _min?: workspace_chatsMinOrderByAggregateInput
    _sum?: workspace_chatsSumOrderByAggregateInput
  }

  export type workspace_chatsScalarWhereWithAggregatesInput = {
    AND?: workspace_chatsScalarWhereWithAggregatesInput | workspace_chatsScalarWhereWithAggregatesInput[]
    OR?: workspace_chatsScalarWhereWithAggregatesInput[]
    NOT?: workspace_chatsScalarWhereWithAggregatesInput | workspace_chatsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"workspace_chats"> | number
    workspaceId?: IntWithAggregatesFilter<"workspace_chats"> | number
    prompt?: StringWithAggregatesFilter<"workspace_chats"> | string
    response?: StringWithAggregatesFilter<"workspace_chats"> | string
    include?: BoolWithAggregatesFilter<"workspace_chats"> | boolean
    user_id?: IntNullableWithAggregatesFilter<"workspace_chats"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"workspace_chats"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"workspace_chats"> | Date | string
  }

  export type workspace_usersWhereInput = {
    AND?: workspace_usersWhereInput | workspace_usersWhereInput[]
    OR?: workspace_usersWhereInput[]
    NOT?: workspace_usersWhereInput | workspace_usersWhereInput[]
    id?: IntFilter<"workspace_users"> | number
    user_id?: IntFilter<"workspace_users"> | number
    workspace_id?: IntFilter<"workspace_users"> | number
    createdAt?: DateTimeFilter<"workspace_users"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_users"> | Date | string
    workspaces?: XOR<WorkspacesRelationFilter, workspacesWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type workspace_usersOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    workspaces?: workspacesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type workspace_usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: workspace_usersWhereInput | workspace_usersWhereInput[]
    OR?: workspace_usersWhereInput[]
    NOT?: workspace_usersWhereInput | workspace_usersWhereInput[]
    user_id?: IntFilter<"workspace_users"> | number
    workspace_id?: IntFilter<"workspace_users"> | number
    createdAt?: DateTimeFilter<"workspace_users"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_users"> | Date | string
    workspaces?: XOR<WorkspacesRelationFilter, workspacesWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type workspace_usersOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
    _count?: workspace_usersCountOrderByAggregateInput
    _avg?: workspace_usersAvgOrderByAggregateInput
    _max?: workspace_usersMaxOrderByAggregateInput
    _min?: workspace_usersMinOrderByAggregateInput
    _sum?: workspace_usersSumOrderByAggregateInput
  }

  export type workspace_usersScalarWhereWithAggregatesInput = {
    AND?: workspace_usersScalarWhereWithAggregatesInput | workspace_usersScalarWhereWithAggregatesInput[]
    OR?: workspace_usersScalarWhereWithAggregatesInput[]
    NOT?: workspace_usersScalarWhereWithAggregatesInput | workspace_usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"workspace_users"> | number
    user_id?: IntWithAggregatesFilter<"workspace_users"> | number
    workspace_id?: IntWithAggregatesFilter<"workspace_users"> | number
    createdAt?: DateTimeWithAggregatesFilter<"workspace_users"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"workspace_users"> | Date | string
  }

  export type api_keysCreateInput = {
    secret?: string | null
    createdBy?: number | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type api_keysUncheckedCreateInput = {
    id?: number
    secret?: string | null
    createdBy?: number | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type api_keysUpdateInput = {
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_keysUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_keysUpdateManyMutationInput = {
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_keysUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_documentsCreateInput = {
    docId: string
    filename: string
    docpath: string
    metadata?: string | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace: workspacesCreateNestedOneWithoutDocumentsInput
  }

  export type workspace_documentsUncheckedCreateInput = {
    id?: number
    docId: string
    filename: string
    docpath: string
    workspaceId: number
    metadata?: string | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_documentsUpdateInput = {
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace?: workspacesUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type workspace_documentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    workspaceId?: IntFieldUpdateOperationsInput | number
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_documentsUpdateManyMutationInput = {
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_documentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    workspaceId?: IntFieldUpdateOperationsInput | number
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invitesCreateInput = {
    code: string
    status?: string
    claimedBy?: number | null
    createdAt?: Date | string
    createdBy: number
    lastUpdatedAt?: Date | string
  }

  export type invitesUncheckedCreateInput = {
    id?: number
    code: string
    status?: string
    claimedBy?: number | null
    createdAt?: Date | string
    createdBy: number
    lastUpdatedAt?: Date | string
  }

  export type invitesUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    claimedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invitesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    claimedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invitesUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    claimedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invitesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    claimedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type system_settingsCreateInput = {
    label: string
    value?: string | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type system_settingsUncheckedCreateInput = {
    id?: number
    label: string
    value?: string | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type system_settingsUpdateInput = {
    label?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type system_settingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type system_settingsUpdateManyMutationInput = {
    label?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type system_settingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateInput = {
    username?: string | null
    password: string
    role?: string
    suspended?: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace_chats?: workspace_chatsCreateNestedManyWithoutUsersInput
    workspace_users?: workspace_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    username?: string | null
    password: string
    role?: string
    suspended?: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace_chats?: workspace_chatsUncheckedCreateNestedManyWithoutUsersInput
    workspace_users?: workspace_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace_chats?: workspace_chatsUpdateManyWithoutUsersNestedInput
    workspace_users?: workspace_usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace_chats?: workspace_chatsUncheckedUpdateManyWithoutUsersNestedInput
    workspace_users?: workspace_usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpdateManyMutationInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type document_vectorsCreateInput = {
    docId: string
    vectorId: string
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type document_vectorsUncheckedCreateInput = {
    id?: number
    docId: string
    vectorId: string
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type document_vectorsUpdateInput = {
    docId?: StringFieldUpdateOperationsInput | string
    vectorId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type document_vectorsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    docId?: StringFieldUpdateOperationsInput | string
    vectorId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type document_vectorsUpdateManyMutationInput = {
    docId?: StringFieldUpdateOperationsInput | string
    vectorId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type document_vectorsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    docId?: StringFieldUpdateOperationsInput | string
    vectorId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type welcome_messagesCreateInput = {
    user: string
    response: string
    orderIndex?: number | null
    createdAt?: Date | string
  }

  export type welcome_messagesUncheckedCreateInput = {
    id?: number
    user: string
    response: string
    orderIndex?: number | null
    createdAt?: Date | string
  }

  export type welcome_messagesUpdateInput = {
    user?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    orderIndex?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type welcome_messagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    orderIndex?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type welcome_messagesUpdateManyMutationInput = {
    user?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    orderIndex?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type welcome_messagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    orderIndex?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspacesCreateInput = {
    name: string
    slug: string
    vectorTag?: string | null
    createdAt?: Date | string
    openAiTemp?: number | null
    openAiHistory?: number
    lastUpdatedAt?: Date | string
    openAiPrompt?: string | null
    workspace_users?: workspace_usersCreateNestedManyWithoutWorkspacesInput
    documents?: workspace_documentsCreateNestedManyWithoutWorkspaceInput
  }

  export type workspacesUncheckedCreateInput = {
    id?: number
    name: string
    slug: string
    vectorTag?: string | null
    createdAt?: Date | string
    openAiTemp?: number | null
    openAiHistory?: number
    lastUpdatedAt?: Date | string
    openAiPrompt?: string | null
    workspace_users?: workspace_usersUncheckedCreateNestedManyWithoutWorkspacesInput
    documents?: workspace_documentsUncheckedCreateNestedManyWithoutWorkspaceInput
  }

  export type workspacesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    workspace_users?: workspace_usersUpdateManyWithoutWorkspacesNestedInput
    documents?: workspace_documentsUpdateManyWithoutWorkspaceNestedInput
  }

  export type workspacesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    workspace_users?: workspace_usersUncheckedUpdateManyWithoutWorkspacesNestedInput
    documents?: workspace_documentsUncheckedUpdateManyWithoutWorkspaceNestedInput
  }

  export type workspacesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type workspacesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type workspace_chatsCreateInput = {
    workspaceId: number
    prompt: string
    response: string
    include?: boolean
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    users?: usersCreateNestedOneWithoutWorkspace_chatsInput
  }

  export type workspace_chatsUncheckedCreateInput = {
    id?: number
    workspaceId: number
    prompt: string
    response: string
    include?: boolean
    user_id?: number | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_chatsUpdateInput = {
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutWorkspace_chatsNestedInput
  }

  export type workspace_chatsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_chatsUpdateManyMutationInput = {
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_chatsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersCreateInput = {
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspaces: workspacesCreateNestedOneWithoutWorkspace_usersInput
    users: usersCreateNestedOneWithoutWorkspace_usersInput
  }

  export type workspace_usersUncheckedCreateInput = {
    id?: number
    user_id: number
    workspace_id: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_usersUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspaces?: workspacesUpdateOneRequiredWithoutWorkspace_usersNestedInput
    users?: usersUpdateOneRequiredWithoutWorkspace_usersNestedInput
  }

  export type workspace_usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    workspace_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    workspace_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type api_keysCountOrderByAggregateInput = {
    id?: SortOrder
    secret?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type api_keysAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
  }

  export type api_keysMaxOrderByAggregateInput = {
    id?: SortOrder
    secret?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type api_keysMinOrderByAggregateInput = {
    id?: SortOrder
    secret?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type api_keysSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type WorkspacesRelationFilter = {
    is?: workspacesWhereInput
    isNot?: workspacesWhereInput
  }

  export type workspace_documentsCountOrderByAggregateInput = {
    id?: SortOrder
    docId?: SortOrder
    filename?: SortOrder
    docpath?: SortOrder
    workspaceId?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_documentsAvgOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
  }

  export type workspace_documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    docId?: SortOrder
    filename?: SortOrder
    docpath?: SortOrder
    workspaceId?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_documentsMinOrderByAggregateInput = {
    id?: SortOrder
    docId?: SortOrder
    filename?: SortOrder
    docpath?: SortOrder
    workspaceId?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_documentsSumOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type invitesCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    status?: SortOrder
    claimedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type invitesAvgOrderByAggregateInput = {
    id?: SortOrder
    claimedBy?: SortOrder
    createdBy?: SortOrder
  }

  export type invitesMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    status?: SortOrder
    claimedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type invitesMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    status?: SortOrder
    claimedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type invitesSumOrderByAggregateInput = {
    id?: SortOrder
    claimedBy?: SortOrder
    createdBy?: SortOrder
  }

  export type system_settingsCountOrderByAggregateInput = {
    id?: SortOrder
    label?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type system_settingsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type system_settingsMaxOrderByAggregateInput = {
    id?: SortOrder
    label?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type system_settingsMinOrderByAggregateInput = {
    id?: SortOrder
    label?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type system_settingsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Workspace_chatsListRelationFilter = {
    every?: workspace_chatsWhereInput
    some?: workspace_chatsWhereInput
    none?: workspace_chatsWhereInput
  }

  export type Workspace_usersListRelationFilter = {
    every?: workspace_usersWhereInput
    some?: workspace_usersWhereInput
    none?: workspace_usersWhereInput
  }

  export type workspace_chatsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type workspace_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    suspended?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    suspended?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    suspended?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    suspended?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    suspended?: SortOrder
  }

  export type document_vectorsCountOrderByAggregateInput = {
    id?: SortOrder
    docId?: SortOrder
    vectorId?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type document_vectorsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type document_vectorsMaxOrderByAggregateInput = {
    id?: SortOrder
    docId?: SortOrder
    vectorId?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type document_vectorsMinOrderByAggregateInput = {
    id?: SortOrder
    docId?: SortOrder
    vectorId?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type document_vectorsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type welcome_messagesCountOrderByAggregateInput = {
    id?: SortOrder
    user?: SortOrder
    response?: SortOrder
    orderIndex?: SortOrder
    createdAt?: SortOrder
  }

  export type welcome_messagesAvgOrderByAggregateInput = {
    id?: SortOrder
    orderIndex?: SortOrder
  }

  export type welcome_messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    user?: SortOrder
    response?: SortOrder
    orderIndex?: SortOrder
    createdAt?: SortOrder
  }

  export type welcome_messagesMinOrderByAggregateInput = {
    id?: SortOrder
    user?: SortOrder
    response?: SortOrder
    orderIndex?: SortOrder
    createdAt?: SortOrder
  }

  export type welcome_messagesSumOrderByAggregateInput = {
    id?: SortOrder
    orderIndex?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Workspace_documentsListRelationFilter = {
    every?: workspace_documentsWhereInput
    some?: workspace_documentsWhereInput
    none?: workspace_documentsWhereInput
  }

  export type workspace_documentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type workspacesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    vectorTag?: SortOrder
    createdAt?: SortOrder
    openAiTemp?: SortOrder
    openAiHistory?: SortOrder
    lastUpdatedAt?: SortOrder
    openAiPrompt?: SortOrder
  }

  export type workspacesAvgOrderByAggregateInput = {
    id?: SortOrder
    openAiTemp?: SortOrder
    openAiHistory?: SortOrder
  }

  export type workspacesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    vectorTag?: SortOrder
    createdAt?: SortOrder
    openAiTemp?: SortOrder
    openAiHistory?: SortOrder
    lastUpdatedAt?: SortOrder
    openAiPrompt?: SortOrder
  }

  export type workspacesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    vectorTag?: SortOrder
    createdAt?: SortOrder
    openAiTemp?: SortOrder
    openAiHistory?: SortOrder
    lastUpdatedAt?: SortOrder
    openAiPrompt?: SortOrder
  }

  export type workspacesSumOrderByAggregateInput = {
    id?: SortOrder
    openAiTemp?: SortOrder
    openAiHistory?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsersNullableRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type workspace_chatsCountOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    include?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_chatsAvgOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    user_id?: SortOrder
  }

  export type workspace_chatsMaxOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    include?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_chatsMinOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    include?: SortOrder
    user_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_chatsSumOrderByAggregateInput = {
    id?: SortOrder
    workspaceId?: SortOrder
    user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type workspace_usersCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_usersAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
  }

  export type workspace_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_usersMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
    createdAt?: SortOrder
    lastUpdatedAt?: SortOrder
  }

  export type workspace_usersSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    workspace_id?: SortOrder
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type workspacesCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<workspacesCreateWithoutDocumentsInput, workspacesUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: workspacesCreateOrConnectWithoutDocumentsInput
    connect?: workspacesWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type workspacesUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<workspacesCreateWithoutDocumentsInput, workspacesUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: workspacesCreateOrConnectWithoutDocumentsInput
    upsert?: workspacesUpsertWithoutDocumentsInput
    connect?: workspacesWhereUniqueInput
    update?: XOR<XOR<workspacesUpdateToOneWithWhereWithoutDocumentsInput, workspacesUpdateWithoutDocumentsInput>, workspacesUncheckedUpdateWithoutDocumentsInput>
  }

  export type workspace_chatsCreateNestedManyWithoutUsersInput = {
    create?: XOR<workspace_chatsCreateWithoutUsersInput, workspace_chatsUncheckedCreateWithoutUsersInput> | workspace_chatsCreateWithoutUsersInput[] | workspace_chatsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_chatsCreateOrConnectWithoutUsersInput | workspace_chatsCreateOrConnectWithoutUsersInput[]
    connect?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
  }

  export type workspace_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<workspace_usersCreateWithoutUsersInput, workspace_usersUncheckedCreateWithoutUsersInput> | workspace_usersCreateWithoutUsersInput[] | workspace_usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutUsersInput | workspace_usersCreateOrConnectWithoutUsersInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
  }

  export type workspace_chatsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<workspace_chatsCreateWithoutUsersInput, workspace_chatsUncheckedCreateWithoutUsersInput> | workspace_chatsCreateWithoutUsersInput[] | workspace_chatsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_chatsCreateOrConnectWithoutUsersInput | workspace_chatsCreateOrConnectWithoutUsersInput[]
    connect?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
  }

  export type workspace_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<workspace_usersCreateWithoutUsersInput, workspace_usersUncheckedCreateWithoutUsersInput> | workspace_usersCreateWithoutUsersInput[] | workspace_usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutUsersInput | workspace_usersCreateOrConnectWithoutUsersInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
  }

  export type workspace_chatsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<workspace_chatsCreateWithoutUsersInput, workspace_chatsUncheckedCreateWithoutUsersInput> | workspace_chatsCreateWithoutUsersInput[] | workspace_chatsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_chatsCreateOrConnectWithoutUsersInput | workspace_chatsCreateOrConnectWithoutUsersInput[]
    upsert?: workspace_chatsUpsertWithWhereUniqueWithoutUsersInput | workspace_chatsUpsertWithWhereUniqueWithoutUsersInput[]
    set?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    disconnect?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    delete?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    connect?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    update?: workspace_chatsUpdateWithWhereUniqueWithoutUsersInput | workspace_chatsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: workspace_chatsUpdateManyWithWhereWithoutUsersInput | workspace_chatsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: workspace_chatsScalarWhereInput | workspace_chatsScalarWhereInput[]
  }

  export type workspace_usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<workspace_usersCreateWithoutUsersInput, workspace_usersUncheckedCreateWithoutUsersInput> | workspace_usersCreateWithoutUsersInput[] | workspace_usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutUsersInput | workspace_usersCreateOrConnectWithoutUsersInput[]
    upsert?: workspace_usersUpsertWithWhereUniqueWithoutUsersInput | workspace_usersUpsertWithWhereUniqueWithoutUsersInput[]
    set?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    disconnect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    delete?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    update?: workspace_usersUpdateWithWhereUniqueWithoutUsersInput | workspace_usersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: workspace_usersUpdateManyWithWhereWithoutUsersInput | workspace_usersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: workspace_usersScalarWhereInput | workspace_usersScalarWhereInput[]
  }

  export type workspace_chatsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<workspace_chatsCreateWithoutUsersInput, workspace_chatsUncheckedCreateWithoutUsersInput> | workspace_chatsCreateWithoutUsersInput[] | workspace_chatsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_chatsCreateOrConnectWithoutUsersInput | workspace_chatsCreateOrConnectWithoutUsersInput[]
    upsert?: workspace_chatsUpsertWithWhereUniqueWithoutUsersInput | workspace_chatsUpsertWithWhereUniqueWithoutUsersInput[]
    set?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    disconnect?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    delete?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    connect?: workspace_chatsWhereUniqueInput | workspace_chatsWhereUniqueInput[]
    update?: workspace_chatsUpdateWithWhereUniqueWithoutUsersInput | workspace_chatsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: workspace_chatsUpdateManyWithWhereWithoutUsersInput | workspace_chatsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: workspace_chatsScalarWhereInput | workspace_chatsScalarWhereInput[]
  }

  export type workspace_usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<workspace_usersCreateWithoutUsersInput, workspace_usersUncheckedCreateWithoutUsersInput> | workspace_usersCreateWithoutUsersInput[] | workspace_usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutUsersInput | workspace_usersCreateOrConnectWithoutUsersInput[]
    upsert?: workspace_usersUpsertWithWhereUniqueWithoutUsersInput | workspace_usersUpsertWithWhereUniqueWithoutUsersInput[]
    set?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    disconnect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    delete?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    update?: workspace_usersUpdateWithWhereUniqueWithoutUsersInput | workspace_usersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: workspace_usersUpdateManyWithWhereWithoutUsersInput | workspace_usersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: workspace_usersScalarWhereInput | workspace_usersScalarWhereInput[]
  }

  export type workspace_usersCreateNestedManyWithoutWorkspacesInput = {
    create?: XOR<workspace_usersCreateWithoutWorkspacesInput, workspace_usersUncheckedCreateWithoutWorkspacesInput> | workspace_usersCreateWithoutWorkspacesInput[] | workspace_usersUncheckedCreateWithoutWorkspacesInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutWorkspacesInput | workspace_usersCreateOrConnectWithoutWorkspacesInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
  }

  export type workspace_documentsCreateNestedManyWithoutWorkspaceInput = {
    create?: XOR<workspace_documentsCreateWithoutWorkspaceInput, workspace_documentsUncheckedCreateWithoutWorkspaceInput> | workspace_documentsCreateWithoutWorkspaceInput[] | workspace_documentsUncheckedCreateWithoutWorkspaceInput[]
    connectOrCreate?: workspace_documentsCreateOrConnectWithoutWorkspaceInput | workspace_documentsCreateOrConnectWithoutWorkspaceInput[]
    connect?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
  }

  export type workspace_usersUncheckedCreateNestedManyWithoutWorkspacesInput = {
    create?: XOR<workspace_usersCreateWithoutWorkspacesInput, workspace_usersUncheckedCreateWithoutWorkspacesInput> | workspace_usersCreateWithoutWorkspacesInput[] | workspace_usersUncheckedCreateWithoutWorkspacesInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutWorkspacesInput | workspace_usersCreateOrConnectWithoutWorkspacesInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
  }

  export type workspace_documentsUncheckedCreateNestedManyWithoutWorkspaceInput = {
    create?: XOR<workspace_documentsCreateWithoutWorkspaceInput, workspace_documentsUncheckedCreateWithoutWorkspaceInput> | workspace_documentsCreateWithoutWorkspaceInput[] | workspace_documentsUncheckedCreateWithoutWorkspaceInput[]
    connectOrCreate?: workspace_documentsCreateOrConnectWithoutWorkspaceInput | workspace_documentsCreateOrConnectWithoutWorkspaceInput[]
    connect?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type workspace_usersUpdateManyWithoutWorkspacesNestedInput = {
    create?: XOR<workspace_usersCreateWithoutWorkspacesInput, workspace_usersUncheckedCreateWithoutWorkspacesInput> | workspace_usersCreateWithoutWorkspacesInput[] | workspace_usersUncheckedCreateWithoutWorkspacesInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutWorkspacesInput | workspace_usersCreateOrConnectWithoutWorkspacesInput[]
    upsert?: workspace_usersUpsertWithWhereUniqueWithoutWorkspacesInput | workspace_usersUpsertWithWhereUniqueWithoutWorkspacesInput[]
    set?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    disconnect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    delete?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    update?: workspace_usersUpdateWithWhereUniqueWithoutWorkspacesInput | workspace_usersUpdateWithWhereUniqueWithoutWorkspacesInput[]
    updateMany?: workspace_usersUpdateManyWithWhereWithoutWorkspacesInput | workspace_usersUpdateManyWithWhereWithoutWorkspacesInput[]
    deleteMany?: workspace_usersScalarWhereInput | workspace_usersScalarWhereInput[]
  }

  export type workspace_documentsUpdateManyWithoutWorkspaceNestedInput = {
    create?: XOR<workspace_documentsCreateWithoutWorkspaceInput, workspace_documentsUncheckedCreateWithoutWorkspaceInput> | workspace_documentsCreateWithoutWorkspaceInput[] | workspace_documentsUncheckedCreateWithoutWorkspaceInput[]
    connectOrCreate?: workspace_documentsCreateOrConnectWithoutWorkspaceInput | workspace_documentsCreateOrConnectWithoutWorkspaceInput[]
    upsert?: workspace_documentsUpsertWithWhereUniqueWithoutWorkspaceInput | workspace_documentsUpsertWithWhereUniqueWithoutWorkspaceInput[]
    set?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    disconnect?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    delete?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    connect?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    update?: workspace_documentsUpdateWithWhereUniqueWithoutWorkspaceInput | workspace_documentsUpdateWithWhereUniqueWithoutWorkspaceInput[]
    updateMany?: workspace_documentsUpdateManyWithWhereWithoutWorkspaceInput | workspace_documentsUpdateManyWithWhereWithoutWorkspaceInput[]
    deleteMany?: workspace_documentsScalarWhereInput | workspace_documentsScalarWhereInput[]
  }

  export type workspace_usersUncheckedUpdateManyWithoutWorkspacesNestedInput = {
    create?: XOR<workspace_usersCreateWithoutWorkspacesInput, workspace_usersUncheckedCreateWithoutWorkspacesInput> | workspace_usersCreateWithoutWorkspacesInput[] | workspace_usersUncheckedCreateWithoutWorkspacesInput[]
    connectOrCreate?: workspace_usersCreateOrConnectWithoutWorkspacesInput | workspace_usersCreateOrConnectWithoutWorkspacesInput[]
    upsert?: workspace_usersUpsertWithWhereUniqueWithoutWorkspacesInput | workspace_usersUpsertWithWhereUniqueWithoutWorkspacesInput[]
    set?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    disconnect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    delete?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    connect?: workspace_usersWhereUniqueInput | workspace_usersWhereUniqueInput[]
    update?: workspace_usersUpdateWithWhereUniqueWithoutWorkspacesInput | workspace_usersUpdateWithWhereUniqueWithoutWorkspacesInput[]
    updateMany?: workspace_usersUpdateManyWithWhereWithoutWorkspacesInput | workspace_usersUpdateManyWithWhereWithoutWorkspacesInput[]
    deleteMany?: workspace_usersScalarWhereInput | workspace_usersScalarWhereInput[]
  }

  export type workspace_documentsUncheckedUpdateManyWithoutWorkspaceNestedInput = {
    create?: XOR<workspace_documentsCreateWithoutWorkspaceInput, workspace_documentsUncheckedCreateWithoutWorkspaceInput> | workspace_documentsCreateWithoutWorkspaceInput[] | workspace_documentsUncheckedCreateWithoutWorkspaceInput[]
    connectOrCreate?: workspace_documentsCreateOrConnectWithoutWorkspaceInput | workspace_documentsCreateOrConnectWithoutWorkspaceInput[]
    upsert?: workspace_documentsUpsertWithWhereUniqueWithoutWorkspaceInput | workspace_documentsUpsertWithWhereUniqueWithoutWorkspaceInput[]
    set?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    disconnect?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    delete?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    connect?: workspace_documentsWhereUniqueInput | workspace_documentsWhereUniqueInput[]
    update?: workspace_documentsUpdateWithWhereUniqueWithoutWorkspaceInput | workspace_documentsUpdateWithWhereUniqueWithoutWorkspaceInput[]
    updateMany?: workspace_documentsUpdateManyWithWhereWithoutWorkspaceInput | workspace_documentsUpdateManyWithWhereWithoutWorkspaceInput[]
    deleteMany?: workspace_documentsScalarWhereInput | workspace_documentsScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutWorkspace_chatsInput = {
    create?: XOR<usersCreateWithoutWorkspace_chatsInput, usersUncheckedCreateWithoutWorkspace_chatsInput>
    connectOrCreate?: usersCreateOrConnectWithoutWorkspace_chatsInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type usersUpdateOneWithoutWorkspace_chatsNestedInput = {
    create?: XOR<usersCreateWithoutWorkspace_chatsInput, usersUncheckedCreateWithoutWorkspace_chatsInput>
    connectOrCreate?: usersCreateOrConnectWithoutWorkspace_chatsInput
    upsert?: usersUpsertWithoutWorkspace_chatsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutWorkspace_chatsInput, usersUpdateWithoutWorkspace_chatsInput>, usersUncheckedUpdateWithoutWorkspace_chatsInput>
  }

  export type workspacesCreateNestedOneWithoutWorkspace_usersInput = {
    create?: XOR<workspacesCreateWithoutWorkspace_usersInput, workspacesUncheckedCreateWithoutWorkspace_usersInput>
    connectOrCreate?: workspacesCreateOrConnectWithoutWorkspace_usersInput
    connect?: workspacesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutWorkspace_usersInput = {
    create?: XOR<usersCreateWithoutWorkspace_usersInput, usersUncheckedCreateWithoutWorkspace_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutWorkspace_usersInput
    connect?: usersWhereUniqueInput
  }

  export type workspacesUpdateOneRequiredWithoutWorkspace_usersNestedInput = {
    create?: XOR<workspacesCreateWithoutWorkspace_usersInput, workspacesUncheckedCreateWithoutWorkspace_usersInput>
    connectOrCreate?: workspacesCreateOrConnectWithoutWorkspace_usersInput
    upsert?: workspacesUpsertWithoutWorkspace_usersInput
    connect?: workspacesWhereUniqueInput
    update?: XOR<XOR<workspacesUpdateToOneWithWhereWithoutWorkspace_usersInput, workspacesUpdateWithoutWorkspace_usersInput>, workspacesUncheckedUpdateWithoutWorkspace_usersInput>
  }

  export type usersUpdateOneRequiredWithoutWorkspace_usersNestedInput = {
    create?: XOR<usersCreateWithoutWorkspace_usersInput, usersUncheckedCreateWithoutWorkspace_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutWorkspace_usersInput
    upsert?: usersUpsertWithoutWorkspace_usersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutWorkspace_usersInput, usersUpdateWithoutWorkspace_usersInput>, usersUncheckedUpdateWithoutWorkspace_usersInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type workspacesCreateWithoutDocumentsInput = {
    name: string
    slug: string
    vectorTag?: string | null
    createdAt?: Date | string
    openAiTemp?: number | null
    openAiHistory?: number
    lastUpdatedAt?: Date | string
    openAiPrompt?: string | null
    workspace_users?: workspace_usersCreateNestedManyWithoutWorkspacesInput
  }

  export type workspacesUncheckedCreateWithoutDocumentsInput = {
    id?: number
    name: string
    slug: string
    vectorTag?: string | null
    createdAt?: Date | string
    openAiTemp?: number | null
    openAiHistory?: number
    lastUpdatedAt?: Date | string
    openAiPrompt?: string | null
    workspace_users?: workspace_usersUncheckedCreateNestedManyWithoutWorkspacesInput
  }

  export type workspacesCreateOrConnectWithoutDocumentsInput = {
    where: workspacesWhereUniqueInput
    create: XOR<workspacesCreateWithoutDocumentsInput, workspacesUncheckedCreateWithoutDocumentsInput>
  }

  export type workspacesUpsertWithoutDocumentsInput = {
    update: XOR<workspacesUpdateWithoutDocumentsInput, workspacesUncheckedUpdateWithoutDocumentsInput>
    create: XOR<workspacesCreateWithoutDocumentsInput, workspacesUncheckedCreateWithoutDocumentsInput>
    where?: workspacesWhereInput
  }

  export type workspacesUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: workspacesWhereInput
    data: XOR<workspacesUpdateWithoutDocumentsInput, workspacesUncheckedUpdateWithoutDocumentsInput>
  }

  export type workspacesUpdateWithoutDocumentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    workspace_users?: workspace_usersUpdateManyWithoutWorkspacesNestedInput
  }

  export type workspacesUncheckedUpdateWithoutDocumentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    workspace_users?: workspace_usersUncheckedUpdateManyWithoutWorkspacesNestedInput
  }

  export type workspace_chatsCreateWithoutUsersInput = {
    workspaceId: number
    prompt: string
    response: string
    include?: boolean
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_chatsUncheckedCreateWithoutUsersInput = {
    id?: number
    workspaceId: number
    prompt: string
    response: string
    include?: boolean
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_chatsCreateOrConnectWithoutUsersInput = {
    where: workspace_chatsWhereUniqueInput
    create: XOR<workspace_chatsCreateWithoutUsersInput, workspace_chatsUncheckedCreateWithoutUsersInput>
  }

  export type workspace_usersCreateWithoutUsersInput = {
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspaces: workspacesCreateNestedOneWithoutWorkspace_usersInput
  }

  export type workspace_usersUncheckedCreateWithoutUsersInput = {
    id?: number
    workspace_id: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_usersCreateOrConnectWithoutUsersInput = {
    where: workspace_usersWhereUniqueInput
    create: XOR<workspace_usersCreateWithoutUsersInput, workspace_usersUncheckedCreateWithoutUsersInput>
  }

  export type workspace_chatsUpsertWithWhereUniqueWithoutUsersInput = {
    where: workspace_chatsWhereUniqueInput
    update: XOR<workspace_chatsUpdateWithoutUsersInput, workspace_chatsUncheckedUpdateWithoutUsersInput>
    create: XOR<workspace_chatsCreateWithoutUsersInput, workspace_chatsUncheckedCreateWithoutUsersInput>
  }

  export type workspace_chatsUpdateWithWhereUniqueWithoutUsersInput = {
    where: workspace_chatsWhereUniqueInput
    data: XOR<workspace_chatsUpdateWithoutUsersInput, workspace_chatsUncheckedUpdateWithoutUsersInput>
  }

  export type workspace_chatsUpdateManyWithWhereWithoutUsersInput = {
    where: workspace_chatsScalarWhereInput
    data: XOR<workspace_chatsUpdateManyMutationInput, workspace_chatsUncheckedUpdateManyWithoutUsersInput>
  }

  export type workspace_chatsScalarWhereInput = {
    AND?: workspace_chatsScalarWhereInput | workspace_chatsScalarWhereInput[]
    OR?: workspace_chatsScalarWhereInput[]
    NOT?: workspace_chatsScalarWhereInput | workspace_chatsScalarWhereInput[]
    id?: IntFilter<"workspace_chats"> | number
    workspaceId?: IntFilter<"workspace_chats"> | number
    prompt?: StringFilter<"workspace_chats"> | string
    response?: StringFilter<"workspace_chats"> | string
    include?: BoolFilter<"workspace_chats"> | boolean
    user_id?: IntNullableFilter<"workspace_chats"> | number | null
    createdAt?: DateTimeFilter<"workspace_chats"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_chats"> | Date | string
  }

  export type workspace_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: workspace_usersWhereUniqueInput
    update: XOR<workspace_usersUpdateWithoutUsersInput, workspace_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<workspace_usersCreateWithoutUsersInput, workspace_usersUncheckedCreateWithoutUsersInput>
  }

  export type workspace_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: workspace_usersWhereUniqueInput
    data: XOR<workspace_usersUpdateWithoutUsersInput, workspace_usersUncheckedUpdateWithoutUsersInput>
  }

  export type workspace_usersUpdateManyWithWhereWithoutUsersInput = {
    where: workspace_usersScalarWhereInput
    data: XOR<workspace_usersUpdateManyMutationInput, workspace_usersUncheckedUpdateManyWithoutUsersInput>
  }

  export type workspace_usersScalarWhereInput = {
    AND?: workspace_usersScalarWhereInput | workspace_usersScalarWhereInput[]
    OR?: workspace_usersScalarWhereInput[]
    NOT?: workspace_usersScalarWhereInput | workspace_usersScalarWhereInput[]
    id?: IntFilter<"workspace_users"> | number
    user_id?: IntFilter<"workspace_users"> | number
    workspace_id?: IntFilter<"workspace_users"> | number
    createdAt?: DateTimeFilter<"workspace_users"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_users"> | Date | string
  }

  export type workspace_usersCreateWithoutWorkspacesInput = {
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    users: usersCreateNestedOneWithoutWorkspace_usersInput
  }

  export type workspace_usersUncheckedCreateWithoutWorkspacesInput = {
    id?: number
    user_id: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_usersCreateOrConnectWithoutWorkspacesInput = {
    where: workspace_usersWhereUniqueInput
    create: XOR<workspace_usersCreateWithoutWorkspacesInput, workspace_usersUncheckedCreateWithoutWorkspacesInput>
  }

  export type workspace_documentsCreateWithoutWorkspaceInput = {
    docId: string
    filename: string
    docpath: string
    metadata?: string | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_documentsUncheckedCreateWithoutWorkspaceInput = {
    id?: number
    docId: string
    filename: string
    docpath: string
    metadata?: string | null
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
  }

  export type workspace_documentsCreateOrConnectWithoutWorkspaceInput = {
    where: workspace_documentsWhereUniqueInput
    create: XOR<workspace_documentsCreateWithoutWorkspaceInput, workspace_documentsUncheckedCreateWithoutWorkspaceInput>
  }

  export type workspace_usersUpsertWithWhereUniqueWithoutWorkspacesInput = {
    where: workspace_usersWhereUniqueInput
    update: XOR<workspace_usersUpdateWithoutWorkspacesInput, workspace_usersUncheckedUpdateWithoutWorkspacesInput>
    create: XOR<workspace_usersCreateWithoutWorkspacesInput, workspace_usersUncheckedCreateWithoutWorkspacesInput>
  }

  export type workspace_usersUpdateWithWhereUniqueWithoutWorkspacesInput = {
    where: workspace_usersWhereUniqueInput
    data: XOR<workspace_usersUpdateWithoutWorkspacesInput, workspace_usersUncheckedUpdateWithoutWorkspacesInput>
  }

  export type workspace_usersUpdateManyWithWhereWithoutWorkspacesInput = {
    where: workspace_usersScalarWhereInput
    data: XOR<workspace_usersUpdateManyMutationInput, workspace_usersUncheckedUpdateManyWithoutWorkspacesInput>
  }

  export type workspace_documentsUpsertWithWhereUniqueWithoutWorkspaceInput = {
    where: workspace_documentsWhereUniqueInput
    update: XOR<workspace_documentsUpdateWithoutWorkspaceInput, workspace_documentsUncheckedUpdateWithoutWorkspaceInput>
    create: XOR<workspace_documentsCreateWithoutWorkspaceInput, workspace_documentsUncheckedCreateWithoutWorkspaceInput>
  }

  export type workspace_documentsUpdateWithWhereUniqueWithoutWorkspaceInput = {
    where: workspace_documentsWhereUniqueInput
    data: XOR<workspace_documentsUpdateWithoutWorkspaceInput, workspace_documentsUncheckedUpdateWithoutWorkspaceInput>
  }

  export type workspace_documentsUpdateManyWithWhereWithoutWorkspaceInput = {
    where: workspace_documentsScalarWhereInput
    data: XOR<workspace_documentsUpdateManyMutationInput, workspace_documentsUncheckedUpdateManyWithoutWorkspaceInput>
  }

  export type workspace_documentsScalarWhereInput = {
    AND?: workspace_documentsScalarWhereInput | workspace_documentsScalarWhereInput[]
    OR?: workspace_documentsScalarWhereInput[]
    NOT?: workspace_documentsScalarWhereInput | workspace_documentsScalarWhereInput[]
    id?: IntFilter<"workspace_documents"> | number
    docId?: StringFilter<"workspace_documents"> | string
    filename?: StringFilter<"workspace_documents"> | string
    docpath?: StringFilter<"workspace_documents"> | string
    workspaceId?: IntFilter<"workspace_documents"> | number
    metadata?: StringNullableFilter<"workspace_documents"> | string | null
    createdAt?: DateTimeFilter<"workspace_documents"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"workspace_documents"> | Date | string
  }

  export type usersCreateWithoutWorkspace_chatsInput = {
    username?: string | null
    password: string
    role?: string
    suspended?: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace_users?: workspace_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutWorkspace_chatsInput = {
    id?: number
    username?: string | null
    password: string
    role?: string
    suspended?: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace_users?: workspace_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutWorkspace_chatsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutWorkspace_chatsInput, usersUncheckedCreateWithoutWorkspace_chatsInput>
  }

  export type usersUpsertWithoutWorkspace_chatsInput = {
    update: XOR<usersUpdateWithoutWorkspace_chatsInput, usersUncheckedUpdateWithoutWorkspace_chatsInput>
    create: XOR<usersCreateWithoutWorkspace_chatsInput, usersUncheckedCreateWithoutWorkspace_chatsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutWorkspace_chatsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutWorkspace_chatsInput, usersUncheckedUpdateWithoutWorkspace_chatsInput>
  }

  export type usersUpdateWithoutWorkspace_chatsInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace_users?: workspace_usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutWorkspace_chatsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace_users?: workspace_usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type workspacesCreateWithoutWorkspace_usersInput = {
    name: string
    slug: string
    vectorTag?: string | null
    createdAt?: Date | string
    openAiTemp?: number | null
    openAiHistory?: number
    lastUpdatedAt?: Date | string
    openAiPrompt?: string | null
    documents?: workspace_documentsCreateNestedManyWithoutWorkspaceInput
  }

  export type workspacesUncheckedCreateWithoutWorkspace_usersInput = {
    id?: number
    name: string
    slug: string
    vectorTag?: string | null
    createdAt?: Date | string
    openAiTemp?: number | null
    openAiHistory?: number
    lastUpdatedAt?: Date | string
    openAiPrompt?: string | null
    documents?: workspace_documentsUncheckedCreateNestedManyWithoutWorkspaceInput
  }

  export type workspacesCreateOrConnectWithoutWorkspace_usersInput = {
    where: workspacesWhereUniqueInput
    create: XOR<workspacesCreateWithoutWorkspace_usersInput, workspacesUncheckedCreateWithoutWorkspace_usersInput>
  }

  export type usersCreateWithoutWorkspace_usersInput = {
    username?: string | null
    password: string
    role?: string
    suspended?: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace_chats?: workspace_chatsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutWorkspace_usersInput = {
    id?: number
    username?: string | null
    password: string
    role?: string
    suspended?: number
    createdAt?: Date | string
    lastUpdatedAt?: Date | string
    workspace_chats?: workspace_chatsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutWorkspace_usersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutWorkspace_usersInput, usersUncheckedCreateWithoutWorkspace_usersInput>
  }

  export type workspacesUpsertWithoutWorkspace_usersInput = {
    update: XOR<workspacesUpdateWithoutWorkspace_usersInput, workspacesUncheckedUpdateWithoutWorkspace_usersInput>
    create: XOR<workspacesCreateWithoutWorkspace_usersInput, workspacesUncheckedCreateWithoutWorkspace_usersInput>
    where?: workspacesWhereInput
  }

  export type workspacesUpdateToOneWithWhereWithoutWorkspace_usersInput = {
    where?: workspacesWhereInput
    data: XOR<workspacesUpdateWithoutWorkspace_usersInput, workspacesUncheckedUpdateWithoutWorkspace_usersInput>
  }

  export type workspacesUpdateWithoutWorkspace_usersInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: workspace_documentsUpdateManyWithoutWorkspaceNestedInput
  }

  export type workspacesUncheckedUpdateWithoutWorkspace_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    vectorTag?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiTemp?: NullableFloatFieldUpdateOperationsInput | number | null
    openAiHistory?: IntFieldUpdateOperationsInput | number
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    openAiPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: workspace_documentsUncheckedUpdateManyWithoutWorkspaceNestedInput
  }

  export type usersUpsertWithoutWorkspace_usersInput = {
    update: XOR<usersUpdateWithoutWorkspace_usersInput, usersUncheckedUpdateWithoutWorkspace_usersInput>
    create: XOR<usersCreateWithoutWorkspace_usersInput, usersUncheckedCreateWithoutWorkspace_usersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutWorkspace_usersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutWorkspace_usersInput, usersUncheckedUpdateWithoutWorkspace_usersInput>
  }

  export type usersUpdateWithoutWorkspace_usersInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace_chats?: workspace_chatsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutWorkspace_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    suspended?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspace_chats?: workspace_chatsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type workspace_chatsUpdateWithoutUsersInput = {
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_chatsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_chatsUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    workspaceId?: IntFieldUpdateOperationsInput | number
    prompt?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    include?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersUpdateWithoutUsersInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    workspaces?: workspacesUpdateOneRequiredWithoutWorkspace_usersNestedInput
  }

  export type workspace_usersUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    workspace_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    workspace_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersUpdateWithoutWorkspacesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutWorkspace_usersNestedInput
  }

  export type workspace_usersUncheckedUpdateWithoutWorkspacesInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_usersUncheckedUpdateManyWithoutWorkspacesInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_documentsUpdateWithoutWorkspaceInput = {
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_documentsUncheckedUpdateWithoutWorkspaceInput = {
    id?: IntFieldUpdateOperationsInput | number
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type workspace_documentsUncheckedUpdateManyWithoutWorkspaceInput = {
    id?: IntFieldUpdateOperationsInput | number
    docId?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    docpath?: StringFieldUpdateOperationsInput | string
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WorkspacesCountOutputTypeDefaultArgs instead
     */
    export type WorkspacesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WorkspacesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use api_keysDefaultArgs instead
     */
    export type api_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = api_keysDefaultArgs<ExtArgs>
    /**
     * @deprecated Use workspace_documentsDefaultArgs instead
     */
    export type workspace_documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = workspace_documentsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use invitesDefaultArgs instead
     */
    export type invitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = invitesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use system_settingsDefaultArgs instead
     */
    export type system_settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = system_settingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use document_vectorsDefaultArgs instead
     */
    export type document_vectorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = document_vectorsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use welcome_messagesDefaultArgs instead
     */
    export type welcome_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = welcome_messagesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use workspacesDefaultArgs instead
     */
    export type workspacesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = workspacesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use workspace_chatsDefaultArgs instead
     */
    export type workspace_chatsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = workspace_chatsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use workspace_usersDefaultArgs instead
     */
    export type workspace_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = workspace_usersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}