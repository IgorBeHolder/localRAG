
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.4.2
 * Query Engine version: ac9d7041ed77bcc8a8dbd2ab6616b39013829574
 */
Prisma.prismaVersion = {
  client: "5.4.2",
  engine: "ac9d7041ed77bcc8a8dbd2ab6616b39013829574"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.Api_keysScalarFieldEnum = {
  id: 'id',
  secret: 'secret',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Workspace_documentsScalarFieldEnum = {
  id: 'id',
  docId: 'docId',
  filename: 'filename',
  docpath: 'docpath',
  workspaceId: 'workspaceId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.InvitesScalarFieldEnum = {
  id: 'id',
  code: 'code',
  status: 'status',
  claimedBy: 'claimedBy',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.System_settingsScalarFieldEnum = {
  id: 'id',
  label: 'label',
  value: 'value',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  role: 'role',
  suspended: 'suspended',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Document_vectorsScalarFieldEnum = {
  id: 'id',
  docId: 'docId',
  vectorId: 'vectorId',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Welcome_messagesScalarFieldEnum = {
  id: 'id',
  user: 'user',
  response: 'response',
  orderIndex: 'orderIndex',
  createdAt: 'createdAt'
};

exports.Prisma.WorkspacesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  vectorTag: 'vectorTag',
  createdAt: 'createdAt',
  openAiTemp: 'openAiTemp',
  openAiHistory: 'openAiHistory',
  lastUpdatedAt: 'lastUpdatedAt',
  openAiPrompt: 'openAiPrompt'
};

exports.Prisma.Workspace_chatsScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  prompt: 'prompt',
  response: 'response',
  include: 'include',
  user_id: 'user_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Workspace_usersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  workspace_id: 'workspace_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  api_keys: 'api_keys',
  workspace_documents: 'workspace_documents',
  invites: 'invites',
  system_settings: 'system_settings',
  users: 'users',
  document_vectors: 'document_vectors',
  welcome_messages: 'welcome_messages',
  workspaces: 'workspaces',
  workspace_chats: 'workspace_chats',
  workspace_users: 'workspace_users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
